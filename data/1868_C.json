{
    "title": "C. Travel Plan",
    "timeLimit": {
        "value": 2.0,
        "unit": "seconds"
    },
    "memoryLimit": {
        "value": 512.0,
        "unit": "megabytes"
    },
    "statement": "<p>During the summer vacation after Zhongkao examination, Tom and Daniel are planning to go traveling.</p><p>There are $$$n$$$ cities in their country, numbered from $$$1$$$ to $$$n$$$. And the traffic system in the country is very special. For each city $$$i$$$ ($$$1 \\le i \\le n$$$), there is</p><ul> <li> a road between city $$$i$$$ and $$$2i$$$, if $$$2i\\le n$$$; </li><li> a road between city $$$i$$$ and $$$2i+1$$$, if $$$2i+1\\le n$$$. </li></ul><p>Making a travel plan, Daniel chooses some integer value between $$$1$$$ and $$$m$$$ for each city, for the $$$i$$$-th city we denote it by $$$a_i$$$.</p><p>Let $$$s_{i,j}$$$ be the maximum value of cities in the simple$$$^\\dagger$$$ path between cities $$$i$$$ and $$$j$$$. The <span class=\"tex-font-style-it\">score</span> of the travel plan is $$$\\sum_{i=1}^n\\sum_{j=i}^n s_{i,j}$$$. </p><p>Tom wants to know the sum of scores of all possible travel plans. Daniel asks you to help him find it. You just need to tell him the answer modulo $$$998\\,244\\,353$$$.</p><p>$$$^\\dagger$$$ A simple path between cities $$$x$$$ and $$$y$$$ is a path between them that passes through each city at most once.</p>",
    "inputSpecification": "<p>The first line of input contains a single integer $$$t$$$ ($$$1\\le t\\le 200$$$) \u2014 the number of test cases. The description of test cases follows.</p><p>The only line of each test case contains two integers $$$n$$$ and $$$m$$$ ($$$1\\leq n\\leq 10^{18}$$$, $$$1\\leq m\\leq 10^5$$$) \u2014 the number of the cities and the maximum value of a city.</p><p>It is guaranteed that the sum of $$$m$$$ over all test cases does not exceed $$$10^5$$$.</p>",
    "outputSpecification": "<p>For each test case output one integer \u2014 the sum of scores of all possible travel plans, modulo $$$998\\,244\\,353$$$.</p>",
    "samples": [
        {
            "input": "\n<div class=\"test-example-line test-example-line-even test-example-line-0\">5</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">3 1</div><div class=\"test-example-line test-example-line-even test-example-line-2\">2 2</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">10 9</div><div class=\"test-example-line test-example-line-even test-example-line-4\">43 20</div><div class=\"test-example-line test-example-line-odd test-example-line-5\">154 147</div>",
            "output": "\n6\n19\n583217643\n68816635\n714002110\n"
        }
    ],
    "note": "<p>In the first test case, there is only one possible travel plan:</p><center> <img class=\"tex-graphics\" src=\"https://espresso.codeforces.com/9661c81064d6d5fe5240b6faf7e9ca8c2223cbec.png\" style=\"max-width: 100.0%;max-height: 100.0%;\" width=\"227px\"/> </center><p>Path $$$1\\rightarrow 1$$$: $$$s_{1,1}=a_1=1$$$.</p><p>Path $$$1\\rightarrow 2$$$: $$$s_{1,2}=\\max(1,1)=1$$$.</p><p>Path $$$1\\rightarrow 3$$$: $$$s_{1,3}=\\max(1,1)=1$$$.</p><p>Path $$$2\\rightarrow 2$$$: $$$s_{2,2}=a_2=1$$$.</p><p>Path $$$2\\rightarrow 1\\rightarrow 3$$$: $$$s_{2,3}=\\max(1,1,1)=1$$$.</p><p>Path $$$3\\rightarrow 3$$$: $$$s_{3,3}=a_3=1$$$.</p><p>The score is $$$1+1+1+1+1+1=6$$$.</p><p>In the second test case, there are four possible travel plans:</p><center> <img class=\"tex-graphics\" src=\"https://espresso.codeforces.com/1a6a8718f98d12a588f5913ad7bb7740d8481449.png\" style=\"max-width: 100.0%;max-height: 100.0%;\" width=\"529px\"/> </center><p>Score of plan $$$1$$$: $$$1+1+1=3$$$.</p><p>Score of plan $$$2$$$: $$$1+2+2=5$$$.</p><p>Score of plan $$$3$$$: $$$2+2+1=5$$$.</p><p>Score of plan $$$4$$$: $$$2+2+2=6$$$.</p><p>Therefore, the sum of score is $$$3+5+5+6=19$$$.</p>",
    "contestId": 1868,
    "index": "C",
    "name": "Travel Plan",
    "type": "PROGRAMMING",
    "tags": [
        "combinatorics",
        "dp",
        "implementation",
        "math",
        "trees"
    ],
    "solvedCount": 1098
}