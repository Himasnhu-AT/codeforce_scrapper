{
    "title": "E. Tests for problem D",
    "timeLimit": {
        "value": 2.0,
        "unit": "seconds"
    },
    "memoryLimit": {
        "value": 256.0,
        "unit": "megabytes"
    },
    "statement": "<p>We had a really tough time generating tests for problem D. In order to prepare strong tests, we had to solve the following problem.</p><p>Given an undirected labeled tree consisting of $$$n$$$ vertices, find a set of segments such that:</p><ol> <li> both endpoints of each segment are integers from $$$1$$$ to $$$2n$$$, and each integer from $$$1$$$ to $$$2n$$$ should appear as an endpoint of exactly one segment; </li><li> all segments are non-degenerate; </li><li> for each pair $$$(i, j)$$$ such that $$$i \\ne j$$$, $$$i \\in [1, n]$$$ and $$$j \\in [1, n]$$$, the vertices $$$i$$$ and $$$j$$$ are connected with an edge if and only if the segments $$$i$$$ and $$$j$$$ intersect, but neither segment $$$i$$$ is fully contained in segment $$$j$$$, nor segment $$$j$$$ is fully contained in segment $$$i$$$. </li></ol><p>Can you solve this problem too?</p>",
    "inputSpecification": "<p>The first line contains one integer $$$n$$$ ($$$1 \\le n \\le 5 \\cdot 10^5$$$) \u2014 the number of vertices in the tree.</p><p>Then $$$n - 1$$$ lines follow, each containing two integers $$$x_i$$$ and $$$y_i$$$ ($$$1 \\le x_i, y_i \\le n$$$, $$$x_i \\ne y_i$$$) denoting the endpoints of the $$$i$$$-th edge.</p><p>It is guaranteed that the given graph is a tree.</p>",
    "outputSpecification": "<p>Print $$$n$$$ pairs of integers, the $$$i$$$-th pair should contain two integers $$$l_i$$$ and $$$r_i$$$ ($$$1 \\le l_i &lt; r_i \\le 2n$$$) \u2014 the endpoints of the $$$i$$$-th segment. All $$$2n$$$ integers you print should be unique.</p><p>It is guaranteed that the answer always exists.</p>",
    "samples": [
        {
            "input": "\n6\n1 2\n1 3\n3 4\n3 5\n2 6\n",
            "output": "\n9 12\n7 10\n3 11\n1 5\n2 4\n6 8\n"
        },
        {
            "input": "\n1\n",
            "output": "\n1 2\n"
        }
    ],
    "note": null,
    "contestId": 1278,
    "index": "E",
    "name": "Tests for problem D",
    "type": "PROGRAMMING",
    "tags": [
        "constructive algorithms",
        "dfs and similar",
        "divide and conquer",
        "trees"
    ],
    "solvedCount": 1781
}