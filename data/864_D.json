{
    "title": "D. Make a Permutation!",
    "timeLimit": {
        "value": 2.0,
        "unit": "seconds"
    },
    "memoryLimit": {
        "value": 256.0,
        "unit": "megabytes"
    },
    "statement": "<p>Ivan has an array consisting of <span class=\"tex-span\"><i>n</i></span> elements. Each of the elements is an integer from <span class=\"tex-span\">1</span> to <span class=\"tex-span\"><i>n</i></span>.</p><p>Recently Ivan learned about permutations and their lexicographical order. Now he wants to change (replace) <span class=\"tex-font-style-it\">minimum</span> number of elements in his array in such a way that his array becomes a <span class=\"tex-font-style-it\">permutation</span> (i.e. each of the integers from <span class=\"tex-span\">1</span> to <span class=\"tex-span\"><i>n</i></span> was encountered in his array exactly once). If there are multiple ways to do it he wants to find the <span class=\"tex-font-style-it\">lexicographically minimal</span> permutation among them.</p><p>Thus minimizing the number of changes has the first priority, lexicographical minimizing has the second priority.</p><p>In order to determine which of the two permutations is lexicographically smaller, we compare their first elements. If they are equal \u2014 compare the second, and so on. If we have two permutations <span class=\"tex-span\"><i>x</i></span> and <span class=\"tex-span\"><i>y</i></span>, then <span class=\"tex-span\"><i>x</i></span> is lexicographically smaller if <span class=\"tex-span\"><i>x</i><sub class=\"lower-index\"><i>i</i></sub>\u2009&lt;\u2009<i>y</i><sub class=\"lower-index\"><i>i</i></sub></span>, where <span class=\"tex-span\"><i>i</i></span> is the first index in which the permutations <span class=\"tex-span\"><i>x</i></span> and <span class=\"tex-span\"><i>y</i></span> differ.</p><p>Determine the array Ivan will obtain after performing all the changes.</p>",
    "inputSpecification": "<p>The first line contains an single integer <span class=\"tex-span\"><i>n</i></span> (<span class=\"tex-span\">2\u2009\u2264\u2009<i>n</i>\u2009\u2264\u2009200\u2009000</span>) \u2014 the number of elements in Ivan's array.</p><p>The second line contains a sequence of integers <span class=\"tex-span\"><i>a</i><sub class=\"lower-index\">1</sub>,\u2009<i>a</i><sub class=\"lower-index\">2</sub>,\u2009...,\u2009<i>a</i><sub class=\"lower-index\"><i>n</i></sub></span> (<span class=\"tex-span\">1\u2009\u2264\u2009<i>a</i><sub class=\"lower-index\"><i>i</i></sub>\u2009\u2264\u2009<i>n</i></span>) \u2014 the description of Ivan's array.</p>",
    "outputSpecification": "<p>In the first line print <span class=\"tex-span\"><i>q</i></span> \u2014 the minimum number of elements that need to be changed in Ivan's array in order to make his array a permutation. In the second line, print the <span class=\"tex-font-style-it\">lexicographically minimal</span> permutation which can be obtained from array with <span class=\"tex-span\"><i>q</i></span> changes.</p>",
    "samples": [
        {
            "input": "4<br/>3 2 2 3<br/>",
            "output": "2<br/>1 2 4 3 <br/>"
        },
        {
            "input": "6<br/>4 5 6 3 2 1<br/>",
            "output": "0<br/>4 5 6 3 2 1 <br/>"
        },
        {
            "input": "10<br/>6 8 4 6 7 1 6 3 4 5<br/>",
            "output": "3<br/>2 8 4 6 7 1 9 3 10 5 <br/>"
        }
    ],
    "note": "<p>In the first example Ivan needs to replace number three in position <span class=\"tex-span\">1</span> with number one, and number two in position <span class=\"tex-span\">3</span> with number four. Then he will get a permutation <span class=\"tex-font-style-tt\">[1, 2, 4, 3]</span> with only two changed numbers \u2014 this permutation is lexicographically minimal among all suitable. </p><p>In the second example Ivan does not need to change anything because his array already is a permutation.</p>",
    "contestId": 864,
    "index": "D",
    "name": "Make a Permutation!",
    "type": "PROGRAMMING",
    "tags": [
        "greedy",
        "implementation",
        "math"
    ],
    "solvedCount": 5970
}