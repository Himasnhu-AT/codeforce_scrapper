{
    "title": "B. Fox Dividing Cheese",
    "timeLimit": {
        "value": 1.0,
        "unit": "second"
    },
    "memoryLimit": {
        "value": 256.0,
        "unit": "megabytes"
    },
    "statement": "<p>Two little greedy bears have found two pieces of cheese in the forest of weight <span class=\"tex-span\"><i>a</i></span> and <span class=\"tex-span\"><i>b</i></span> grams, correspondingly. The bears are so greedy that they are ready to fight for the larger piece. That's where the fox comes in and starts the dialog: \"Little bears, wait a little, I want to make your pieces equal\" \"Come off it fox, how are you going to do that?\", the curious bears asked. \"It's easy\", said the fox. \"If the mass of a certain piece is divisible by two, then I can eat exactly a half of the piece. If the mass of a certain piece is divisible by three, then I can eat exactly two-thirds, and if the mass is divisible by five, then I can eat four-fifths. I'll eat a little here and there and make the pieces equal\". </p><p>The little bears realize that the fox's proposal contains a catch. But at the same time they realize that they can not make the two pieces equal themselves. So they agreed to her proposal, but on one condition: the fox should make the pieces equal as quickly as possible. Find the minimum number of operations the fox needs to make pieces equal.</p>",
    "inputSpecification": "<p>The first line contains two space-separated integers <span class=\"tex-span\"><i>a</i></span> and <span class=\"tex-span\"><i>b</i></span> (<span class=\"tex-span\">1\u2009\u2264\u2009<i>a</i>,\u2009<i>b</i>\u2009\u2264\u200910<sup class=\"upper-index\">9</sup></span>). </p>",
    "outputSpecification": "<p>If the fox is lying to the little bears and it is impossible to make the pieces equal, print <span class=\"tex-font-style-tt\">-1</span>. Otherwise, print the required minimum number of operations. If the pieces of the cheese are initially equal, the required number is 0.</p>",
    "samples": [
        {
            "input": "15 20<br/>",
            "output": "3<br/>"
        },
        {
            "input": "14 8<br/>",
            "output": "-1<br/>"
        },
        {
            "input": "6 6<br/>",
            "output": "0<br/>"
        }
    ],
    "note": null,
    "contestId": 371,
    "index": "B",
    "name": "Fox Dividing Cheese",
    "type": "PROGRAMMING",
    "tags": [
        "math",
        "number theory"
    ],
    "solvedCount": 11050
}