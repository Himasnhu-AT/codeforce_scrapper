{
    "title": "E. Vlad and an Odd Ordering",
    "timeLimit": {
        "value": 2.0,
        "unit": "seconds"
    },
    "memoryLimit": {
        "value": 256.0,
        "unit": "megabytes"
    },
    "statement": "<p>Vladislav has $$$n$$$ cards numbered $$$1, 2, \\dots, n$$$. He wants to lay them down in a row as follows: </p><ul> <li> First, he lays down all the odd-numbered cards from smallest to largest. </li><li> Next, he lays down all cards that are twice an odd number from smallest to largest (i.e. $$$2$$$ multiplied by an odd number). </li><li> Next, he lays down all cards that are $$$3$$$ times an odd number from smallest to largest (i.e. $$$3$$$ multiplied by an odd number). </li><li> Next, he lays down all cards that are $$$4$$$ times an odd number from smallest to largest (i.e. $$$4$$$ multiplied by an odd number). </li><li> And so on, until all cards are laid down. </li></ul> What is the $$$k$$$-th card he lays down in this process? Once Vladislav puts a card down, he cannot use that card again.",
    "inputSpecification": "<p>The first line contains an integer $$$t$$$ ($$$1 \\leq t \\leq 5 \\cdot 10^4$$$)\u00a0\u2014 the number of test cases.</p><p>The only line of each test case contains two integers $$$n$$$ and $$$k$$$ ($$$1 \\leq k \\leq n \\leq 10^9$$$)\u00a0\u2014 the number of cards Vlad has, and the position of the card you need to output.</p>",
    "outputSpecification": "<p>For each test case, output a single integer\u00a0\u2014 the $$$k$$$-th card Vladislav lays down.</p>",
    "samples": [
        {
            "input": "\n<div class=\"test-example-line test-example-line-even test-example-line-0\">11</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">7 1</div><div class=\"test-example-line test-example-line-even test-example-line-2\">7 2</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">7 3</div><div class=\"test-example-line test-example-line-even test-example-line-4\">7 4</div><div class=\"test-example-line test-example-line-odd test-example-line-5\">7 5</div><div class=\"test-example-line test-example-line-even test-example-line-6\">7 6</div><div class=\"test-example-line test-example-line-odd test-example-line-7\">7 7</div><div class=\"test-example-line test-example-line-even test-example-line-8\">1 1</div><div class=\"test-example-line test-example-line-odd test-example-line-9\">34 14</div><div class=\"test-example-line test-example-line-even test-example-line-10\">84 19</div><div class=\"test-example-line test-example-line-odd test-example-line-11\">1000000000 1000000000</div>",
            "output": "\n1\n3\n5\n7\n2\n6\n4\n1\n27\n37\n536870912\n"
        }
    ],
    "note": "<p>In the first seven test cases, $$$n=7$$$. Vladislav lays down the cards as follows: </p><ul> <li> First\u00a0\u2014 all the odd-numbered cards in the order $$$1$$$, $$$3$$$, $$$5$$$, $$$7$$$. </li><li> Next\u00a0\u2014 all cards that are twice an odd number in the order $$$2$$$, $$$6$$$. </li><li> Next, there are no remaining cards that are $$$3$$$ times an odd number. (Vladislav has only one of each card.) </li><li> Next\u00a0\u2014 all cards that are $$$4$$$ times an odd number, and there is only one such card: $$$4$$$. </li><li> There are no more cards left, so Vladislav stops. </li></ul> Thus the order of cards is $$$1$$$, $$$3$$$, $$$5$$$, $$$7$$$, $$$2$$$, $$$6$$$, $$$4$$$.",
    "contestId": 1926,
    "index": "E",
    "name": "Vlad and an Odd Ordering",
    "type": "PROGRAMMING",
    "tags": [
        "binary search",
        "bitmasks",
        "data structures",
        "dp",
        "implementation",
        "math",
        "number theory"
    ],
    "solvedCount": 10595
}