{
    "title": "D. Evolution of Weasels",
    "timeLimit": {
        "value": 2.0,
        "unit": "seconds"
    },
    "memoryLimit": {
        "value": 256.0,
        "unit": "megabytes"
    },
    "statement": "<p>A wild basilisk just appeared at your doorstep. You are not entirely sure what a basilisk is and you wonder whether it evolved from your favorite animal, the weasel. </p><p>How can you find out whether basilisks evolved from weasels? Certainly, a good first step is to sequence both of their DNAs. Then you can try to check whether there is a sequence of possible mutations from the DNA of the weasel to the DNA of the basilisk. </p><p>Your friend Ron is a talented alchemist and has studied DNA sequences in many of his experiments. He has found out that DNA strings consist of the letters <span class=\"tex-font-style-tt\">A</span>, <span class=\"tex-font-style-tt\">B</span> and <span class=\"tex-font-style-tt\">C</span> and that single mutations can only remove or add substrings at any position in the string (a substring is a contiguous sequence of characters). The substrings that can be removed or added by a mutation are <span class=\"tex-font-style-tt\">AA</span>, <span class=\"tex-font-style-tt\">BB</span>, <span class=\"tex-font-style-tt\">CC</span>, <span class=\"tex-font-style-tt\">ABAB</span> or <span class=\"tex-font-style-tt\">BCBC</span>. During a sequence of mutations a DNA string may even become empty.</p><p>Ron has agreed to sequence the DNA of the weasel and the basilisk for you, but finding out whether there is a sequence of possible mutations that leads from one to the other is too difficult for him, so you have to do it on your own. </p>",
    "inputSpecification": "<p>Each test contains multiple test cases. The first line contains an integer $$$t$$$ ($$$1\\le t\\le 100$$$) \u2014 the number of test cases. The descriptions of the $$$t$$$ test cases follow.</p><p>The first line of each test case contains a string $$$u$$$ ($$$1\\le |u|\\le 200$$$) \u2014 the DNA of the weasel.</p><p>The second line of each test case contains a string $$$v$$$ ($$$1\\le |v|\\le 200$$$) \u2014 the DNA of the basilisk. </p><p>The values $$$|u|$$$, $$$|v|$$$ denote the lengths of the strings $$$u$$$ and $$$v$$$. It is guaranteed that both strings $$$u$$$ and $$$v$$$ consist of the letters <span class=\"tex-font-style-tt\">A</span>, <span class=\"tex-font-style-tt\">B</span> and <span class=\"tex-font-style-tt\">C</span>.</p>",
    "outputSpecification": "<p>For each test case, print <span class=\"tex-font-style-tt\">YES</span> if there is a sequence of mutations to get from $$$u$$$ to $$$v$$$ and <span class=\"tex-font-style-tt\">NO</span> otherwise. </p>",
    "samples": [
        {
            "input": "\n<div class=\"test-example-line test-example-line-even test-example-line-0\">8</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">A</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">B</div><div class=\"test-example-line test-example-line-even test-example-line-2\">B</div><div class=\"test-example-line test-example-line-even test-example-line-2\">C</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">C</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">A</div><div class=\"test-example-line test-example-line-even test-example-line-4\">AA</div><div class=\"test-example-line test-example-line-even test-example-line-4\">BB</div><div class=\"test-example-line test-example-line-odd test-example-line-5\">BB</div><div class=\"test-example-line test-example-line-odd test-example-line-5\">CC</div><div class=\"test-example-line test-example-line-even test-example-line-6\">CC</div><div class=\"test-example-line test-example-line-even test-example-line-6\">AA</div><div class=\"test-example-line test-example-line-odd test-example-line-7\">ABAB</div><div class=\"test-example-line test-example-line-odd test-example-line-7\">BCBC</div><div class=\"test-example-line test-example-line-even test-example-line-8\">ABC</div><div class=\"test-example-line test-example-line-even test-example-line-8\">CBA</div>",
            "output": "\nNO\nNO\nNO\nYES\nYES\nYES\nYES\nNO\n"
        }
    ],
    "note": null,
    "contestId": 1662,
    "index": "D",
    "name": "Evolution of Weasels",
    "type": "PROGRAMMING",
    "tags": [
        "greedy",
        "implementation",
        "strings"
    ],
    "solvedCount": 1700
}