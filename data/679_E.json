{
    "title": "E. Bear and Bad Powers of 42",
    "timeLimit": {
        "value": 5.0,
        "unit": "seconds"
    },
    "memoryLimit": {
        "value": 256.0,
        "unit": "megabytes"
    },
    "statement": "<p>Limak, a bear, isn't good at handling queries. So, he asks you to do it.</p><p>We say that powers of <span class=\"tex-span\">42</span> (numbers <span class=\"tex-span\">1,\u200942,\u20091764,\u2009...</span>) are <span class=\"tex-font-style-it\">bad</span>. Other numbers are <span class=\"tex-font-style-it\">good</span>.</p><p>You are given a sequence of <span class=\"tex-span\"><i>n</i></span> good integers <span class=\"tex-span\"><i>t</i><sub class=\"lower-index\">1</sub>,\u2009<i>t</i><sub class=\"lower-index\">2</sub>,\u2009...,\u2009<i>t</i><sub class=\"lower-index\"><i>n</i></sub></span>. Your task is to handle <span class=\"tex-span\"><i>q</i></span> queries of three types:</p><ol> <li> <span class=\"tex-font-style-tt\">1 i</span>\u00a0\u2014 print <span class=\"tex-span\"><i>t</i><sub class=\"lower-index\"><i>i</i></sub></span> in a separate line. </li><li> <span class=\"tex-font-style-tt\">2 a b x</span>\u00a0\u2014 for <img align=\"middle\" class=\"tex-formula\" src=\"https://espresso.codeforces.com/dfe3c7c46edb4f485631cb422ffc55ec2c0ae0a7.png\" style=\"max-width: 100.0%;max-height: 100.0%;\"/> set <span class=\"tex-span\"><i>t</i><sub class=\"lower-index\"><i>i</i></sub></span> to <span class=\"tex-span\"><i>x</i></span>. It's guaranteed that <span class=\"tex-span\"><i>x</i></span> is a good number. </li><li> <span class=\"tex-font-style-tt\">3 a b x</span>\u00a0\u2014 for <img align=\"middle\" class=\"tex-formula\" src=\"https://espresso.codeforces.com/dfe3c7c46edb4f485631cb422ffc55ec2c0ae0a7.png\" style=\"max-width: 100.0%;max-height: 100.0%;\"/> increase <span class=\"tex-span\"><i>t</i><sub class=\"lower-index\"><i>i</i></sub></span> by <span class=\"tex-span\"><i>x</i></span>. After this repeat the process while at least one <span class=\"tex-span\"><i>t</i><sub class=\"lower-index\"><i>i</i></sub></span> is bad. </li></ol><p>You can note that after each query all <span class=\"tex-span\"><i>t</i><sub class=\"lower-index\"><i>i</i></sub></span> are good.</p>",
    "inputSpecification": "<p>The first line of the input contains two integers <span class=\"tex-span\"><i>n</i></span> and <span class=\"tex-span\"><i>q</i></span> (<span class=\"tex-span\">1\u2009\u2264\u2009<i>n</i>,\u2009<i>q</i>\u2009\u2264\u2009100\u2009000</span>)\u00a0\u2014 the size of Limak's sequence and the number of queries, respectively.</p><p>The second line of the input contains <span class=\"tex-span\"><i>n</i></span> integers <span class=\"tex-span\"><i>t</i><sub class=\"lower-index\">1</sub>,\u2009<i>t</i><sub class=\"lower-index\">2</sub>,\u2009...,\u2009<i>t</i><sub class=\"lower-index\"><i>n</i></sub></span> (<span class=\"tex-span\">2\u2009\u2264\u2009<i>t</i><sub class=\"lower-index\"><i>i</i></sub>\u2009\u2264\u200910<sup class=\"upper-index\">9</sup></span>)\u00a0\u2014 initial elements of Limak's sequence. All <span class=\"tex-span\"><i>t</i><sub class=\"lower-index\"><i>i</i></sub></span> are good.</p><p>Then, <span class=\"tex-span\"><i>q</i></span> lines follow. The <span class=\"tex-span\"><i>i</i></span>-th of them describes the <span class=\"tex-span\"><i>i</i></span>-th query. The first number in the line is an integer <span class=\"tex-span\"><i>type</i><sub class=\"lower-index\"><i>i</i></sub></span> (<span class=\"tex-span\">1\u2009\u2264\u2009<i>type</i><sub class=\"lower-index\"><i>i</i></sub>\u2009\u2264\u20093</span>)\u00a0\u2014 the type of the query. There is at least one query of the first type, so the output won't be empty.</p><p>In queries of the second and the third type there is <span class=\"tex-span\">1\u2009\u2264\u2009<i>a</i>\u2009\u2264\u2009<i>b</i>\u2009\u2264\u2009<i>n</i></span>.</p><p>In queries of the second type an integer <span class=\"tex-span\"><i>x</i></span> (<span class=\"tex-span\">2\u2009\u2264\u2009<i>x</i>\u2009\u2264\u200910<sup class=\"upper-index\">9</sup></span>) is guaranteed to be good.</p><p>In queries of the third type an integer <span class=\"tex-span\"><i>x</i></span> (<span class=\"tex-span\">1\u2009\u2264\u2009<i>x</i>\u2009\u2264\u200910<sup class=\"upper-index\">9</sup></span>) may be bad.</p>",
    "outputSpecification": "<p>For each query of the first type, print the answer in a separate line.</p>",
    "samples": [
        {
            "input": "6 12<br/>40 1700 7 1672 4 1722<br/>3 2 4 42<br/>1 2<br/>1 3<br/>3 2 6 50<br/>1 2<br/>1 4<br/>1 6<br/>2 3 4 41<br/>3 1 5 1<br/>1 1<br/>1 3<br/>1 5<br/>",
            "output": "1742<br/>49<br/>1842<br/>1814<br/>1822<br/>43<br/>44<br/>107<br/>"
        }
    ],
    "note": "<p>After a query <span class=\"tex-font-style-tt\">3 2 4 42</span> the sequence is <span class=\"tex-span\">40,\u20091742,\u200949,\u20091714,\u20094,\u20091722</span>.</p><p>After a query <span class=\"tex-font-style-tt\">3 2 6 50</span> the sequence is <span class=\"tex-span\">40,\u20091842,\u2009149,\u20091814,\u2009104,\u20091822</span>.</p><p>After a query <span class=\"tex-font-style-tt\">2 3 4 41</span> the sequence is <span class=\"tex-span\">40,\u20091842,\u200941,\u200941,\u2009104,\u20091822</span>.</p><p>After a query <span class=\"tex-font-style-tt\">3 1 5 1</span> the sequence is <span class=\"tex-span\">43,\u20091845,\u200944,\u200944,\u2009107,\u20091822</span>.</p>",
    "contestId": 679,
    "index": "E",
    "name": "Bear and Bad Powers of 42",
    "type": "PROGRAMMING",
    "tags": [
        "data structures"
    ],
    "solvedCount": 669
}