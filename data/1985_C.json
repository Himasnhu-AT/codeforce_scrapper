{
    "title": "C. Good Prefixes",
    "timeLimit": {
        "value": 2.0,
        "unit": "seconds"
    },
    "memoryLimit": {
        "value": 256.0,
        "unit": "megabytes"
    },
    "statement": "<p>Alex thinks some array is <span class=\"tex-font-style-it\">good</span> if there exists some element that can be represented as the sum of all <span class=\"tex-font-style-bf\">other</span> elements (the sum of all other elements is $$$0$$$ if there are no other elements). For example, the array $$$[1,6,3,2]$$$ is good since $$$1+3+2=6$$$. Furthermore, the array $$$[0]$$$ is also good. However, the arrays $$$[1,2,3,4]$$$ and $$$[1]$$$ are not good.</p><p>Alex has an array $$$a_1,a_2,\\ldots,a_n$$$. Help him count the number of good non-empty prefixes of the array $$$a$$$. In other words, count the number of integers $$$i$$$ ($$$1 \\le i \\le n$$$) such that the length $$$i$$$ prefix (i.e. $$$a_1,a_2,\\ldots,a_i$$$) is good.</p>",
    "inputSpecification": "<p>The first line of the input contains a single integer $$$t$$$ ($$$1 \\leq t \\leq 10^4$$$) \u2014 the number of test cases.</p><p>The first line of each test case contains a single integer $$$n$$$ ($$$1 \\le n \\le 2 \\cdot 10^5$$$) \u2014 the number of elements in the array.</p><p>The second line of each test case contains $$$n$$$ integers $$$a_1,a_2,\\ldots,a_n$$$ ($$$0 \\le a_i \\le 10^9$$$) \u2014 the elements of the array.</p><p>It is guaranteed that the sum of $$$n$$$ over all test cases does not exceed $$$2 \\cdot 10^5$$$. </p>",
    "outputSpecification": "<p>For each test case, output a single integer \u2014 the number of good non-empty prefixes of the array $$$a$$$.</p>",
    "samples": [
        {
            "input": "\n<div class=\"test-example-line test-example-line-even test-example-line-0\">7</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">1</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">0</div><div class=\"test-example-line test-example-line-even test-example-line-2\">1</div><div class=\"test-example-line test-example-line-even test-example-line-2\">1</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">4</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">1 1 2 0</div><div class=\"test-example-line test-example-line-even test-example-line-4\">5</div><div class=\"test-example-line test-example-line-even test-example-line-4\">0 1 2 1 4</div><div class=\"test-example-line test-example-line-odd test-example-line-5\">7</div><div class=\"test-example-line test-example-line-odd test-example-line-5\">1 1 0 3 5 2 12</div><div class=\"test-example-line test-example-line-even test-example-line-6\">7</div><div class=\"test-example-line test-example-line-even test-example-line-6\">1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 294967296</div><div class=\"test-example-line test-example-line-odd test-example-line-7\">10</div><div class=\"test-example-line test-example-line-odd test-example-line-7\">0 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 589934592</div>",
            "output": "\n1\n0\n3\n3\n4\n1\n2\n"
        }
    ],
    "note": "<p>In the fourth test case, the array has five prefixes: </p><ul> <li> prefix $$$[0]$$$ is a good array, as mentioned in the statement; </li><li> prefix $$$[0, 1]$$$ is not a good array, since $$$0 \\ne 1$$$; </li><li> prefix $$$[0, 1, 2]$$$ is not a good array, since $$$0 \\ne 1 + 2$$$, $$$1 \\ne 0 + 2$$$ and $$$2 \\ne 0 + 1$$$; </li><li> prefix $$$[0, 1, 2, 1]$$$ is a good array, since $$$2 = 0 + 1 + 1$$$; </li><li> prefix $$$[0, 1, 2, 1, 4]$$$ is a good array, since $$$4 = 0 + 1 + 2 + 1$$$. </li></ul><p>As you can see, three of them are good, so the answer is $$$3$$$.</p>",
    "contestId": 1985,
    "index": "C",
    "name": "Good Prefixes",
    "type": "PROGRAMMING",
    "tags": [
        "greedy",
        "implementation"
    ],
    "solvedCount": 19662
}