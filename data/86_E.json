{
    "title": "E. Long sequence",
    "timeLimit": {
        "value": 2.0,
        "unit": "seconds"
    },
    "memoryLimit": {
        "value": 256.0,
        "unit": "megabytes"
    },
    "statement": "<p>A sequence <span class=\"tex-span\"><i>a</i><sub class=\"lower-index\">0</sub>,\u2009<i>a</i><sub class=\"lower-index\">1</sub>,\u2009...</span> is called a <span class=\"tex-font-style-it\">recurrent binary sequence</span>, if each term <span class=\"tex-span\"><i>a</i><sub class=\"lower-index\"><i>i</i></sub></span> <span class=\"tex-span\">(<i>i</i>\u2009=\u20090,\u20091,\u2009...)</span> is equal to 0 or 1 and there exist coefficients <img align=\"middle\" class=\"tex-formula\" src=\"https://espresso.codeforces.com/2cdbe5188f89f0cd5a6bb906a85007cdc9ecda4d.png\" style=\"max-width: 100.0%;max-height: 100.0%;\"/> such that </p><center class=\"tex-equation\"><span class=\"tex-span\"><i>a</i><sub class=\"lower-index\"><i>n</i></sub>\u2009=\u2009<i>c</i><sub class=\"lower-index\">1</sub>\u00b7<i>a</i><sub class=\"lower-index\"><i>n</i>\u2009-\u20091</sub>\u2009+\u2009<i>c</i><sub class=\"lower-index\">2</sub>\u00b7<i>a</i><sub class=\"lower-index\"><i>n</i>\u2009-\u20092</sub>\u2009+\u2009...\u2009+\u2009<i>c</i><sub class=\"lower-index\"><i>k</i></sub>\u00b7<i>a</i><sub class=\"lower-index\"><i>n</i>\u2009-\u2009<i>k</i></sub> (<i>mod</i> 2),\u2009</span></center> for all <span class=\"tex-span\"><i>n</i>\u2009\u2265\u2009<i>k</i></span>. Assume that not all of <span class=\"tex-span\"><i>c</i><sub class=\"lower-index\"><i>i</i></sub></span> are zeros.<p>Note that such a sequence can be uniquely recovered from any <span class=\"tex-span\"><i>k</i></span>-tuple <span class=\"tex-span\">{<i>a</i><sub class=\"lower-index\"><i>s</i></sub>,\u2009<i>a</i><sub class=\"lower-index\"><i>s</i>\u2009+\u20091</sub>,\u2009...,\u2009<i>a</i><sub class=\"lower-index\"><i>s</i>\u2009+\u2009<i>k</i>\u2009-\u20091</sub>}</span> and so it is periodic. Moreover, if a <span class=\"tex-span\"><i>k</i></span>-tuple contains only zeros, then the sequence contains only zeros, so this case is not very interesting. Otherwise the minimal period of the sequence is not greater than <span class=\"tex-span\">2<sup class=\"upper-index\"><i>k</i></sup>\u2009-\u20091</span>, as <span class=\"tex-span\"><i>k</i></span>-tuple determines next element, and there are <span class=\"tex-span\">2<sup class=\"upper-index\"><i>k</i></sup>\u2009-\u20091</span> non-zero <span class=\"tex-span\"><i>k</i></span>-tuples. Let us call a sequence <span class=\"tex-font-style-it\">long</span> if its minimal period is exactly <span class=\"tex-span\">2<sup class=\"upper-index\"><i>k</i></sup>\u2009-\u20091</span>. Your task is to find a long sequence for a given <span class=\"tex-span\"><i>k</i></span>, if there is any.</p>",
    "inputSpecification": "<p>Input contains a single integer <span class=\"tex-span\"><i>k</i></span> (<span class=\"tex-span\">2\u2009\u2264\u2009<i>k</i>\u2009\u2264\u200950</span>).</p>",
    "outputSpecification": "<p>If there is no long sequence for a given <span class=\"tex-span\"><i>k</i></span>, output \"-1\" (without quotes). Otherwise the first line of the output should contain <span class=\"tex-span\"><i>k</i></span> integer numbers: <span class=\"tex-span\"><i>c</i><sub class=\"lower-index\">1</sub>,\u2009<i>c</i><sub class=\"lower-index\">2</sub>,\u2009...,\u2009<i>c</i><sub class=\"lower-index\"><i>k</i></sub></span> (coefficients). The second line should contain first <span class=\"tex-span\"><i>k</i></span> elements of the sequence: <span class=\"tex-span\"><i>a</i><sub class=\"lower-index\">0</sub>,\u2009<i>a</i><sub class=\"lower-index\">1</sub>,\u2009...,\u2009<i>a</i><sub class=\"lower-index\"><i>k</i>\u2009-\u20091</sub></span>. All of them (elements and coefficients) should be equal to 0 or 1, and at least one <span class=\"tex-span\"><i>c</i><sub class=\"lower-index\"><i>i</i></sub></span> has to be equal to 1.</p><p>If there are several solutions, output any.</p>",
    "samples": [
        {
            "input": "2<br/>",
            "output": "1 1<br/>1 0<br/>"
        },
        {
            "input": "3<br/>",
            "output": "0 1 1<br/>1 1 1<br/>"
        }
    ],
    "note": "<p>1. In the first sample: <span class=\"tex-span\"><i>c</i><sub class=\"lower-index\">1</sub>\u2009=\u20091</span>, <span class=\"tex-span\"><i>c</i><sub class=\"lower-index\">2</sub>\u2009=\u20091</span>, so <span class=\"tex-span\"><i>a</i><sub class=\"lower-index\"><i>n</i></sub>\u2009=\u2009<i>a</i><sub class=\"lower-index\"><i>n</i>\u2009-\u20091</sub>\u2009+\u2009<i>a</i><sub class=\"lower-index\"><i>n</i>\u2009-\u20092</sub>  (<i>mod</i> 2)</span>. Thus the sequence will be:</p><center><img class=\"tex-graphics\" src=\"https://espresso.codeforces.com/dd615d86ae05bd4788c93aa88a84d5ef448ef3b4.png\" style=\"max-width: 100.0%;max-height: 100.0%;\"/></center><p>so its period equals <span class=\"tex-span\">3\u2009=\u20092<sup class=\"upper-index\">2</sup>\u2009-\u20091</span>.</p><p>2. In the second sample: <span class=\"tex-span\"><i>c</i><sub class=\"lower-index\">1</sub>\u2009=\u20090</span>, <span class=\"tex-span\"><i>c</i><sub class=\"lower-index\">2</sub>\u2009=\u20091</span>, <span class=\"tex-span\"><i>c</i><sub class=\"lower-index\">3</sub>\u2009=\u20091</span>, so <span class=\"tex-span\"><i>a</i><sub class=\"lower-index\"><i>n</i></sub>\u2009=\u2009<i>a</i><sub class=\"lower-index\"><i>n</i>\u2009-\u20092</sub>\u2009+\u2009<i>a</i><sub class=\"lower-index\"><i>n</i>\u2009-\u20093</sub>  (<i>mod</i> 2)</span>. Thus our sequence is:</p><center><img class=\"tex-graphics\" src=\"https://espresso.codeforces.com/8b69c39805ff521758f80bd134427d8d95052040.png\" style=\"max-width: 100.0%;max-height: 100.0%;\"/></center><p>and its period equals <span class=\"tex-span\">7\u2009=\u20092<sup class=\"upper-index\">3</sup>\u2009-\u20091</span>.</p><p>Periods are colored.</p>",
    "contestId": 86,
    "index": "E",
    "name": "Long sequence",
    "type": "PROGRAMMING",
    "tags": [
        "brute force",
        "math",
        "matrices"
    ],
    "solvedCount": 180
}