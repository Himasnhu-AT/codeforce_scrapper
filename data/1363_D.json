{
    "title": "D. Guess The Maximums",
    "timeLimit": {
        "value": 2.0,
        "unit": "seconds"
    },
    "memoryLimit": {
        "value": 256.0,
        "unit": "megabytes"
    },
    "statement": "<p><span class=\"tex-font-style-bf\">This is an interactive problem.</span></p><p>Ayush devised a new scheme to set the password of his lock. The lock has $$$k$$$ slots where each slot can hold integers from $$$1$$$ to $$$n$$$. The password $$$P$$$ is a sequence of $$$k$$$ integers each in the range $$$[1, n]$$$, $$$i$$$-th element of which goes into the $$$i$$$-th slot of the lock.</p><p>To set the password of his lock, Ayush comes up with an array $$$A$$$ of $$$n$$$ integers each in the range $$$[1, n]$$$ (not necessarily distinct). He then picks $$$k$$$ <span class=\"tex-font-style-bf\">non-empty mutually disjoint</span> subsets of indices $$$S_1, S_2, ..., S_k$$$ $$$(S_i \\underset{i \\neq j} \\cap S_j = \\emptyset)$$$ and sets his password as $$$P_i = \\max\\limits_{j \\notin S_i} A[j]$$$. In other words, the $$$i$$$-th integer in the password is equal to the maximum over all elements of $$$A$$$ whose indices do not belong to $$$S_i$$$.</p><p>You are given the subsets of indices chosen by Ayush. You need to guess the password. To make a query, you can choose a non-empty subset of indices of the array and ask the maximum of all elements of the array with index in this subset. <span class=\"tex-font-style-bf\">You can ask no more than 12 queries</span>.</p>",
    "inputSpecification": "<p>The first line of the input contains a single integer $$$t$$$ $$$(1 \\leq t \\leq 10)$$$\u00a0\u2014 the number of test cases. The description of the test cases follows.</p><p>The first line of each test case contains two integers $$$n$$$ and $$$k$$$ $$$(2 \\leq n \\leq 1000, 1 \\leq k \\leq n)$$$\u00a0\u2014 the size of the array and the number of subsets. $$$k$$$ lines follow. The $$$i$$$-th line contains an integer $$$c$$$ $$$(1 \\leq c \\lt n)$$$\u00a0\u2014 the size of subset $$$S_i$$$, followed by $$$c$$$ distinct integers in the range $$$[1, n]$$$ \u00a0\u2014 indices from the subset $$$S_i$$$.</p><p><span class=\"tex-font-style-bf\">It is guaranteed that the intersection of any two subsets is empty.</span></p>",
    "outputSpecification": null,
    "samples": [
        {
            "input": "\n1\n4 2\n2 1 3\n2 2 4\n\n1\n\n2\n\n3\n\n4\n\nCorrect",
            "output": "\n? 1 1\n\n? 1 2\n\n? 1 3\n\n? 1 4\n\n! 4 3"
        }
    ],
    "note": "<p>The array $$$A$$$ in the example is $$$[1, 2, 3, 4]$$$. The length of the password is $$$2$$$. The first element of the password is the maximum of $$$A[2]$$$, $$$A[4]$$$ (since the first subset contains indices $$$1$$$ and $$$3$$$, we take maximum over remaining indices). The second element of the password is the maximum of $$$A[1]$$$, $$$A[3]$$$ (since the second subset contains indices $$$2$$$, $$$4$$$).</p><p><span class=\"tex-font-style-bf\">Do not forget</span> to read the string \"<span class=\"tex-font-style-tt\">Correct</span>\" / \"<span class=\"tex-font-style-tt\">Incorrect</span>\" after guessing the password.</p>",
    "contestId": 1363,
    "index": "D",
    "name": "Guess The Maximums",
    "type": "PROGRAMMING",
    "tags": [
        "binary search",
        "implementation",
        "interactive",
        "math"
    ],
    "solvedCount": 3874
}