{
    "title": "B. Chess",
    "timeLimit": {
        "value": 2.0,
        "unit": "seconds"
    },
    "memoryLimit": {
        "value": 256.0,
        "unit": "megabytes"
    },
    "statement": "<p>Two chess pieces, a rook and a knight, stand on a standard chessboard <span class=\"tex-span\">8\u2009\u00d7\u20098</span> in size. The positions in which they are situated are known. It is guaranteed that none of them beats the other one.</p><p>Your task is to find the number of ways to place another knight on the board so that none of the three pieces on the board beat another one. A new piece can only be placed on an empty square.</p>",
    "inputSpecification": "<p>The first input line contains the description of the rook's position on the board. This description is a line which is 2 in length. Its first symbol is a lower-case Latin letter from <span class=\"tex-font-style-tt\">a</span> to <span class=\"tex-font-style-tt\">h</span>, and its second symbol is a number from 1 to 8. The second line contains the description of the knight's position in a similar way. It is guaranteed that their positions do not coincide.</p>",
    "outputSpecification": "<p>Print a single number which is the required number of ways.</p>",
    "samples": [
        {
            "input": "a1<br/>b2<br/>",
            "output": "44<br/>"
        },
        {
            "input": "a8<br/>d4<br/>",
            "output": "38<br/>"
        }
    ],
    "note": null,
    "contestId": 38,
    "index": "B",
    "name": "Chess",
    "type": "PROGRAMMING",
    "tags": [
        "brute force",
        "implementation",
        "math"
    ],
    "solvedCount": 3428
}