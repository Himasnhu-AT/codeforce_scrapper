{
    "title": "G. String Counting",
    "timeLimit": {
        "value": 10.0,
        "unit": "seconds"
    },
    "memoryLimit": {
        "value": 1024.0,
        "unit": "megabytes"
    },
    "statement": "<p>You have $$$c_1$$$ letters '<span class=\"tex-font-style-tt\">a</span>', $$$c_2$$$ letters '<span class=\"tex-font-style-tt\">b</span>', ..., $$$c_{26}$$$ letters '<span class=\"tex-font-style-tt\">z</span>'. You want to build a <span class=\"tex-font-style-it\">beautiful</span> string of length $$$n$$$ from them (obviously, you cannot use the $$$i$$$-th letter more than $$$c_i$$$ times). <span class=\"tex-font-style-bf\">Each $$$c_i$$$ is greater than $$$\\frac{n}{3}$$$</span>.</p><p>A string is called <span class=\"tex-font-style-it\">beautiful</span> if there are no palindromic contiguous substrings of odd length greater than $$$1$$$ in it. For example, the string \"<span class=\"tex-font-style-tt\">abacaba</span>\" is not beautiful, it has several palindromic substrings of odd length greater than $$$1$$$ (for example, \"<span class=\"tex-font-style-tt\">aca</span>\"). Another example: the string \"<span class=\"tex-font-style-tt\">abcaa</span>\" is <span class=\"tex-font-style-it\">beautiful</span>.</p><p>Calculate the number of different strings you can build, and print the answer modulo $$$998244353$$$.</p>",
    "inputSpecification": "<p>The first line contains one integer $$$n$$$ ($$$3 \\le n \\le 400$$$).</p><p>The second line contains $$$26$$$ integers $$$c_1$$$, $$$c_2$$$, ..., $$$c_{26}$$$ ($$$\\frac{n}{3} &lt; c_i \\le n$$$).</p>",
    "outputSpecification": "<p>Print one integer \u2014 the number of strings you can build, taken modulo $$$998244353$$$.</p>",
    "samples": [
        {
            "input": "\n4\n2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n",
            "output": "\n422500\n"
        },
        {
            "input": "\n3\n2 2 2 2 2 2 3 3 3 2 2 2 2 2 2 3 3 3 2 2 3 2 2 3 2 2\n",
            "output": "\n16900\n"
        },
        {
            "input": "\n400\n348 322 247 158 209 134 151 267 268 176 214 379 372 291 388 135 147 304 169 149 193 351 380 368 181 340\n",
            "output": "\n287489790\n"
        }
    ],
    "note": null,
    "contestId": 1487,
    "index": "G",
    "name": "String Counting",
    "type": "PROGRAMMING",
    "tags": [
        "combinatorics",
        "dp",
        "fft",
        "math"
    ],
    "solvedCount": 579
}