{
    "title": "D. The Next Good String",
    "timeLimit": {
        "value": 2.0,
        "unit": "seconds"
    },
    "memoryLimit": {
        "value": 256.0,
        "unit": "megabytes"
    },
    "statement": "<p>In problems on strings one often has to find a string with some particular properties. The problem authors were reluctant to waste time on thinking of a name for some string so they called it <span class=\"tex-font-style-it\">good</span>. A string is good if it doesn't have palindrome substrings longer than or equal to <span class=\"tex-span\"><i>d</i></span>. </p><p>You are given string <span class=\"tex-span\"><i>s</i></span>, consisting only of lowercase English letters. Find a good string <span class=\"tex-span\"><i>t</i></span> with length <span class=\"tex-span\">|<i>s</i>|</span>, consisting of lowercase English letters, which is lexicographically larger than <span class=\"tex-span\"><i>s</i></span>. Of all such strings string <span class=\"tex-span\"><i>t</i></span> must be lexicographically minimum.</p><p>We will call a non-empty string <span class=\"tex-span\"><i>s</i>[<i>a</i>\u00a0...\u00a0<i>b</i>]\u2009=\u2009<i>s</i><sub class=\"lower-index\"><i>a</i></sub><i>s</i><sub class=\"lower-index\"><i>a</i>\u2009+\u20091</sub>... <i>s</i><sub class=\"lower-index\"><i>b</i></sub></span> <span class=\"tex-span\">(1\u2009\u2264\u2009<i>a</i>\u2009\u2264\u2009<i>b</i>\u2009\u2264\u2009|<i>s</i>|)</span> a <span class=\"tex-font-style-it\">substring</span> of string <span class=\"tex-span\"><i>s</i>\u2009=\u2009<i>s</i><sub class=\"lower-index\">1</sub><i>s</i><sub class=\"lower-index\">2</sub>... <i>s</i><sub class=\"lower-index\">|<i>s</i>|</sub></span>.</p><p>A non-empty string <span class=\"tex-span\"><i>s</i>\u2009=\u2009<i>s</i><sub class=\"lower-index\">1</sub><i>s</i><sub class=\"lower-index\">2</sub>... <i>s</i><sub class=\"lower-index\"><i>n</i></sub></span> is called <span class=\"tex-font-style-it\">a palindrome</span> if for all <span class=\"tex-span\"><i>i</i></span> from <span class=\"tex-span\">1</span> to <span class=\"tex-span\"><i>n</i></span> the following fulfills: <span class=\"tex-span\"><i>s</i><sub class=\"lower-index\"><i>i</i></sub>\u2009=\u2009<i>s</i><sub class=\"lower-index\"><i>n</i>\u2009-\u2009<i>i</i>\u2009+\u20091</sub></span>. In other words, palindrome read the same in both directions.</p><p>String <span class=\"tex-span\"><i>x</i>\u2009=\u2009<i>x</i><sub class=\"lower-index\">1</sub><i>x</i><sub class=\"lower-index\">2</sub>... <i>x</i><sub class=\"lower-index\">|<i>x</i>|</sub></span> is <span class=\"tex-font-style-it\">lexicographically larger</span> than string <span class=\"tex-span\"><i>y</i>\u2009=\u2009<i>y</i><sub class=\"lower-index\">1</sub><i>y</i><sub class=\"lower-index\">2</sub>... <i>y</i><sub class=\"lower-index\">|<i>y</i>|</sub></span>, if either <span class=\"tex-span\">|<i>x</i>|\u2009&gt;\u2009|<i>y</i>|</span> and <span class=\"tex-span\"><i>x</i><sub class=\"lower-index\">1</sub>\u2009=\u2009<i>y</i><sub class=\"lower-index\">1</sub>,\u2009<i>x</i><sub class=\"lower-index\">2</sub>\u2009=\u2009<i>y</i><sub class=\"lower-index\">2</sub>,\u2009... ,\u2009<i>x</i><sub class=\"lower-index\">|<i>y</i>|</sub>\u2009=\u2009<i>y</i><sub class=\"lower-index\">|<i>y</i>|</sub></span>, or there exists such number <span class=\"tex-span\"><i>r</i></span> <span class=\"tex-span\">(<i>r</i>\u2009&lt;\u2009|<i>x</i>|,\u2009<i>r</i>\u2009&lt;\u2009|<i>y</i>|)</span>, that <span class=\"tex-span\"><i>x</i><sub class=\"lower-index\">1</sub>\u2009=\u2009<i>y</i><sub class=\"lower-index\">1</sub>,\u2009<i>x</i><sub class=\"lower-index\">2</sub>\u2009=\u2009<i>y</i><sub class=\"lower-index\">2</sub>,\u2009... ,\u2009<i>x</i><sub class=\"lower-index\"><i>r</i></sub>\u2009=\u2009<i>y</i><sub class=\"lower-index\"><i>r</i></sub></span> and <span class=\"tex-span\"><i>x</i><sub class=\"lower-index\"><i>r</i>\u2009+\u20091</sub>\u2009&gt;\u2009<i>y</i><sub class=\"lower-index\"><i>r</i>\u2009+\u20091</sub></span>. Characters in such strings are compared like their ASCII codes.</p>",
    "inputSpecification": "<p>The first line contains integer <span class=\"tex-span\"><i>d</i></span> (<span class=\"tex-span\">1\u2009\u2264\u2009<i>d</i>\u2009\u2264\u2009|<i>s</i>|</span>).</p><p>The second line contains a non-empty string <span class=\"tex-span\"><i>s</i></span>, its length is no more than <span class=\"tex-span\">4\u00b710<sup class=\"upper-index\">5</sup></span> characters. The string consists of lowercase English letters.</p>",
    "outputSpecification": "<p>Print the good string that lexicographically follows <span class=\"tex-span\"><i>s</i></span>, has the same length and consists of only lowercase English letters. If such string does not exist, print \"<span class=\"tex-font-style-tt\">Impossible</span>\" (without the quotes).</p>",
    "samples": [
        {
            "input": "3<br/>aaaaaaa<br/>",
            "output": "aabbcaa<br/>"
        },
        {
            "input": "3<br/>zzyzzzz<br/>",
            "output": "Impossible<br/>"
        },
        {
            "input": "4<br/>abbabbbabbb<br/>",
            "output": "abbbcaaabab<br/>"
        }
    ],
    "note": null,
    "contestId": 196,
    "index": "D",
    "name": "The Next Good String",
    "type": "PROGRAMMING",
    "tags": [
        "data structures",
        "greedy",
        "hashing",
        "strings"
    ],
    "solvedCount": 522
}