{
    "title": "E. Phoenix and Berries",
    "timeLimit": {
        "value": 2.0,
        "unit": "seconds"
    },
    "memoryLimit": {
        "value": 256.0,
        "unit": "megabytes"
    },
    "statement": "<p>Phoenix is picking berries in his backyard. There are $$$n$$$ shrubs, and each shrub has $$$a_i$$$ red berries and $$$b_i$$$ blue berries.</p><p>Each basket can contain $$$k$$$ berries. But, Phoenix has decided that each basket may only contain berries from the same shrub or berries of the same color (red or blue). In other words, all berries in a basket must be from the same shrub or/and have the same color.</p><p>For example, if there are two shrubs with $$$5$$$ red and $$$2$$$ blue berries in the first shrub and $$$2$$$ red and $$$1$$$ blue berries in the second shrub then Phoenix can fill $$$2$$$ baskets of capacity $$$4$$$ completely: </p><ul> <li> the first basket will contain $$$3$$$ red and $$$1$$$ blue berries from the first shrub; </li><li> the second basket will contain the $$$2$$$ remaining red berries from the first shrub and $$$2$$$ red berries from the second shrub. </li></ul><p>Help Phoenix determine the maximum number of baskets he can <span class=\"tex-font-style-bf\">fill completely</span>!</p>",
    "inputSpecification": "<p>The first line contains two integers $$$n$$$ and $$$k$$$ ($$$ 1\\le n, k \\le 500$$$)\u00a0\u2014 the number of shrubs and the basket capacity, respectively.</p><p>The $$$i$$$-th of the next $$$n$$$ lines contain two integers $$$a_i$$$ and $$$b_i$$$ ($$$0 \\le a_i, b_i \\le 10^9$$$)\u00a0\u2014 the number of red and blue berries in the $$$i$$$-th shrub, respectively.</p>",
    "outputSpecification": "<p>Output one integer\u00a0\u2014 the maximum number of baskets that Phoenix can fill completely.</p>",
    "samples": [
        {
            "input": "\n2 4\n5 2\n2 1\n",
            "output": "\n2\n"
        },
        {
            "input": "\n1 5\n2 3\n",
            "output": "\n1\n"
        },
        {
            "input": "\n2 5\n2 1\n1 3\n",
            "output": "\n0\n"
        },
        {
            "input": "\n1 2\n1000000000 1\n",
            "output": "\n500000000\n"
        }
    ],
    "note": "<p>The first example is described above.</p><p>In the second example, Phoenix can fill one basket fully using all the berries from the first (and only) shrub.</p><p>In the third example, Phoenix cannot fill any basket completely because there are less than $$$5$$$ berries in each shrub, less than $$$5$$$ total red berries, and less than $$$5$$$ total blue berries.</p><p>In the fourth example, Phoenix can put all the red berries into baskets, leaving an extra blue berry behind.</p>",
    "contestId": 1348,
    "index": "E",
    "name": "Phoenix and Berries",
    "type": "PROGRAMMING",
    "tags": [
        "brute force",
        "dp",
        "greedy",
        "math"
    ],
    "solvedCount": 1999
}