{
    "title": "A. Line Trip",
    "timeLimit": {
        "value": 2.0,
        "unit": "seconds"
    },
    "memoryLimit": {
        "value": 256.0,
        "unit": "megabytes"
    },
    "statement": "<p>There is a road, which can be represented as a number line. You are located in the point $$$0$$$ of the number line, and you want to travel from the point $$$0$$$ to the point $$$x$$$, and back to the point $$$0$$$.</p><p>You travel by car, which spends $$$1$$$ liter of gasoline per $$$1$$$ unit of distance travelled. When you start at the point $$$0$$$, your car is fully fueled (its gas tank contains the maximum possible amount of fuel).</p><p>There are $$$n$$$ gas stations, located in points $$$a_1, a_2, \\dots, a_n$$$. When you arrive at a gas station, you fully refuel your car. <span class=\"tex-font-style-bf\">Note that you can refuel only at gas stations, and there are no gas stations in points $$$0$$$ and $$$x$$$</span>.</p><p>You have to calculate the minimum possible volume of the gas tank in your car (in liters) that will allow you to travel from the point $$$0$$$ to the point $$$x$$$ and back to the point $$$0$$$.</p>",
    "inputSpecification": "<p>The first line contains one integer $$$t$$$ ($$$1 \\le t \\le 1000$$$) \u2014 the number of test cases.</p><p>Each test case consists of two lines:</p><ul> <li> the first line contains two integers $$$n$$$ and $$$x$$$ ($$$1 \\le n \\le 50$$$; $$$2 \\le x \\le 100$$$); </li><li> the second line contains $$$n$$$ integers $$$a_1, a_2, \\dots, a_n$$$ ($$$0 &lt; a_1 &lt; a_2 &lt; \\dots &lt; a_n &lt; x$$$). </li></ul>",
    "outputSpecification": "<p>For each test case, print one integer \u2014 the minimum possible volume of the gas tank in your car that will allow you to travel from the point $$$0$$$ to the point $$$x$$$ and back.</p>",
    "samples": [
        {
            "input": "\n<div class=\"test-example-line test-example-line-even test-example-line-0\">3</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">3 7</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">1 2 5</div><div class=\"test-example-line test-example-line-even test-example-line-2\">3 6</div><div class=\"test-example-line test-example-line-even test-example-line-2\">1 2 5</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">1 10</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">7</div>",
            "output": "\n4\n3\n7\n"
        }
    ],
    "note": "<p>In the first test case of the example, if the car has a gas tank of $$$4$$$ liters, you can travel to $$$x$$$ and back as follows:</p><ul> <li> travel to the point $$$1$$$, then your car's gas tank contains $$$3$$$ liters of fuel; </li><li> refuel at the point $$$1$$$, then your car's gas tank contains $$$4$$$ liters of fuel; </li><li> travel to the point $$$2$$$, then your car's gas tank contains $$$3$$$ liters of fuel; </li><li> refuel at the point $$$2$$$, then your car's gas tank contains $$$4$$$ liters of fuel; </li><li> travel to the point $$$5$$$, then your car's gas tank contains $$$1$$$ liter of fuel; </li><li> refuel at the point $$$5$$$, then your car's gas tank contains $$$4$$$ liters of fuel; </li><li> travel to the point $$$7$$$, then your car's gas tank contains $$$2$$$ liters of fuel; </li><li> travel to the point $$$5$$$, then your car's gas tank contains $$$0$$$ liters of fuel; </li><li> refuel at the point $$$5$$$, then your car's gas tank contains $$$4$$$ liters of fuel; </li><li> travel to the point $$$2$$$, then your car's gas tank contains $$$1$$$ liter of fuel; </li><li> refuel at the point $$$2$$$, then your car's gas tank contains $$$4$$$ liters of fuel; </li><li> travel to the point $$$1$$$, then your car's gas tank contains $$$3$$$ liters of fuel; </li><li> refuel at the point $$$1$$$, then your car's gas tank contains $$$4$$$ liters of fuel; </li><li> travel to the point $$$0$$$, then your car's gas tank contains $$$3$$$ liters of fuel. </li></ul>",
    "contestId": 1901,
    "index": "A",
    "name": "Line Trip",
    "type": "PROGRAMMING",
    "tags": [
        "greedy",
        "math"
    ],
    "solvedCount": 26502
}