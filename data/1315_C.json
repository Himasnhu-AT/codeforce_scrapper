{
    "title": "C. Restoring Permutation",
    "timeLimit": {
        "value": 1.0,
        "unit": "second"
    },
    "memoryLimit": {
        "value": 256.0,
        "unit": "megabytes"
    },
    "statement": "<p>You are given a sequence $$$b_1, b_2, \\ldots, b_n$$$. Find the lexicographically minimal permutation $$$a_1, a_2, \\ldots, a_{2n}$$$ such that $$$b_i = \\min(a_{2i-1}, a_{2i})$$$, or determine that it is impossible.</p>",
    "inputSpecification": "<p>Each test contains one or more test cases. The first line contains the number of test cases $$$t$$$ ($$$1 \\le t \\le 100$$$).</p><p>The first line of each test case consists of one integer $$$n$$$\u00a0\u2014 the number of elements in the sequence $$$b$$$ ($$$1 \\le n \\le 100$$$).</p><p>The second line of each test case consists of $$$n$$$ different integers $$$b_1, \\ldots, b_n$$$\u00a0\u2014 elements of the sequence $$$b$$$ ($$$1 \\le b_i \\le 2n$$$).</p><p>It is guaranteed that the sum of $$$n$$$ by all test cases doesn't exceed $$$100$$$.</p>",
    "outputSpecification": "<p>For each test case, if there is no appropriate permutation, print one number $$$-1$$$.</p><p>Otherwise, print $$$2n$$$ integers $$$a_1, \\ldots, a_{2n}$$$\u00a0\u2014 required lexicographically minimal permutation of numbers from $$$1$$$ to $$$2n$$$.</p>",
    "samples": [
        {
            "input": "\n5\n1\n1\n2\n4 1\n3\n4 1 3\n4\n2 3 4 5\n5\n1 5 7 2 8\n",
            "output": "\n1 2 \n-1\n4 5 1 2 3 6 \n-1\n1 3 5 6 7 9 2 4 8 10 \n"
        }
    ],
    "note": null,
    "contestId": 1315,
    "index": "C",
    "name": "Restoring Permutation",
    "type": "PROGRAMMING",
    "tags": [
        "greedy"
    ],
    "solvedCount": 9827
}