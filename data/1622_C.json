{
    "title": "C. Set or Decrease",
    "timeLimit": {
        "value": 2.0,
        "unit": "seconds"
    },
    "memoryLimit": {
        "value": 256.0,
        "unit": "megabytes"
    },
    "statement": "<p>You are given an integer array $$$a_1, a_2, \\dots, a_n$$$ and integer $$$k$$$.</p><p>In one step you can </p><ul> <li> either choose some index $$$i$$$ and decrease $$$a_i$$$ by one (make $$$a_i = a_i - 1$$$); </li><li> or choose two indices $$$i$$$ and $$$j$$$ and set $$$a_i$$$ equal to $$$a_j$$$ (make $$$a_i = a_j$$$). </li></ul><p>What is the minimum number of steps you need to make the sum of array $$$\\sum\\limits_{i=1}^{n}{a_i} \\le k$$$? (You are allowed to make values of array negative).</p>",
    "inputSpecification": "<p>The first line contains a single integer $$$t$$$ ($$$1 \\le t \\le 10^4$$$)\u00a0\u2014 the number of test cases.</p><p>The first line of each test case contains two integers $$$n$$$ and $$$k$$$ ($$$1 \\le n \\le 2 \\cdot 10^5$$$; $$$1 \\le k \\le 10^{15}$$$)\u00a0\u2014 the size of array $$$a$$$ and upper bound on its sum.</p><p>The second line of each test case contains $$$n$$$ integers $$$a_1, a_2, \\dots, a_n$$$ ($$$1 \\le a_i \\le 10^9$$$)\u00a0\u2014 the array itself.</p><p>It's guaranteed that the sum of $$$n$$$ over all test cases doesn't exceed $$$2 \\cdot 10^5$$$.</p>",
    "outputSpecification": "<p>For each test case, print one integer\u00a0\u2014 the minimum number of steps to make $$$\\sum\\limits_{i=1}^{n}{a_i} \\le k$$$.</p>",
    "samples": [
        {
            "input": "\n4\n1 10\n20\n2 69\n6 9\n7 8\n1 2 1 3 1 2 1\n10 1\n1 2 3 1 2 6 1 6 8 10\n",
            "output": "\n10\n0\n2\n7\n"
        }
    ],
    "note": "<p>In the first test case, you should decrease $$$a_1$$$ $$$10$$$ times to get the sum lower or equal to $$$k = 10$$$.</p><p>In the second test case, the sum of array $$$a$$$ is already less or equal to $$$69$$$, so you don't need to change it.</p><p>In the third test case, you can, for example: </p><ol> <li> set $$$a_4 = a_3 = 1$$$; </li><li> decrease $$$a_4$$$ by one, and get $$$a_4 = 0$$$. </li></ol> As a result, you'll get array $$$[1, 2, 1, 0, 1, 2, 1]$$$ with sum less or equal to $$$8$$$ in $$$1 + 1 = 2$$$ steps.<p>In the fourth test case, you can, for example: </p><ol> <li> choose $$$a_7$$$ and decrease in by one $$$3$$$ times; you'll get $$$a_7 = -2$$$; </li><li> choose $$$4$$$ elements $$$a_6$$$, $$$a_8$$$, $$$a_9$$$ and $$$a_{10}$$$ and them equal to $$$a_7 = -2$$$. </li></ol> As a result, you'll get array $$$[1, 2, 3, 1, 2, -2, -2, -2, -2, -2]$$$ with sum less or equal to $$$1$$$ in $$$3 + 4 = 7$$$ steps.",
    "contestId": 1622,
    "index": "C",
    "name": "Set or Decrease",
    "type": "PROGRAMMING",
    "tags": [
        "binary search",
        "brute force",
        "greedy",
        "sortings"
    ],
    "solvedCount": 12522
}