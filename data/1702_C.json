{
    "title": "C. Train and Queries",
    "timeLimit": {
        "value": 3.0,
        "unit": "seconds"
    },
    "memoryLimit": {
        "value": 256.0,
        "unit": "megabytes"
    },
    "statement": "<p>Along the railroad there are stations indexed from $$$1$$$ to $$$10^9$$$. An express train always travels along a route consisting of $$$n$$$ stations with indices $$$u_1, u_2, \\dots, u_n$$$, where ($$$1 \\le u_i \\le 10^9$$$). The train travels along the route from left to right. It starts at station $$$u_1$$$, then stops at station $$$u_2$$$, then at $$$u_3$$$, and so on. Station $$$u_n$$$\u00a0\u2014 the terminus.</p><p>It is possible that the train will visit the same station more than once. That is, there may be duplicates among the values $$$u_1, u_2, \\dots, u_n$$$.</p><p>You are given $$$k$$$ queries, each containing two different integers $$$a_j$$$ and $$$b_j$$$ ($$$1 \\le a_j, b_j \\le 10^9$$$). For each query, determine whether it is possible to travel by train from the station with index $$$a_j$$$ to the station with index $$$b_j$$$.</p><p>For example, let the train route consist of $$$6$$$ of stations with indices [$$$3, 7, 1, 5, 1, 4$$$] and give $$$3$$$ of the following queries: </p><ul> <li> $$$a_1 = 3$$$, $$$b_1 = 5$$$<p>It is possible to travel from station $$$3$$$ to station $$$5$$$ by taking a section of the route consisting of stations [$$$3, 7, 1, 5$$$]. Answer: <span class=\"tex-font-style-tt\">YES</span>. </p></li><li> $$$a_2 = 1$$$, $$$b_2 = 7$$$<p>You cannot travel from station $$$1$$$ to station $$$7$$$ because the train cannot travel in the opposite direction. Answer: <span class=\"tex-font-style-tt\">NO</span>. </p></li><li> $$$a_3 = 3$$$, $$$b_3 = 10$$$<p>It is not possible to travel from station $$$3$$$ to station $$$10$$$ because station $$$10$$$ is not part of the train's route. Answer: <span class=\"tex-font-style-tt\">NO</span>. </p></li></ul>",
    "inputSpecification": "<p>The first line of the input contains an integer $$$t$$$ ($$$1 \\le t \\le 10^4$$$)\u00a0\u2014the number of test cases in the test.</p><p>The descriptions of the test cases follow.</p><p>The first line of each test case is empty.</p><p>The second line of each test case contains two integers: $$$n$$$ and $$$k$$$ ($$$1 \\le n \\le 2 \\cdot 10^5, 1 \\le k \\le 2 \\cdot 10^5$$$)\u00a0\u2014the number of stations the train route consists of and the number of queries.</p><p>The third line of each test case contains exactly $$$n$$$ integers $$$u_1, u_2, \\dots, u_n$$$ ($$$1 \\le u_i \\le 10^9$$$). The values $$$u_1, u_2, \\dots, u_n$$$ are not necessarily different.</p><p>The following $$$k$$$ lines contain two different integers $$$a_j$$$ and $$$b_j$$$ ($$$1 \\le a_j, b_j \\le 10^9$$$) describing the query with index $$$j$$$.</p><p>It is guaranteed that the sum of $$$n$$$ values over all test cases in the test does not exceed $$$2 \\cdot 10^5$$$. Similarly, it is guaranteed that the sum of $$$k$$$ values over all test cases in the test also does not exceed $$$2 \\cdot 10^5$$$</p>",
    "outputSpecification": "<p>For each test case, output on a separate line:</p><ul> <li> <span class=\"tex-font-style-tt\">YES</span>, if you can travel by train from the station with index $$$a_j$$$ to the station with index $$$b_j$$$</li><li> <span class=\"tex-font-style-tt\">NO</span> otherwise. </li></ul><p>You can output <span class=\"tex-font-style-tt\">YES</span> and <span class=\"tex-font-style-tt\">NO</span> in any case (for example, strings <span class=\"tex-font-style-tt\">yEs</span>, <span class=\"tex-font-style-tt\">yes</span>, <span class=\"tex-font-style-tt\">Yes</span> and <span class=\"tex-font-style-tt\">YES</span> will be recognized as a positive response).</p>",
    "samples": [
        {
            "input": "\n<div class=\"test-example-line test-example-line-even test-example-line-0\">3</div><div class=\"test-example-line test-example-line-odd test-example-line-1\"><br/></div><div class=\"test-example-line test-example-line-odd test-example-line-1\">6 3</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">3 7 1 5 1 4</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">3 5</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">1 7</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">3 10</div><div class=\"test-example-line test-example-line-even test-example-line-2\"><br/></div><div class=\"test-example-line test-example-line-even test-example-line-2\">3 3</div><div class=\"test-example-line test-example-line-even test-example-line-2\">1 2 1</div><div class=\"test-example-line test-example-line-even test-example-line-2\">2 1</div><div class=\"test-example-line test-example-line-even test-example-line-2\">1 2</div><div class=\"test-example-line test-example-line-even test-example-line-2\">4 5</div><div class=\"test-example-line test-example-line-odd test-example-line-3\"><br/></div><div class=\"test-example-line test-example-line-odd test-example-line-3\">7 5</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">2 1 1 1 2 4 4</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">1 3</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">1 4</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">2 1</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">4 1</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">1 2</div>",
            "output": "\nYES\nNO\nNO\nYES\nYES\nNO\nNO\nYES\nYES\nNO\nYES\n"
        }
    ],
    "note": "<p>The first test case is explained in the problem statement.</p>",
    "contestId": 1702,
    "index": "C",
    "name": "Train and Queries",
    "type": "PROGRAMMING",
    "tags": [
        "data structures",
        "greedy"
    ],
    "solvedCount": 21634
}