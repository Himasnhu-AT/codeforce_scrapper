{
    "title": "B. Even-Odd Increments ",
    "timeLimit": {
        "value": 2.0,
        "unit": "seconds"
    },
    "memoryLimit": {
        "value": 256.0,
        "unit": "megabytes"
    },
    "statement": "<p>You are given $$$n$$$ of integers $$$a_1, a_2, \\ldots, a_n$$$. Process $$$q$$$ queries of two types:</p><ul><li> query of the form \"<span class=\"tex-font-style-tt\">0 $$$x_j$$$</span>\": add the value $$$x_j$$$ to all even elements of the array $$$a$$$,</li><li> query of the form \"<span class=\"tex-font-style-tt\">1 $$$x_j$$$</span>\": add the value $$$x_j$$$ to all odd elements of the array $$$a$$$.</li></ul><p>Note that when processing the query, we look specifically at the odd/even value of $$$a_i$$$, not its index.</p><p>After processing each query, print the sum of the elements of the array $$$a$$$.</p><p>Please note that the answer for some test cases won't fit into 32-bit integer type, so you should use at least 64-bit integer type in your programming language (like <span class=\"tex-font-style-tt\">long long</span> for C++).</p>",
    "inputSpecification": "<p>The first line of the input contains an integer $$$t$$$ $$$(1 \\leq t \\leq 10^4$$$) \u2014 the number of test cases.</p><p>The descriptions of the test cases follow.</p><p>The first line of each test case contains two integers $$$n$$$ and $$$q$$$ ($$$1 \\leq n$$$, $$$q \\leq 10^5$$$) \u2014 the length of array $$$a$$$ and the number of queries.</p><p>The second line of each test case contains exactly $$$n$$$ integers: $$$a_1, a_2, \\ldots, a_n$$$ ($$$1 \\leq a_i \\leq 10^9$$$) \u2014 elements of the array $$$a$$$.</p><p>The following $$$q$$$ lines contain queries as two integers $$$type_j$$$ and $$$x_j$$$ $$$(0 \\leq type_j \\leq 1$$$, $$$1 \\leq x_j \\leq 10^4$$$).</p><p>It is guaranteed that the sum of values $$$n$$$ over all test cases in a test does not exceed $$$10^5$$$. Similarly, the sum of values $$$q$$$ over all test cases does not exceed $$$10^5$$$.</p>",
    "outputSpecification": "<p>For each test case, print $$$q$$$ numbers: the sum of the elements of the array $$$a$$$ after processing a query.</p>",
    "samples": [
        {
            "input": "\n<div class=\"test-example-line test-example-line-even test-example-line-0\">4</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">1 1</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">1</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">1 1</div><div class=\"test-example-line test-example-line-even test-example-line-2\">3 3</div><div class=\"test-example-line test-example-line-even test-example-line-2\">1 2 4</div><div class=\"test-example-line test-example-line-even test-example-line-2\">0 2</div><div class=\"test-example-line test-example-line-even test-example-line-2\">1 3</div><div class=\"test-example-line test-example-line-even test-example-line-2\">0 5</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">6 7</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">1 3 2 4 10 48</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">1 6</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">0 5</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">0 4</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">0 5</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">1 3</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">0 12</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">0 1</div><div class=\"test-example-line test-example-line-even test-example-line-4\">6 7</div><div class=\"test-example-line test-example-line-even test-example-line-4\">1000000000 1000000000 1000000000 11 15 17</div><div class=\"test-example-line test-example-line-even test-example-line-4\">0 17</div><div class=\"test-example-line test-example-line-even test-example-line-4\">1 10000</div><div class=\"test-example-line test-example-line-even test-example-line-4\">1 51</div><div class=\"test-example-line test-example-line-even test-example-line-4\">0 92</div><div class=\"test-example-line test-example-line-even test-example-line-4\">0 53</div><div class=\"test-example-line test-example-line-even test-example-line-4\">1 16</div><div class=\"test-example-line test-example-line-even test-example-line-4\">0 1</div>",
            "output": "\n2\n11\n14\n29\n80\n100\n100\n100\n118\n190\n196\n3000000094\n3000060094\n3000060400\n3000060952\n3000061270\n3000061366\n3000061366\n"
        }
    ],
    "note": "<p>In the first test case, the array $$$a = [2]$$$ after the first query.</p><p>In the third test case, the array $$$a$$$ is modified as follows: $$$[1, 3, 2, 4, 10, 48]$$$ $$$\\rightarrow$$$ $$$[7, 9, 2, 4, 10, 48]$$$ $$$\\rightarrow$$$ $$$[7, 9, 7, 9, 15, 53]$$$ $$$\\rightarrow$$$ $$$[7, 9, 7, 9, 15, 53]$$$ $$$\\rightarrow$$$ $$$[10, 12, 10, 12, 18, 56]$$$ $$$\\rightarrow$$$ $$$[22, 24, 22, 24, 30, 68]$$$ $$$\\rightarrow$$$ $$$[23, 25, 23, 25, 31, 69]$$$.</p>",
    "contestId": 1744,
    "index": "B",
    "name": "Even-Odd Increments ",
    "type": "PROGRAMMING",
    "tags": [
        "implementation",
        "math"
    ],
    "solvedCount": 22971
}