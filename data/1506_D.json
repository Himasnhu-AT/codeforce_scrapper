{
    "title": "D. Epic Transformation",
    "timeLimit": {
        "value": 2.0,
        "unit": "seconds"
    },
    "memoryLimit": {
        "value": 256.0,
        "unit": "megabytes"
    },
    "statement": "<p>You are given an array $$$a$$$ of length $$$n$$$ consisting of integers. You can apply the following operation, consisting of several steps, on the array $$$a$$$ <span class=\"tex-font-style-bf\">zero</span> or more times: </p><ul> <li> you select two <span class=\"tex-font-style-bf\">different</span> numbers in the array $$$a_i$$$ and $$$a_j$$$; </li><li> you remove $$$i$$$-th and $$$j$$$-th elements from the array. </li></ul><p>For example, if $$$n=6$$$ and $$$a=[1, 6, 1, 1, 4, 4]$$$, then you can perform the following sequence of operations: </p><ul> <li> select $$$i=1, j=5$$$. The array $$$a$$$ becomes equal to $$$[6, 1, 1, 4]$$$; </li><li> select $$$i=1, j=2$$$. The array $$$a$$$ becomes equal to $$$[1, 4]$$$. </li></ul><p>What can be the minimum size of the array after applying some sequence of operations to it?</p>",
    "inputSpecification": "<p>The first line contains a single integer $$$t$$$ ($$$1 \\le t \\le 10^4$$$). Then $$$t$$$ test cases follow.</p><p>The first line of each test case contains a single integer $$$n$$$ ($$$1 \\le n \\le 2 \\cdot 10^5$$$) is length of the array $$$a$$$.</p><p>The second line of each test case contains $$$n$$$ integers $$$a_1, a_2, \\ldots, a_n$$$ ($$$1 \\le a_i \\le 10^9$$$).</p><p>It is guaranteed that the sum of $$$n$$$ over all test cases does not exceed $$$2 \\cdot 10^5$$$.</p>",
    "outputSpecification": "<p>For each test case, output the minimum possible size of the array after applying some sequence of operations to it.</p>",
    "samples": [
        {
            "input": "\n5\n6\n1 6 1 1 4 4\n2\n1 2\n2\n1 1\n5\n4 5 4 5 4\n6\n2 3 2 1 3 1\n",
            "output": "\n0\n0\n2\n1\n0\n"
        }
    ],
    "note": null,
    "contestId": 1506,
    "index": "D",
    "name": "Epic Transformation",
    "type": "PROGRAMMING",
    "tags": [
        "constructive algorithms",
        "data structures",
        "greedy"
    ],
    "solvedCount": 20985
}