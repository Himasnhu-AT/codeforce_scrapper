{
    "title": "C. Building Permutation",
    "timeLimit": {
        "value": 1.0,
        "unit": "second"
    },
    "memoryLimit": {
        "value": 256.0,
        "unit": "megabytes"
    },
    "statement": "<p><span class=\"tex-font-style-it\"><span class=\"tex-font-style-bf\">Permutation</span> <span class=\"tex-span\"><i>p</i></span> is an ordered set of integers <span class=\"tex-span\"><i>p</i><sub class=\"lower-index\">1</sub>,\u2009\u2009<i>p</i><sub class=\"lower-index\">2</sub>,\u2009\u2009...,\u2009\u2009<i>p</i><sub class=\"lower-index\"><i>n</i></sub></span>, consisting of <span class=\"tex-span\"><i>n</i></span> distinct positive integers, each of them doesn't exceed <span class=\"tex-span\"><i>n</i></span>. We'll denote the <span class=\"tex-span\"><i>i</i></span>-th element of permutation <span class=\"tex-span\"><i>p</i></span> as <span class=\"tex-span\"><i>p</i><sub class=\"lower-index\"><i>i</i></sub></span>. We'll call number <span class=\"tex-span\"><i>n</i></span> the size or the length of permutation <span class=\"tex-span\"><i>p</i><sub class=\"lower-index\">1</sub>,\u2009\u2009<i>p</i><sub class=\"lower-index\">2</sub>,\u2009\u2009...,\u2009\u2009<i>p</i><sub class=\"lower-index\"><i>n</i></sub></span>.</span></p><p>You have a sequence of integers <span class=\"tex-span\"><i>a</i><sub class=\"lower-index\">1</sub>,\u2009<i>a</i><sub class=\"lower-index\">2</sub>,\u2009...,\u2009<i>a</i><sub class=\"lower-index\"><i>n</i></sub></span>. In one move, you are allowed to decrease or increase any number by one. Count the minimum number of moves, needed to build a permutation from this sequence.</p>",
    "inputSpecification": "<p>The first line contains integer <span class=\"tex-span\"><i>n</i></span> (<span class=\"tex-span\">1\u2009\u2264\u2009<i>n</i>\u2009\u2264\u20093\u00b710<sup class=\"upper-index\">5</sup></span>) \u2014 the size of the sought permutation. The second line contains <span class=\"tex-span\"><i>n</i></span> integers <span class=\"tex-span\"><i>a</i><sub class=\"lower-index\">1</sub>,\u2009<i>a</i><sub class=\"lower-index\">2</sub>,\u2009...,\u2009<i>a</i><sub class=\"lower-index\"><i>n</i></sub></span> (<span class=\"tex-span\">\u2009-\u200910<sup class=\"upper-index\">9</sup>\u2009\u2264\u2009<i>a</i><sub class=\"lower-index\"><i>i</i></sub>\u2009\u2264\u200910<sup class=\"upper-index\">9</sup></span>).</p>",
    "outputSpecification": "<p>Print a single number \u2014 the minimum number of moves.</p><p>Please, do not use the <span class=\"tex-font-style-tt\">%lld</span> specifier to read or write 64-bit integers in C++. It is preferred to use the cin, cout streams or the <span class=\"tex-font-style-tt\">%I64d</span> specifier.</p>",
    "samples": [
        {
            "input": "2<br/>3 0<br/>",
            "output": "2<br/>"
        },
        {
            "input": "3<br/>-1 -1 2<br/>",
            "output": "6<br/>"
        }
    ],
    "note": "<p>In the first sample you should decrease the first number by one and then increase the second number by one. The resulting permutation is <span class=\"tex-span\">(2,\u20091)</span>.</p><p>In the second sample you need 6 moves to build permutation <span class=\"tex-span\">(1,\u20093,\u20092)</span>.</p>",
    "contestId": 285,
    "index": "C",
    "name": "Building Permutation",
    "type": "PROGRAMMING",
    "tags": [
        "greedy",
        "implementation",
        "sortings"
    ],
    "solvedCount": 22645
}