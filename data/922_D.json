{
    "title": "D. Robot Vacuum Cleaner",
    "timeLimit": {
        "value": 1.0,
        "unit": "second"
    },
    "memoryLimit": {
        "value": 256.0,
        "unit": "megabytes"
    },
    "statement": "<p>Pushok the dog has been chasing Imp for a few hours already.</p><center> <img class=\"tex-graphics\" src=\"https://espresso.codeforces.com/8349588abe648162884b78b5b42f99880b695f4e.png\" style=\"max-width: 100.0%;max-height: 100.0%;\"/> </center><p>Fortunately, Imp knows that Pushok is afraid of a robot vacuum cleaner. </p><p>While moving, the robot generates a string <span class=\"tex-span\"><i>t</i></span> consisting of letters '<span class=\"tex-font-style-tt\">s</span>' and '<span class=\"tex-font-style-tt\">h</span>', that produces a lot of noise. We define <span class=\"tex-font-style-it\">noise</span> of string <span class=\"tex-span\"><i>t</i></span> as the number of occurrences of string \"<span class=\"tex-font-style-tt\">sh</span>\" as a <span class=\"tex-font-style-bf\">subsequence</span> in it, in other words, the number of such pairs <span class=\"tex-span\">(<i>i</i>,\u2009<i>j</i>)</span>, that <span class=\"tex-span\"><i>i</i>\u2009&lt;\u2009<i>j</i></span> and <img align=\"middle\" class=\"tex-formula\" src=\"https://espresso.codeforces.com/fa3acb2a51fec405fff3ffa731bf524c21b71047.png\" style=\"max-width: 100.0%;max-height: 100.0%;\"/> and <img align=\"middle\" class=\"tex-formula\" src=\"https://espresso.codeforces.com/84e6f388d5468490ab0877195de0181911c46019.png\" style=\"max-width: 100.0%;max-height: 100.0%;\"/>. </p><p>The robot is off at the moment. Imp knows that it has a sequence of strings <span class=\"tex-span\"><i>t</i><sub class=\"lower-index\"><i>i</i></sub></span> in its memory, and he can arbitrary change their order. When the robot is started, it generates the string <span class=\"tex-span\"><i>t</i></span> as a concatenation of these strings in the given order. The noise of the resulting string equals the noise of this concatenation.</p><p>Help Imp to find the maximum noise he can achieve by changing the order of the strings.</p>",
    "inputSpecification": "<p>The first line contains a single integer <span class=\"tex-span\"><i>n</i></span> (<span class=\"tex-span\">1\u2009\u2264\u2009<i>n</i>\u2009\u2264\u200910<sup class=\"upper-index\">5</sup></span>)\u00a0\u2014 the number of strings in robot's memory.</p><p>Next <span class=\"tex-span\"><i>n</i></span> lines contain the strings <span class=\"tex-span\"><i>t</i><sub class=\"lower-index\">1</sub>,\u2009<i>t</i><sub class=\"lower-index\">2</sub>,\u2009...,\u2009<i>t</i><sub class=\"lower-index\"><i>n</i></sub></span>, one per line. It is guaranteed that the strings are non-empty, contain only English letters '<span class=\"tex-font-style-tt\">s</span>' and '<span class=\"tex-font-style-tt\">h</span>' and their total length does not exceed <span class=\"tex-span\">10<sup class=\"upper-index\">5</sup></span>.</p>",
    "outputSpecification": "<p>Print a single integer\u00a0\u2014 the maxumum possible <span class=\"tex-font-style-it\">noise</span> Imp can achieve by changing the order of the strings.</p>",
    "samples": [
        {
            "input": "4<br/>ssh<br/>hs<br/>s<br/>hhhs<br/>",
            "output": "18<br/>"
        },
        {
            "input": "2<br/>h<br/>s<br/>",
            "output": "1<br/>"
        }
    ],
    "note": "<p>The optimal concatenation in the first sample is <span class=\"tex-span\"><i>ssshhshhhs</i></span>.</p>",
    "contestId": 922,
    "index": "D",
    "name": "Robot Vacuum Cleaner",
    "type": "PROGRAMMING",
    "tags": [
        "greedy",
        "sortings"
    ],
    "solvedCount": 4252
}