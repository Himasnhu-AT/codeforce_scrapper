{
    "title": "B1. Painting the Array I",
    "timeLimit": {
        "value": 2.0,
        "unit": "seconds"
    },
    "memoryLimit": {
        "value": 512.0,
        "unit": "megabytes"
    },
    "statement": "<p><span class=\"tex-font-style-bf\">The only difference between the two versions is that this version asks the <span class=\"tex-font-style-it\">maximal</span> possible answer.</span></p><p>Homer likes arrays a lot. Today he is painting an array $$$a_1, a_2, \\dots, a_n$$$ with two kinds of colors, <span class=\"tex-font-style-bf\">white</span> and <span class=\"tex-font-style-bf\">black</span>. A painting assignment for $$$a_1, a_2, \\dots, a_n$$$ is described by an array $$$b_1, b_2, \\dots, b_n$$$ that $$$b_i$$$ indicates the color of $$$a_i$$$ ($$$0$$$ for white and $$$1$$$ for black).</p><p>According to a painting assignment $$$b_1, b_2, \\dots, b_n$$$, the array $$$a$$$ is split into two new arrays $$$a^{(0)}$$$ and $$$a^{(1)}$$$, where $$$a^{(0)}$$$ is the sub-sequence of all white elements in $$$a$$$ and $$$a^{(1)}$$$ is the sub-sequence of all black elements in $$$a$$$. For example, if $$$a = [1,2,3,4,5,6]$$$ and $$$b = [0,1,0,1,0,0]$$$, then $$$a^{(0)} = [1,3,5,6]$$$ and $$$a^{(1)} = [2,4]$$$.</p><p>The number of segments in an array $$$c_1, c_2, \\dots, c_k$$$, denoted $$$\\mathit{seg}(c)$$$, is the number of elements if we merge all adjacent elements with the same value in $$$c$$$. For example, the number of segments in $$$[1,1,2,2,3,3,3,2]$$$ is $$$4$$$, because the array will become $$$[1,2,3,2]$$$ after merging adjacent elements with the same value. Especially, the number of segments in an empty array is $$$0$$$.</p><p>Homer wants to find a painting assignment $$$b$$$, according to which the number of segments in both $$$a^{(0)}$$$ and $$$a^{(1)}$$$, i.e. $$$\\mathit{seg}(a^{(0)})+\\mathit{seg}(a^{(1)})$$$, is as <span class=\"tex-font-style-bf\">large</span> as possible. Find this number.</p>",
    "inputSpecification": "<p>The first line contains an integer $$$n$$$ ($$$1 \\leq n \\leq 10^5$$$).</p><p>The second line contains $$$n$$$ integers $$$a_1, a_2, \\dots, a_n$$$ ($$$1 \\leq a_i \\leq n$$$).</p>",
    "outputSpecification": "<p>Output a single integer, indicating the <span class=\"tex-font-style-bf\">maximal</span> possible total number of segments.</p>",
    "samples": [
        {
            "input": "\n7\n1 1 2 2 3 3 3\n",
            "output": "\n6\n"
        },
        {
            "input": "\n7\n1 2 3 4 5 6 7\n",
            "output": "\n7\n"
        }
    ],
    "note": "<p>In the first example, we can choose $$$a^{(0)} = [1,2,3,3]$$$, $$$a^{(1)} = [1,2,3]$$$ and $$$\\mathit{seg}(a^{(0)}) = \\mathit{seg}(a^{(1)}) = 3$$$. So the answer is $$$3+3 = 6$$$.</p><p>In the second example, we can choose $$$a^{(0)} = [1,2,3,4,5,6,7]$$$ and $$$a^{(1)}$$$ is empty. We can see that $$$\\mathit{seg}(a^{(0)}) = 7$$$ and $$$\\mathit{seg}(a^{(1)}) = 0$$$. So the answer is $$$7+0 = 7$$$.</p>",
    "contestId": 1479,
    "index": "B1",
    "name": "Painting the Array I",
    "type": "PROGRAMMING",
    "tags": [
        "constructive algorithms",
        "data structures",
        "dp",
        "greedy",
        "implementation"
    ],
    "solvedCount": 6780
}