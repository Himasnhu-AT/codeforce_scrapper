{
    "title": "G1. Into Blocks (easy version)",
    "timeLimit": {
        "value": 5.0,
        "unit": "seconds"
    },
    "memoryLimit": {
        "value": 256.0,
        "unit": "megabytes"
    },
    "statement": "<p><span class=\"tex-font-style-it\">This is an easier version of the next problem. In this version, $$$q = 0$$$</span>.</p><p>A sequence of integers is called <span class=\"tex-font-style-it\">nice</span> if its elements are arranged in blocks like in $$$[3, 3, 3, 4, 1, 1]$$$. Formally, if two elements are equal, everything in between must also be equal.</p><p>Let's define <span class=\"tex-font-style-it\">difficulty</span> of a sequence as a minimum possible number of elements to change to get a nice sequence. However, if you change at least one element of value $$$x$$$ to value $$$y$$$, you must also change all other elements of value $$$x$$$ into $$$y$$$ as well. For example, for $$$[3, 3, 1, 3, 2, 1, 2]$$$ it isn't allowed to change first $$$1$$$ to $$$3$$$ and second $$$1$$$ to $$$2$$$. You need to leave $$$1$$$'s untouched or change them to the same value.</p><p>You are given a sequence of integers $$$a_1, a_2, \\ldots, a_n$$$ and $$$q$$$ updates.</p><p>Each update is of form \"$$$i$$$ $$$x$$$\"\u00a0\u2014 change $$$a_i$$$ to $$$x$$$. Updates are not independent (the change stays for the future).</p><p>Print the difficulty of the initial sequence and of the sequence after every update.</p>",
    "inputSpecification": "<p>The first line contains integers $$$n$$$ and $$$q$$$ ($$$1 \\le n \\le 200\\,000$$$, $$$q = 0$$$), the length of the sequence and the number of the updates.</p><p>The second line contains $$$n$$$ integers $$$a_1, a_2, \\ldots, a_n$$$ ($$$1 \\le a_i \\le 200\\,000$$$), the initial sequence.</p><p>Each of the following $$$q$$$ lines contains integers $$$i_t$$$ and $$$x_t$$$ ($$$1 \\le i_t \\le n$$$, $$$1 \\le x_t \\le 200\\,000$$$), the position and the new value for this position.</p>",
    "outputSpecification": "<p>Print $$$q+1$$$ integers, the answer for the initial sequence and the answer after every update.</p>",
    "samples": [
        {
            "input": "\n5 0\n3 7 3 7 3\n",
            "output": "\n2\n"
        },
        {
            "input": "\n10 0\n1 2 1 2 3 1 1 1 50 1\n",
            "output": "\n4\n"
        },
        {
            "input": "\n6 0\n6 6 3 3 4 4\n",
            "output": "\n0\n"
        },
        {
            "input": "\n7 0\n3 3 1 3 2 1 2\n",
            "output": "\n4\n"
        }
    ],
    "note": null,
    "contestId": 1209,
    "index": "G1",
    "name": "Into Blocks (easy version)",
    "type": "PROGRAMMING",
    "tags": [
        "data structures",
        "dsu",
        "greedy",
        "implementation",
        "two pointers"
    ],
    "solvedCount": 3080
}