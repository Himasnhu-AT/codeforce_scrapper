{
    "title": "E. In a Trap",
    "timeLimit": {
        "value": 3.0,
        "unit": "seconds"
    },
    "memoryLimit": {
        "value": 256.0,
        "unit": "megabytes"
    },
    "statement": "<p>Lech got into a tree consisting of <span class=\"tex-span\"><i>n</i></span> vertices with a root in vertex number <span class=\"tex-span\">1</span>. At each vertex <span class=\"tex-span\"><i>i</i></span> written integer <span class=\"tex-span\"><i>a</i><sub class=\"lower-index\"><i>i</i></sub></span>. He will not get out until he answers <span class=\"tex-span\"><i>q</i></span> queries of the form <span class=\"tex-span\"><i>u</i></span> <span class=\"tex-span\"><i>v</i></span>. Answer for the query is maximal value <img align=\"middle\" class=\"tex-formula\" src=\"https://espresso.codeforces.com/3b997525242862c8acc923c6cbeb8f10afa64fc2.png\" style=\"max-width: 100.0%;max-height: 100.0%;\"/> among all vertices <span class=\"tex-span\"><i>i</i></span> on path from <span class=\"tex-span\"><i>u</i></span> to <span class=\"tex-span\"><i>v</i></span> including <span class=\"tex-span\"><i>u</i></span> and <span class=\"tex-span\"><i>v</i></span>, where <span class=\"tex-span\"><i>dist</i>(<i>i</i>,\u2009<i>v</i>)</span> is number of edges on path from <span class=\"tex-span\"><i>i</i></span> to <span class=\"tex-span\"><i>v</i></span>. Also guaranteed that vertex <span class=\"tex-span\"><i>u</i></span> is ancestor of vertex <span class=\"tex-span\"><i>v</i></span>. Leha's tastes are very singular: he believes that vertex is ancestor of itself.</p><p>Help Leha to get out.</p><p>The expression <img align=\"middle\" class=\"tex-formula\" src=\"https://espresso.codeforces.com/b364f2e04c665b78b924ec10666327a4ef4635bc.png\" style=\"max-width: 100.0%;max-height: 100.0%;\"/> means the bitwise exclusive <span class=\"tex-font-style-tt\">OR</span> to the numbers <span class=\"tex-span\"><i>x</i></span> and <span class=\"tex-span\"><i>y</i></span>.</p><p>Note that vertex <span class=\"tex-span\"><i>u</i></span> is ancestor of vertex <span class=\"tex-span\"><i>v</i></span> if vertex <span class=\"tex-span\"><i>u</i></span> lies on the path from root to the vertex <span class=\"tex-span\"><i>v</i></span>.</p>",
    "inputSpecification": "<p>First line of input data contains two integers <span class=\"tex-span\"><i>n</i></span> and <span class=\"tex-span\"><i>q</i></span> (<span class=\"tex-span\">1\u2009\u2264\u2009<i>n</i>\u2009\u2264\u20095\u00b710<sup class=\"upper-index\">4</sup></span>, <span class=\"tex-span\">1\u2009\u2264\u2009<i>q</i>\u2009\u2264\u2009150\u2009000</span>) \u2014 number of vertices in the tree and number of queries respectively.</p><p>Next line contains <span class=\"tex-span\"><i>n</i></span> integers <span class=\"tex-span\"><i>a</i><sub class=\"lower-index\">1</sub>,\u2009<i>a</i><sub class=\"lower-index\">2</sub>,\u2009...,\u2009<i>a</i><sub class=\"lower-index\"><i>n</i></sub></span> (<span class=\"tex-span\">0\u2009\u2264\u2009<i>a</i><sub class=\"lower-index\"><i>i</i></sub>\u2009\u2264\u2009<i>n</i></span>) \u2014 numbers on vertices.</p><p>Each of next <span class=\"tex-span\"><i>n</i>\u2009-\u20091</span> lines contains two integers <span class=\"tex-span\"><i>u</i></span> and <span class=\"tex-span\"><i>v</i></span> (<span class=\"tex-span\">1\u2009\u2264\u2009<i>u</i>,\u2009<i>v</i>\u2009\u2264\u2009<i>n</i></span>) \u2014 description of the edges in tree.</p><p>Guaranteed that given graph is a tree.</p><p>Each of next <span class=\"tex-span\"><i>q</i></span> lines contains two integers <span class=\"tex-span\"><i>u</i></span> and <span class=\"tex-span\"><i>v</i></span> (<span class=\"tex-span\">1\u2009\u2264\u2009<i>u</i>,\u2009<i>v</i>\u2009\u2264\u2009<i>n</i></span>) \u2014 description of queries. Guaranteed that vertex <span class=\"tex-span\"><i>u</i></span> is ancestor of vertex <span class=\"tex-span\"><i>v</i></span>.</p>",
    "outputSpecification": "<p>Output <span class=\"tex-span\"><i>q</i></span> lines \u2014 answers for a queries.</p>",
    "samples": [
        {
            "input": "5 3<br/>0 3 2 1 4<br/>1 2<br/>2 3<br/>3 4<br/>3 5<br/>1 4<br/>1 5<br/>2 4<br/>",
            "output": "3<br/>4<br/>3<br/>"
        },
        {
            "input": "5 4<br/>1 2 3 4 5<br/>1 2<br/>2 3<br/>3 4<br/>4 5<br/>1 5<br/>2 5<br/>1 4<br/>3 3<br/>",
            "output": "5<br/>5<br/>4<br/>3<br/>"
        }
    ],
    "note": null,
    "contestId": 840,
    "index": "E",
    "name": "In a Trap",
    "type": "PROGRAMMING",
    "tags": [
        "trees"
    ],
    "solvedCount": 444
}