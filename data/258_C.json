{
    "title": "C. Little Elephant and LCM",
    "timeLimit": {
        "value": 4.0,
        "unit": "seconds"
    },
    "memoryLimit": {
        "value": 256.0,
        "unit": "megabytes"
    },
    "statement": "<p>The Little Elephant loves the LCM (least common multiple) operation of a non-empty set of positive integers. The result of the LCM operation of <span class=\"tex-span\"><i>k</i></span> positive integers <span class=\"tex-span\"><i>x</i><sub class=\"lower-index\">1</sub>,\u2009<i>x</i><sub class=\"lower-index\">2</sub>,\u2009...,\u2009<i>x</i><sub class=\"lower-index\"><i>k</i></sub></span> is the minimum positive integer that is divisible by each of numbers <span class=\"tex-span\"><i>x</i><sub class=\"lower-index\"><i>i</i></sub></span>.</p><p>Let's assume that there is a sequence of integers <span class=\"tex-span\"><i>b</i><sub class=\"lower-index\">1</sub>,\u2009<i>b</i><sub class=\"lower-index\">2</sub>,\u2009...,\u2009<i>b</i><sub class=\"lower-index\"><i>n</i></sub></span>. Let's denote their LCMs as <span class=\"tex-span\"><i>lcm</i>(<i>b</i><sub class=\"lower-index\">1</sub>,\u2009<i>b</i><sub class=\"lower-index\">2</sub>,\u2009...,\u2009<i>b</i><sub class=\"lower-index\"><i>n</i></sub>)</span> and the maximum of them as <span class=\"tex-span\"><i>max</i>(<i>b</i><sub class=\"lower-index\">1</sub>,\u2009<i>b</i><sub class=\"lower-index\">2</sub>,\u2009...,\u2009<i>b</i><sub class=\"lower-index\"><i>n</i></sub>)</span>. The Little Elephant considers a sequence <span class=\"tex-span\"><i>b</i></span> <span class=\"tex-font-style-it\">good</span>, if <span class=\"tex-span\"><i>lcm</i>(<i>b</i><sub class=\"lower-index\">1</sub>,\u2009<i>b</i><sub class=\"lower-index\">2</sub>,\u2009...,\u2009<i>b</i><sub class=\"lower-index\"><i>n</i></sub>)\u2009=\u2009<i>max</i>(<i>b</i><sub class=\"lower-index\">1</sub>,\u2009<i>b</i><sub class=\"lower-index\">2</sub>,\u2009...,\u2009<i>b</i><sub class=\"lower-index\"><i>n</i></sub>)</span>.</p><p>The Little Elephant has a sequence of integers <span class=\"tex-span\"><i>a</i><sub class=\"lower-index\">1</sub>,\u2009<i>a</i><sub class=\"lower-index\">2</sub>,\u2009...,\u2009<i>a</i><sub class=\"lower-index\"><i>n</i></sub></span>. Help him find the number of good sequences of integers <span class=\"tex-span\"><i>b</i><sub class=\"lower-index\">1</sub>,\u2009<i>b</i><sub class=\"lower-index\">2</sub>,\u2009...,\u2009<i>b</i><sub class=\"lower-index\"><i>n</i></sub></span>, such that for all <span class=\"tex-span\"><i>i</i></span> <span class=\"tex-span\">(1\u2009\u2264\u2009<i>i</i>\u2009\u2264\u2009<i>n</i>)</span> the following condition fulfills: <span class=\"tex-span\">1\u2009\u2264\u2009<i>b</i><sub class=\"lower-index\"><i>i</i></sub>\u2009\u2264\u2009<i>a</i><sub class=\"lower-index\"><i>i</i></sub></span>. As the answer can be rather large, print the remainder from dividing it by <span class=\"tex-span\">1000000007</span> <span class=\"tex-span\">(10<sup class=\"upper-index\">9</sup>\u2009+\u20097)</span>.</p>",
    "inputSpecification": "<p>The first line contains a single positive integer <span class=\"tex-span\"><i>n</i></span> <span class=\"tex-span\">(1\u2009\u2264\u2009<i>n</i>\u2009\u2264\u200910<sup class=\"upper-index\">5</sup>)</span> \u2014 the number of integers in the sequence <span class=\"tex-span\"><i>a</i></span>. The second line contains <span class=\"tex-span\"><i>n</i></span> space-separated integers <span class=\"tex-span\"><i>a</i><sub class=\"lower-index\">1</sub>,\u2009<i>a</i><sub class=\"lower-index\">2</sub>,\u2009...,\u2009<i>a</i><sub class=\"lower-index\"><i>n</i></sub></span> <span class=\"tex-span\">(1\u2009\u2264\u2009<i>a</i><sub class=\"lower-index\"><i>i</i></sub>\u2009\u2264\u200910<sup class=\"upper-index\">5</sup>)</span> \u2014 sequence <span class=\"tex-span\"><i>a</i></span>.</p>",
    "outputSpecification": "<p>In the single line print a single integer \u2014 the answer to the problem modulo <span class=\"tex-span\">1000000007</span> <span class=\"tex-span\">(10<sup class=\"upper-index\">9</sup>\u2009+\u20097)</span>.</p>",
    "samples": [
        {
            "input": "4<br/>1 4 3 2<br/>",
            "output": "15<br/>"
        },
        {
            "input": "2<br/>6 3<br/>",
            "output": "13<br/>"
        }
    ],
    "note": null,
    "contestId": 258,
    "index": "C",
    "name": "Little Elephant and LCM",
    "type": "PROGRAMMING",
    "tags": [
        "binary search",
        "combinatorics",
        "dp",
        "math"
    ],
    "solvedCount": 1764
}