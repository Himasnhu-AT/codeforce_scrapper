{
    "title": "E. Polygon",
    "timeLimit": {
        "value": 2.0,
        "unit": "seconds"
    },
    "memoryLimit": {
        "value": 256.0,
        "unit": "megabytes"
    },
    "statement": "<p>Polygon is not only the best platform for developing problems but also a square matrix with side $$$n$$$, initially filled with the character <span class=\"tex-font-style-tt\">0</span>.</p><p>On the polygon, military training was held. The soldiers placed a cannon above each cell in the first row and a cannon to the left of each cell in the first column. Thus, exactly $$$2n$$$ cannons were placed.</p><center> <img class=\"tex-graphics\" src=\"https://espresso.codeforces.com/5c881cddb6835c9ccbae4d64339c61ee89ca98e6.png\" style=\"max-width: 100.0%;max-height: 100.0%;\"/> <span class=\"tex-font-size-small\">Initial polygon for $$$n=4$$$.</span> </center><p>Cannons shoot character <span class=\"tex-font-style-tt\">1</span>. At any moment of time, no more than one cannon is shooting. When a <span class=\"tex-font-style-tt\">1</span> flies out of a cannon, it flies forward (in the direction of the shot) until it collides with a polygon border or another <span class=\"tex-font-style-tt\">1</span>. After that, it takes the cell in which it was before the collision and remains there. Take a look at the examples for better understanding.</p><p>More formally: </p><ul> <li> if a cannon stands in the row $$$i$$$, to the left of the first column, and shoots with a <span class=\"tex-font-style-tt\">1</span>, then the <span class=\"tex-font-style-tt\">1</span> starts its flight from the cell ($$$i, 1$$$) and ends in some cell ($$$i, j$$$); </li><li> if a cannon stands in the column $$$j$$$, above the first row, and shoots with a <span class=\"tex-font-style-tt\">1</span>, then the <span class=\"tex-font-style-tt\">1</span> starts its flight from the cell ($$$1, j$$$) and ends in some cell ($$$i, j$$$). </li></ul><p>For example, consider the following sequence of shots:</p><center> <img class=\"tex-graphics\" src=\"https://espresso.codeforces.com/477656491c995331732d67143a59e43b21075bcc.png\" style=\"max-width: 100.0%;max-height: 100.0%;\"/> <p> <span class=\"tex-font-size-small\">1. Shoot the cannon in the row $$$2$$$. \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 2. Shoot the cannon in the row $$$2$$$. \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 3. Shoot the cannon in column $$$3$$$.</span> </p></center><p>You have a report from the military training on your desk. This report is a square matrix with side length $$$n$$$ consisting of <span class=\"tex-font-style-tt\">0</span> and <span class=\"tex-font-style-tt\">1</span>. You wonder if the training actually happened. In other words, is there a sequence of shots such that, after the training, you get the given matrix?</p><p>Each cannon can make an arbitrary number of shots. Before the training, each cell of the polygon contains <span class=\"tex-font-style-tt\">0</span>.</p>",
    "inputSpecification": "<p>The first line contains an integer $$$t$$$ ($$$1 \\le t \\le 1000$$$)\u00a0\u2014 the number of test cases. Then $$$t$$$ test cases follow.</p><p>Each test case starts with a line containing an integer $$$n$$$ ($$$1 \\le n \\le 50$$$)\u00a0\u2014 the size of the polygon.</p><p>This is followed by $$$n$$$ lines of length $$$n$$$, consisting of <span class=\"tex-font-style-tt\">0</span> and <span class=\"tex-font-style-tt\">1</span>\u00a0\u2014 the polygon matrix after the training.</p><p>The total area of the matrices in all test cases in one test does not exceed $$$10^5$$$.</p>",
    "outputSpecification": "<p>For each test case print:</p><ul> <li> <span class=\"tex-font-style-tt\">YES</span> if there is a sequence of shots leading to a given matrix; </li><li> <span class=\"tex-font-style-tt\">NO</span> if such a sequence does not exist. </li></ul><p>The letters in the words <span class=\"tex-font-style-tt\">YES</span> and <span class=\"tex-font-style-tt\">NO</span> can be printed in any case.</p>",
    "samples": [
        {
            "input": "\n5\n4\n0010\n0011\n0000\n0000\n2\n10\n01\n2\n00\n00\n4\n0101\n1111\n0101\n0111\n4\n0100\n1110\n0101\n0111\n",
            "output": "\nYES\nNO\nYES\nYES\nNO\n"
        }
    ],
    "note": "<p>The first test case was explained in the statement.</p><p>The answer to the second test case is <span class=\"tex-font-style-tt\">NO</span>, since a <span class=\"tex-font-style-tt\">1</span> in a cell ($$$1, 1$$$) flying out of any cannon would continue its flight further.</p>",
    "contestId": 1360,
    "index": "E",
    "name": "Polygon",
    "type": "PROGRAMMING",
    "tags": [
        "dp",
        "graphs",
        "implementation",
        "shortest paths"
    ],
    "solvedCount": 24607
}