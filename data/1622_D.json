{
    "title": "D. Shuffle",
    "timeLimit": {
        "value": 2.0,
        "unit": "seconds"
    },
    "memoryLimit": {
        "value": 512.0,
        "unit": "megabytes"
    },
    "statement": "<p>You are given a binary string (i.\u2009e. a string consisting of characters <span class=\"tex-font-style-tt\">0</span> and/or <span class=\"tex-font-style-tt\">1</span>) $$$s$$$ of length $$$n$$$. You can perform the following operation with the string $$$s$$$ <span class=\"tex-font-style-bf\">at most once</span>: choose a substring (a contiguous subsequence) of $$$s$$$ having <span class=\"tex-font-style-bf\">exactly</span> $$$k$$$ characters <span class=\"tex-font-style-tt\">1</span> in it, and shuffle it (reorder the characters in the substring as you wish).</p><p>Calculate the number of different strings which can be obtained from $$$s$$$ by performing this operation at most once.</p>",
    "inputSpecification": "<p>The first line contains two integers $$$n$$$ and $$$k$$$ ($$$2 \\le n \\le 5000$$$; $$$0 \\le k \\le n$$$).</p><p>The second line contains the string $$$s$$$ of length $$$n$$$, consisting of characters <span class=\"tex-font-style-tt\">0</span> and/or <span class=\"tex-font-style-tt\">1</span>.</p>",
    "outputSpecification": "<p>Print one integer \u2014 the number of different strings which can be obtained from $$$s$$$ by performing the described operation at most once. Since the answer can be large, output it modulo $$$998244353$$$.</p>",
    "samples": [
        {
            "input": "\n7 2\n1100110\n",
            "output": "\n16\n"
        },
        {
            "input": "\n5 0\n10010\n",
            "output": "\n1\n"
        },
        {
            "input": "\n8 1\n10001000\n",
            "output": "\n10\n"
        },
        {
            "input": "\n10 8\n0010011000\n",
            "output": "\n1\n"
        }
    ],
    "note": "<p>Some strings you can obtain in the first example:</p><ul> <li> to obtain <span class=\"tex-font-style-tt\">0110110</span>, you can take the substring from the $$$1$$$-st character to the $$$4$$$-th character, which is <span class=\"tex-font-style-tt\">1100</span>, and reorder its characters to get <span class=\"tex-font-style-tt\">0110</span>; </li><li> to obtain <span class=\"tex-font-style-tt\">1111000</span>, you can take the substring from the $$$3$$$-rd character to the $$$7$$$-th character, which is <span class=\"tex-font-style-tt\">00110</span>, and reorder its characters to get <span class=\"tex-font-style-tt\">11000</span>; </li><li> to obtain <span class=\"tex-font-style-tt\">1100101</span>, you can take the substring from the $$$5$$$-th character to the $$$7$$$-th character, which is <span class=\"tex-font-style-tt\">110</span>, and reorder its characters to get <span class=\"tex-font-style-tt\">101</span>. </li></ul><p>In the second example, $$$k = 0$$$ so you can only choose the substrings consisting only of <span class=\"tex-font-style-tt\">0</span> characters. Reordering them doesn't change the string at all, so the only string you can obtain is <span class=\"tex-font-style-tt\">10010</span>.</p>",
    "contestId": 1622,
    "index": "D",
    "name": "Shuffle",
    "type": "PROGRAMMING",
    "tags": [
        "combinatorics",
        "math",
        "two pointers"
    ],
    "solvedCount": 3903
}