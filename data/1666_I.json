{
    "title": "I. Interactive Treasure Hunt",
    "timeLimit": {
        "value": 3.0,
        "unit": "seconds"
    },
    "memoryLimit": {
        "value": 512.0,
        "unit": "megabytes"
    },
    "statement": "<p><span class=\"tex-font-style-it\">This is an interactive problem.</span></p><p>There is a grid of $$$n\\times m$$$ cells. Two treasure chests are buried in two different cells of the grid. Your task is to find both of them. You can make two types of operations:  </p><ul> <li> <span class=\"tex-font-style-tt\">DIG $$$r$$$ $$$c$$$</span>: try to find the treasure in the cell $$$(r, c)$$$. The interactor will tell you if you found the treasure or not. </li><li> <span class=\"tex-font-style-tt\">SCAN $$$r$$$ $$$c$$$</span>: scan from the cell $$$(r, c)$$$. The result of this operation is the sum of Manhattan distances from the cell $$$(r, c)$$$ to the cells where the treasures are hidden. Manhattan distance from a cell $$$(r_1, c_1)$$$ to a cell $$$(r_2, c_2)$$$ is calculated as $$$|r_1 - r_2| + |c_1 - c_2|$$$. </li></ul><p>You need to find the treasures in at most 7 operations. This includes both <span class=\"tex-font-style-tt\">DIG</span> and <span class=\"tex-font-style-tt\">SCAN</span> operations in total. To solve the test you need to call <span class=\"tex-font-style-tt\">DIG</span> operation at least once in both of the cells where the treasures are hidden.</p>",
    "inputSpecification": null,
    "outputSpecification": null,
    "samples": [
        {
            "input": "\n1\n2 3\n\n1\n\n1\n\n3\n\n0\n\n1\n",
            "output": "\n\n\nSCAN 1 2\n\nDIG 1 2\n\nSCAN 2 2\n\nDIG 1 1\n\nDIG 1 3"
        }
    ],
    "note": null,
    "contestId": 1666,
    "index": "I",
    "name": "Interactive Treasure Hunt",
    "type": "PROGRAMMING",
    "tags": [
        "brute force",
        "constructive algorithms",
        "geometry",
        "interactive",
        "math"
    ],
    "solvedCount": 1389
}