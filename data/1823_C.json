{
    "title": "C. Strongly Composite",
    "timeLimit": {
        "value": 2.0,
        "unit": "seconds"
    },
    "memoryLimit": {
        "value": 256.0,
        "unit": "megabytes"
    },
    "statement": "<p>A <span class=\"tex-font-style-it\">prime</span> number is an integer greater than $$$1$$$, which has exactly two divisors. For example, $$$7$$$ is a prime, since it has two divisors $$$\\{1, 7\\}$$$. A <span class=\"tex-font-style-it\">composite</span> number is an integer greater than $$$1$$$, which has more than two different divisors.</p><p>Note that the integer $$$1$$$ is neither prime nor composite.</p><p>Let's look at some composite number $$$v$$$. It has several divisors: some divisors are prime, others are composite themselves. If the number of prime divisors of $$$v$$$ is <span class=\"tex-font-style-bf\">less or equal</span> to the number of composite divisors, let's name $$$v$$$ as <span class=\"tex-font-style-it\">strongly composite</span>.</p><p>For example, number $$$12$$$ has $$$6$$$ divisors: $$$\\{1, 2, 3, 4, 6, 12\\}$$$, two divisors $$$2$$$ and $$$3$$$ are prime, while three divisors $$$4$$$, $$$6$$$ and $$$12$$$ are composite. So, $$$12$$$ is strongly composite. Other examples of strongly composite numbers are $$$4$$$, $$$8$$$, $$$9$$$, $$$16$$$ and so on.</p><p>On the other side, divisors of $$$15$$$ are $$$\\{1, 3, 5, 15\\}$$$: $$$3$$$ and $$$5$$$ are prime, $$$15$$$ is composite. So, $$$15$$$ is not a strongly composite. Other examples are: $$$2$$$, $$$3$$$, $$$5$$$, $$$6$$$, $$$7$$$, $$$10$$$ and so on.</p><p>You are given $$$n$$$ integers $$$a_1, a_2, \\dots, a_n$$$ ($$$a_i &gt; 1$$$). You have to build an array $$$b_1, b_2, \\dots, b_k$$$ such that following conditions are satisfied: </p><ul> <li> Product of all elements of array $$$a$$$ is equal to product of all elements of array $$$b$$$: $$$a_1 \\cdot a_2 \\cdot \\ldots \\cdot a_n = b_1 \\cdot b_2 \\cdot \\ldots \\cdot b_k$$$; </li><li> All elements of array $$$b$$$ are integers greater than $$$1$$$ and <span class=\"tex-font-style-it\">strongly composite</span>; </li><li> The size $$$k$$$ of array $$$b$$$ is the maximum possible. </li></ul><p>Find the size $$$k$$$ of array $$$b$$$, or report, that there is no array $$$b$$$ satisfying the conditions.</p>",
    "inputSpecification": "<p>Each test contains multiple test cases. The first line contains the number of test cases $$$t$$$ ($$$1 \\le t \\le 1000$$$). The description of the test cases follows.</p><p>The first line of each test case contains one integer $$$n$$$ ($$$1 \\le n \\le 1000$$$)\u00a0\u2014 the size of the array $$$a$$$.</p><p>The second line of each test case contains $$$n$$$ integer $$$a_1, a_2, \\dots a_n$$$ ($$$2 \\le a_i \\le 10^7$$$)\u00a0\u2014 the array $$$a$$$ itself.</p><p>It is guaranteed that the sum of $$$n$$$ over all test cases does not exceed $$$1000$$$.</p>",
    "outputSpecification": "<p>For each test case, print the size $$$k$$$ of array $$$b$$$, or $$$0$$$, if there is no array $$$b$$$ satisfying the conditions.</p>",
    "samples": [
        {
            "input": "\n<div class=\"test-example-line test-example-line-even test-example-line-0\">8</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">2</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">3 6</div><div class=\"test-example-line test-example-line-even test-example-line-2\">3</div><div class=\"test-example-line test-example-line-even test-example-line-2\">3 4 5</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">2</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">2 3</div><div class=\"test-example-line test-example-line-even test-example-line-4\">3</div><div class=\"test-example-line test-example-line-even test-example-line-4\">3 10 14</div><div class=\"test-example-line test-example-line-odd test-example-line-5\">2</div><div class=\"test-example-line test-example-line-odd test-example-line-5\">25 30</div><div class=\"test-example-line test-example-line-even test-example-line-6\">1</div><div class=\"test-example-line test-example-line-even test-example-line-6\">1080</div><div class=\"test-example-line test-example-line-odd test-example-line-7\">9</div><div class=\"test-example-line test-example-line-odd test-example-line-7\">3 3 3 5 5 5 7 7 7</div><div class=\"test-example-line test-example-line-even test-example-line-8\">20</div><div class=\"test-example-line test-example-line-even test-example-line-8\">12 15 2 2 2 2 2 3 3 3 17 21 21 21 30 6 6 33 31 39</div>",
            "output": "\n1\n1\n0\n2\n2\n3\n4\n15\n"
        }
    ],
    "note": "<p>In the first test case, we can get array $$$b = [18]$$$: $$$a_1 \\cdot a_2 = 18 = b_1$$$; $$$18$$$ is strongly composite number.</p><p>In the second test case, we can get array $$$b = [60]$$$: $$$a_1 \\cdot a_2 \\cdot a_3 = 60 = b_1$$$; $$$60$$$ is strongly composite number.</p><p>In the third test case, there is no array $$$b$$$ satisfying the conditions.</p><p>In the fourth test case, we can get array $$$b = [4, 105]$$$: $$$a_1 \\cdot a_2 \\cdot a_3 = 420 = b_1 \\cdot b_2$$$; $$$4$$$ and $$$105$$$ are strongly composite numbers.</p>",
    "contestId": 1823,
    "index": "C",
    "name": "Strongly Composite",
    "type": "PROGRAMMING",
    "tags": [
        "greedy",
        "math",
        "number theory"
    ],
    "solvedCount": 11804
}