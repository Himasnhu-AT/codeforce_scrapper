{
    "title": "C. Representative Edges",
    "timeLimit": {
        "value": 1.0,
        "unit": "second"
    },
    "memoryLimit": {
        "value": 256.0,
        "unit": "megabytes"
    },
    "statement": "<p>An array $$$a_1, a_2, \\ldots, a_n$$$ is <span class=\"tex-font-style-it\">good</span> if and only if for every subsegment $$$1 \\leq l \\leq r \\leq n$$$, the following holds: $$$a_l + a_{l + 1} + \\ldots + a_r = \\frac{1}{2}(a_l + a_r) \\cdot (r - l + 1)$$$. </p><p>You are given an array of integers $$$a_1, a_2, \\ldots, a_n$$$. In one operation, you can replace any one element of this array with any real number. Find the minimum number of operations you need to make this array good.</p>",
    "inputSpecification": "<p>The first line of input contains one integer $$$t$$$ ($$$1 \\leq t \\leq 100$$$): the number of test cases.</p><p>Each of the next $$$t$$$ lines contains the description of a test case.</p><p>In the first line you are given one integer $$$n$$$ ($$$1 \\leq n \\leq 70$$$): the number of integers in the array.</p><p>The second line contains $$$n$$$ integers $$$a_1, a_2, \\ldots, a_n$$$ ($$$-100 \\leq a_i \\leq 100$$$): the initial array.</p>",
    "outputSpecification": "<p>For each test case, print one integer: the minimum number of elements that you need to replace to make the given array good.</p>",
    "samples": [
        {
            "input": "\n5\n4\n1 2 3 4\n4\n1 1 2 2\n2\n0 -1\n6\n3 -2 4 -1 -4 0\n1\n-100\n",
            "output": "\n0\n2\n0\n3\n0\n"
        }
    ],
    "note": "<p>In the first test case, the array is good already.</p><p>In the second test case, one of the possible good arrays is $$$[1, 1, \\underline{1}, \\underline{1}]$$$ (replaced elements are underlined).</p><p>In the third test case, the array is good already.</p><p>In the fourth test case, one of the possible good arrays is $$$[\\underline{-2.5}, -2, \\underline{-1.5}, -1, \\underline{-0.5}, 0]$$$.</p>",
    "contestId": 1616,
    "index": "C",
    "name": "Representative Edges",
    "type": "PROGRAMMING",
    "tags": [
        "brute force",
        "geometry",
        "implementation",
        "math"
    ],
    "solvedCount": 12036
}