{
    "title": "B. AND Sorting",
    "timeLimit": {
        "value": 1.0,
        "unit": "second"
    },
    "memoryLimit": {
        "value": 256.0,
        "unit": "megabytes"
    },
    "statement": "<p>You are given a permutation $$$p$$$ of integers from $$$0$$$ to $$$n-1$$$ (each of them occurs exactly once). Initially, the permutation is <span class=\"tex-font-style-bf\">not sorted</span> (that is, $$$p_i&gt;p_{i+1}$$$ for at least one $$$1 \\le i \\le n - 1$$$). </p><p>The permutation is called $$$X$$$-sortable for some non-negative integer $$$X$$$ if it is possible to sort the permutation by performing the operation below some finite number of times: </p><ul> <li> Choose two indices $$$i$$$ and $$$j$$$ $$$(1 \\le i \\lt j \\le n)$$$ such that $$$p_i \\&amp; p_j = X$$$. </li><li> Swap $$$p_i$$$ and $$$p_j$$$. </li></ul><p>Here $$$\\&amp;$$$ denotes the <a href=\"https://en.wikipedia.org/wiki/Bitwise_operation#AND\">bitwise AND operation</a>.</p><p>Find the <span class=\"tex-font-style-bf\">maximum</span> value of $$$X$$$ such that $$$p$$$ is $$$X$$$-sortable. It can be shown that there always exists some value of $$$X$$$ such that $$$p$$$ is $$$X$$$-sortable.</p>",
    "inputSpecification": "<p>The input consists of multiple test cases. The first line contains a single integer $$$t$$$ $$$(1 \\le t \\le 10^4)$$$ \u00a0\u2014 the number of test cases. Description of test cases follows.</p><p>The first line of each test case contains a single integer $$$n$$$ $$$(2 \\le n \\le 2 \\cdot 10^5)$$$ \u00a0\u2014 the length of the permutation.</p><p>The second line of each test case contains $$$n$$$ integers $$$p_1, p_2, ..., p_n$$$ ($$$0 \\le p_i \\le n-1$$$, all $$$p_i$$$ are distinct) \u00a0\u2014 the elements of $$$p$$$. It is guaranteed that $$$p$$$ is not sorted.</p><p>It is guaranteed that the sum of $$$n$$$ over all cases does not exceed $$$2 \\cdot 10^5$$$.</p>",
    "outputSpecification": "<p>For each test case output a single integer \u2014 the maximum value of $$$X$$$ such that $$$p$$$ is $$$X$$$-sortable.</p>",
    "samples": [
        {
            "input": "\n<div class=\"test-example-line test-example-line-even test-example-line-0\">4</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">4</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">0 1 3 2</div><div class=\"test-example-line test-example-line-even test-example-line-2\">2</div><div class=\"test-example-line test-example-line-even test-example-line-2\">1 0</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">7</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">0 1 2 3 5 6 4</div><div class=\"test-example-line test-example-line-even test-example-line-4\">5</div><div class=\"test-example-line test-example-line-even test-example-line-4\">0 3 2 1 4</div>",
            "output": "\n2\n0\n4\n1\n"
        }
    ],
    "note": "<p>In the first test case, the only $$$X$$$ for which the permutation is $$$X$$$-sortable are $$$X = 0$$$ and $$$X = 2$$$, maximum of which is $$$2$$$.</p><p>Sorting using $$$X = 0$$$: </p><ul> <li> Swap $$$p_1$$$ and $$$p_4$$$, $$$p = [2, 1, 3, 0]$$$. </li><li> Swap $$$p_3$$$ and $$$p_4$$$, $$$p = [2, 1, 0, 3]$$$. </li><li> Swap $$$p_1$$$ and $$$p_3$$$, $$$p = [0, 1, 2, 3]$$$. </li></ul><p>Sorting using $$$X = 2$$$: </p><ul> <li> Swap $$$p_3$$$ and $$$p_4$$$, $$$p = [0, 1, 2, 3]$$$. </li></ul><p>In the second test case, we must swap $$$p_1$$$ and $$$p_2$$$ which is possible only with $$$X = 0$$$.</p>",
    "contestId": 1682,
    "index": "B",
    "name": "AND Sorting",
    "type": "PROGRAMMING",
    "tags": [
        "bitmasks",
        "constructive algorithms",
        "sortings"
    ],
    "solvedCount": 17535
}