{
    "title": "E. Mirror Grid",
    "timeLimit": {
        "value": 2.0,
        "unit": "seconds"
    },
    "memoryLimit": {
        "value": 256.0,
        "unit": "megabytes"
    },
    "statement": "<p>You are given a square grid with $$$n$$$ rows and $$$n$$$ columns. Each cell contains either $$$0$$$ or $$$1$$$. </p><p>In an operation, you can select a cell of the grid and flip it (from $$$0 \\to 1$$$ or $$$1 \\to 0$$$). Find the minimum number of operations you need to obtain a square that remains the same when rotated $$$0^{\\circ}$$$, $$$90^{\\circ}$$$, $$$180^{\\circ}$$$ and $$$270^{\\circ}$$$.</p><p>The picture below shows an example of all rotations of a grid.</p><center> <img class=\"tex-graphics\" src=\"https://espresso.codeforces.com/f49275ace84e3caead703c50c0ac74ee0533a408.png\" style=\"max-width: 100.0%;max-height: 100.0%;\"/> </center>",
    "inputSpecification": "<p>The first line contains a single integer $$$t$$$ ($$$1 \\leq t \\leq 100$$$)\u00a0\u2014 the number of test cases.</p><p>The first line of each test case contains a single integer $$$n$$$ ($$$1 \\leq n \\leq 100$$$)\u00a0\u2014 the size of the grid.</p><p>Then $$$n$$$ lines follow, each with $$$n$$$ characters $$$a_{i,j}$$$ ($$$0 \\leq a_{i,j} \\leq 1$$$)\u00a0\u2014 the number written in each cell.</p>",
    "outputSpecification": "<p>For each test case output a single integer \u00a0\u2014 the minimum number of operations needed to make the square look the same rotated $$$0^{\\circ}$$$, $$$90^{\\circ}$$$, $$$180^{\\circ}$$$ and $$$270^{\\circ}$$$.</p>",
    "samples": [
        {
            "input": "\n<div class=\"test-example-line test-example-line-even test-example-line-0\">5</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">3</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">010</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">110</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">010</div><div class=\"test-example-line test-example-line-even test-example-line-2\">1</div><div class=\"test-example-line test-example-line-even test-example-line-2\">0</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">5</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">11100</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">11011</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">01011</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">10011</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">11000</div><div class=\"test-example-line test-example-line-even test-example-line-4\">5</div><div class=\"test-example-line test-example-line-even test-example-line-4\">01000</div><div class=\"test-example-line test-example-line-even test-example-line-4\">10101</div><div class=\"test-example-line test-example-line-even test-example-line-4\">01010</div><div class=\"test-example-line test-example-line-even test-example-line-4\">00010</div><div class=\"test-example-line test-example-line-even test-example-line-4\">01001</div><div class=\"test-example-line test-example-line-odd test-example-line-5\">5</div><div class=\"test-example-line test-example-line-odd test-example-line-5\">11001</div><div class=\"test-example-line test-example-line-odd test-example-line-5\">00000</div><div class=\"test-example-line test-example-line-odd test-example-line-5\">11111</div><div class=\"test-example-line test-example-line-odd test-example-line-5\">10110</div><div class=\"test-example-line test-example-line-odd test-example-line-5\">01111</div>",
            "output": "\n1\n0\n9\n7\n6\n"
        }
    ],
    "note": "<p>In the first test case, we can perform one operations to make the grid $$$\\begin{matrix}0 &amp; 1 &amp; 0\\\\ 1 &amp; 1 &amp; \\color{red}{1}\\\\ 0 &amp; 1 &amp; 0\\end{matrix}$$$. Now, all rotations of the square are the same.</p><p>In the second test case, all rotations of the square are already the same, so we don't need any flips.</p>",
    "contestId": 1703,
    "index": "E",
    "name": "Mirror Grid",
    "type": "PROGRAMMING",
    "tags": [
        "implementation"
    ],
    "solvedCount": 17204
}