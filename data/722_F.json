{
    "title": "F. Cyclic Cipher",
    "timeLimit": {
        "value": 2.0,
        "unit": "seconds"
    },
    "memoryLimit": {
        "value": 256.0,
        "unit": "megabytes"
    },
    "statement": "<p>You are given <span class=\"tex-span\"><i>n</i></span> sequences. Each sequence consists of positive integers, not exceeding <span class=\"tex-span\"><i>m</i></span>. All integers in one sequence are distinct, but the same integer may appear in multiple sequences. The length of the <span class=\"tex-span\"><i>i</i></span>-th sequence is <span class=\"tex-span\"><i>k</i><sub class=\"lower-index\"><i>i</i></sub></span>.</p><p>Each second integers in each of the sequences are shifted by one to the left, i.e. integers at positions <span class=\"tex-span\"><i>i</i>\u2009&gt;\u20091</span> go to positions <span class=\"tex-span\"><i>i</i>\u2009-\u20091</span>, while the first integers becomes the last.</p><p>Each second we take the first integer of each sequence and write it down to a new array. Then, for each value <span class=\"tex-span\"><i>x</i></span> from <span class=\"tex-span\">1</span> to <span class=\"tex-span\"><i>m</i></span> we compute the longest <span class=\"tex-font-style-bf\">segment</span> of the array consisting of element <span class=\"tex-span\"><i>x</i></span> only.</p><p>The above operation is performed for <span class=\"tex-span\">10<sup class=\"upper-index\">100</sup></span> seconds. For each integer from <span class=\"tex-span\">1</span> to <span class=\"tex-span\"><i>m</i></span> find out the longest segment found at this time.</p>",
    "inputSpecification": "<p>The first line of the input contains two integers <span class=\"tex-span\"><i>n</i></span> and <span class=\"tex-span\"><i>m</i></span> (<span class=\"tex-span\">1\u2009\u2264\u2009<i>n</i>,\u2009<i>m</i>\u2009\u2264\u2009100\u2009000</span>)\u00a0\u2014 the number of sequences and the maximum integer that can appear in the sequences. </p><p>Then follow <span class=\"tex-span\"><i>n</i></span> lines providing the sequences. Each of them starts with an integer <span class=\"tex-span\"><i>k</i><sub class=\"lower-index\"><i>i</i></sub></span> (<span class=\"tex-span\">1\u2009\u2264\u2009<i>k</i><sub class=\"lower-index\"><i>i</i></sub>\u2009\u2264\u200940</span>)\u00a0\u2014 the number of integers in the sequence, proceeded by <span class=\"tex-span\"><i>k</i><sub class=\"lower-index\"><i>i</i></sub></span> positive integers\u00a0\u2014 elements of the sequence. It's guaranteed that all integers in each sequence are pairwise distinct and do not exceed <span class=\"tex-span\"><i>m</i></span>.</p><p><span class=\"tex-font-style-bf\">The total length</span> of all sequences doesn't exceed <span class=\"tex-span\">200\u2009000</span>.</p>",
    "outputSpecification": "<p>Print <span class=\"tex-span\"><i>m</i></span> integers, the <span class=\"tex-span\"><i>i</i></span>-th of them should be equal to the length of the longest segment of the array with all its values equal to <span class=\"tex-span\"><i>i</i></span> during the first <span class=\"tex-span\">10<sup class=\"upper-index\">100</sup></span> seconds.</p>",
    "samples": [
        {
            "input": "3 4<br/>3 3 4 1<br/>4 1 3 4 2<br/>3 3 1 4<br/>",
            "output": "2<br/>1<br/>3<br/>2<br/>"
        },
        {
            "input": "5 5<br/>2 3 1<br/>4 5 1 3 2<br/>4 2 1 3 5<br/>1 3<br/>2 5 3<br/>",
            "output": "3<br/>1<br/>4<br/>0<br/>1<br/>"
        },
        {
            "input": "4 6<br/>3 4 5 3<br/>2 6 3<br/>2 3 6<br/>3 3 6 5<br/>",
            "output": "0<br/>0<br/>2<br/>1<br/>1<br/>2<br/>"
        }
    ],
    "note": null,
    "contestId": 722,
    "index": "F",
    "name": "Cyclic Cipher",
    "type": "PROGRAMMING",
    "tags": [
        "chinese remainder theorem",
        "data structures",
        "implementation",
        "number theory",
        "two pointers"
    ],
    "solvedCount": 473
}