{
    "title": "E. Dividing Kingdom",
    "timeLimit": {
        "value": 2.0,
        "unit": "seconds"
    },
    "memoryLimit": {
        "value": 256.0,
        "unit": "megabytes"
    },
    "statement": "<p>A country called Flatland is an infinite two-dimensional plane. Flatland has <span class=\"tex-span\"><i>n</i></span> cities, each of them is a point on the plane.</p><p>Flatland is ruled by king Circle IV. Circle IV has 9 sons. He wants to give each of his sons part of Flatland to rule. For that, he wants to draw four <span class=\"tex-font-style-bf\">distinct</span> straight lines, such that two of them are parallel to the <span class=\"tex-span\"><i>Ox</i></span> axis, and two others are parallel to the <span class=\"tex-span\"><i>Oy</i></span> axis. At that, no straight line can go through any city. Thus, Flatland will be divided into 9 parts, and each son will be given exactly one of these parts. Circle IV thought a little, evaluated his sons' obedience and decided that the <span class=\"tex-span\"><i>i</i></span>-th son should get the part of Flatland that has exactly <span class=\"tex-span\"><i>a</i><sub class=\"lower-index\"><i>i</i></sub></span> cities.</p><p>Help Circle find such four straight lines that if we divide Flatland into 9 parts by these lines, the resulting parts can be given to the sons so that son number <span class=\"tex-span\"><i>i</i></span> got the part of Flatland which contains <span class=\"tex-span\"><i>a</i><sub class=\"lower-index\"><i>i</i></sub></span> cities.</p>",
    "inputSpecification": "<p>The first line contains integer <span class=\"tex-span\"><i>n</i> (9\u2009\u2264\u2009<i>n</i>\u2009\u2264\u200910<sup class=\"upper-index\">5</sup>)</span> \u2014 the number of cities in Flatland. Next <span class=\"tex-span\"><i>n</i></span> lines each contain two space-separated integers: <span class=\"tex-span\"><i>x</i><sub class=\"lower-index\"><i>i</i></sub>,\u2009<i>y</i><sub class=\"lower-index\"><i>i</i></sub> (\u2009-\u200910<sup class=\"upper-index\">9</sup>\u2009\u2264\u2009<i>x</i><sub class=\"lower-index\"><i>i</i></sub>,\u2009<i>y</i><sub class=\"lower-index\"><i>i</i></sub>\u2009\u2264\u200910<sup class=\"upper-index\">9</sup>)</span> \u2014 the coordinates of the <span class=\"tex-span\"><i>i</i></span>-th city. No two cities are located at the same point. The last line contains nine space-separated integers: <img align=\"middle\" class=\"tex-formula\" src=\"https://espresso.codeforces.com/a4c0900fb71a0f0f0f80a8652d749ef20176aa49.png\" style=\"max-width: 100.0%;max-height: 100.0%;\"/>.</p>",
    "outputSpecification": "<p>If there is no solution, print a single integer -1.</p><p>Otherwise, print in the first line two distinct real space-separated numbers: <span class=\"tex-span\"><i>x</i><sub class=\"lower-index\">1</sub>,\u2009<i>x</i><sub class=\"lower-index\">2</sub></span> \u2014 the abscissas of the straight lines that are parallel to the <span class=\"tex-span\"><i>Oy</i></span> axis. And in the second line print two distinct real space-separated numbers: <span class=\"tex-span\"><i>y</i><sub class=\"lower-index\">1</sub>,\u2009<i>y</i><sub class=\"lower-index\">2</sub></span> \u2014 the ordinates of the straight lines, parallel to the <span class=\"tex-span\"><i>Ox</i></span>. If there are multiple solutions, print any of them. </p><p>When the answer is being checked, a city is considered to lie on a straight line, if the distance between the city and the line doesn't exceed <span class=\"tex-span\">10<sup class=\"upper-index\">\u2009-\u20096</sup></span>. Two straight lines are considered the same if the distance between them doesn't exceed <span class=\"tex-span\">10<sup class=\"upper-index\">\u2009-\u20096</sup></span>.</p>",
    "samples": [
        {
            "input": "9<br/>1 1<br/>1 2<br/>1 3<br/>2 1<br/>2 2<br/>2 3<br/>3 1<br/>3 2<br/>3 3<br/>1 1 1 1 1 1 1 1 1<br/>",
            "output": "1.5000000000 2.5000000000<br/>1.5000000000 2.5000000000<br/>"
        },
        {
            "input": "15<br/>4 4<br/>-1 -3<br/>1 5<br/>3 -4<br/>-4 4<br/>-1 1<br/>3 -3<br/>-4 -5<br/>-3 3<br/>3 2<br/>4 1<br/>-4 2<br/>-2 -5<br/>-3 4<br/>-1 4<br/>2 1 2 1 2 1 3 2 1<br/>",
            "output": "-3.5000000000 2.0000000000<br/>3.5000000000 -1.0000000000<br/>"
        },
        {
            "input": "10<br/>-2 10<br/>6 0<br/>-16 -6<br/>-4 13<br/>-4 -2<br/>-17 -10<br/>9 15<br/>18 16<br/>-5 2<br/>10 -5<br/>2 1 1 1 1 1 1 1 1<br/>",
            "output": "-1<br/>"
        }
    ],
    "note": "<p>The solution for the first sample test is shown below:</p><center> <img class=\"tex-graphics\" src=\"https://espresso.codeforces.com/405c61ff2ca0122d0e629d9c27f2ac0fe193cee1.png\" style=\"max-width: 100.0%;max-height: 100.0%;\"/> </center><p>The solution for the second sample test is shown below:</p><center> <img class=\"tex-graphics\" src=\"https://espresso.codeforces.com/82a2e66b1220a943ff94d9ed1f62629e0434bce2.png\" style=\"max-width: 100.0%;max-height: 100.0%;\"/> </center><p>There is no solution for the third sample test.</p>",
    "contestId": 260,
    "index": "E",
    "name": "Dividing Kingdom",
    "type": "PROGRAMMING",
    "tags": [
        "binary search",
        "brute force",
        "data structures"
    ],
    "solvedCount": 422
}