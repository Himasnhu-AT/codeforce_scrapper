{
    "title": "C. Idempotent functions",
    "timeLimit": {
        "value": 1.0,
        "unit": "second"
    },
    "memoryLimit": {
        "value": 256.0,
        "unit": "megabytes"
    },
    "statement": "<p>Some time ago Leonid have known about <span class=\"tex-font-style-it\">idempotent functions</span>. <span class=\"tex-font-style-it\">Idempotent function</span> defined on a set <span class=\"tex-span\">{1,\u20092,\u2009...,\u2009<i>n</i>}</span> is such function <img align=\"middle\" class=\"tex-formula\" src=\"https://espresso.codeforces.com/be90664fb67fc59aea0742746b0626ddab543582.png\" style=\"max-width: 100.0%;max-height: 100.0%;\"/>, that for any <img align=\"middle\" class=\"tex-formula\" src=\"https://espresso.codeforces.com/75df05ed78f11fc97381dcb0cd5b104b9483ca8f.png\" style=\"max-width: 100.0%;max-height: 100.0%;\"/> the formula <span class=\"tex-span\"><i>g</i>(<i>g</i>(<i>x</i>))\u2009=\u2009<i>g</i>(<i>x</i>)</span> holds.</p><p>Let's denote as <span class=\"tex-span\"><i>f</i><sup class=\"upper-index\">(<i>k</i>)</sup>(<i>x</i>)</span> the function <span class=\"tex-span\"><i>f</i></span> applied <span class=\"tex-span\"><i>k</i></span> times to the value <span class=\"tex-span\"><i>x</i></span>. More formally, <span class=\"tex-span\"><i>f</i><sup class=\"upper-index\">(1)</sup>(<i>x</i>)\u2009=\u2009<i>f</i>(<i>x</i>)</span>, <span class=\"tex-span\"><i>f</i><sup class=\"upper-index\">(<i>k</i>)</sup>(<i>x</i>)\u2009=\u2009<i>f</i>(<i>f</i><sup class=\"upper-index\">(<i>k</i>\u2009-\u20091)</sup>(<i>x</i>))</span> for each <span class=\"tex-span\"><i>k</i>\u2009&gt;\u20091</span>.</p><p>You are given some function <img align=\"middle\" class=\"tex-formula\" src=\"https://espresso.codeforces.com/58da889a2e5c65797055ac8eba57b4a01abee69c.png\" style=\"max-width: 100.0%;max-height: 100.0%;\"/>. Your task is to find minimum positive integer <span class=\"tex-span\"><i>k</i></span> such that function <span class=\"tex-span\"><i>f</i><sup class=\"upper-index\">(<i>k</i>)</sup>(<i>x</i>)</span> is <span class=\"tex-font-style-it\">idempotent</span>.</p>",
    "inputSpecification": "<p>In the first line of the input there is a single integer <span class=\"tex-span\"><i>n</i></span> (<span class=\"tex-span\">1\u2009\u2264\u2009<i>n</i>\u2009\u2264\u2009200</span>) \u2014 the size of function <span class=\"tex-span\"><i>f</i></span> domain.</p><p>In the second line follow <span class=\"tex-span\"><i>f</i>(1),\u2009<i>f</i>(2),\u2009...,\u2009<i>f</i>(<i>n</i>)</span> (<span class=\"tex-span\">1\u2009\u2264\u2009<i>f</i>(<i>i</i>)\u2009\u2264\u2009<i>n</i></span> for each <span class=\"tex-span\">1\u2009\u2264\u2009<i>i</i>\u2009\u2264\u2009<i>n</i></span>), the values of a function.</p>",
    "outputSpecification": "<p>Output minimum <span class=\"tex-span\"><i>k</i></span> such that function <span class=\"tex-span\"><i>f</i><sup class=\"upper-index\">(<i>k</i>)</sup>(<i>x</i>)</span> is <span class=\"tex-font-style-it\">idempotent</span>.</p>",
    "samples": [
        {
            "input": "4<br/>1 2 2 4<br/>",
            "output": "1<br/>"
        },
        {
            "input": "3<br/>2 3 3<br/>",
            "output": "2<br/>"
        },
        {
            "input": "3<br/>2 3 1<br/>",
            "output": "3<br/>"
        }
    ],
    "note": "<p>In the first sample test function <span class=\"tex-span\"><i>f</i>(<i>x</i>)\u2009=\u2009<i>f</i><sup class=\"upper-index\">(1)</sup>(<i>x</i>)</span> is already idempotent since <span class=\"tex-span\"><i>f</i>(<i>f</i>(1))\u2009=\u2009<i>f</i>(1)\u2009=\u20091</span>, <span class=\"tex-span\"><i>f</i>(<i>f</i>(2))\u2009=\u2009<i>f</i>(2)\u2009=\u20092</span>, <span class=\"tex-span\"><i>f</i>(<i>f</i>(3))\u2009=\u2009<i>f</i>(3)\u2009=\u20092</span>, <span class=\"tex-span\"><i>f</i>(<i>f</i>(4))\u2009=\u2009<i>f</i>(4)\u2009=\u20094</span>.</p><p>In the second sample test: </p><ul> <li> function <span class=\"tex-span\"><i>f</i>(<i>x</i>)\u2009=\u2009<i>f</i><sup class=\"upper-index\">(1)</sup>(<i>x</i>)</span> isn't idempotent because <span class=\"tex-span\"><i>f</i>(<i>f</i>(1))\u2009=\u20093</span> but <span class=\"tex-span\"><i>f</i>(1)\u2009=\u20092</span>; </li><li> function <span class=\"tex-span\"><i>f</i>(<i>x</i>)\u2009=\u2009<i>f</i><sup class=\"upper-index\">(2)</sup>(<i>x</i>)</span> is idempotent since for any <span class=\"tex-span\"><i>x</i></span> it is true that <span class=\"tex-span\"><i>f</i><sup class=\"upper-index\">(2)</sup>(<i>x</i>)\u2009=\u20093</span>, so it is also true that <span class=\"tex-span\"><i>f</i><sup class=\"upper-index\">(2)</sup>(<i>f</i><sup class=\"upper-index\">(2)</sup>(<i>x</i>))\u2009=\u20093</span>. </li></ul><p>In the third sample test: </p><ul> <li> function <span class=\"tex-span\"><i>f</i>(<i>x</i>)\u2009=\u2009<i>f</i><sup class=\"upper-index\">(1)</sup>(<i>x</i>)</span> isn't idempotent because <span class=\"tex-span\"><i>f</i>(<i>f</i>(1))\u2009=\u20093</span> but <span class=\"tex-span\"><i>f</i>(1)\u2009=\u20092</span>; </li><li> function <span class=\"tex-span\"><i>f</i>(<i>f</i>(<i>x</i>))\u2009=\u2009<i>f</i><sup class=\"upper-index\">(2)</sup>(<i>x</i>)</span> isn't idempotent because <span class=\"tex-span\"><i>f</i><sup class=\"upper-index\">(2)</sup>(<i>f</i><sup class=\"upper-index\">(2)</sup>(1))\u2009=\u20092</span> but <span class=\"tex-span\"><i>f</i><sup class=\"upper-index\">(2)</sup>(1)\u2009=\u20093</span>; </li><li> function <span class=\"tex-span\"><i>f</i>(<i>f</i>(<i>f</i>(<i>x</i>)))\u2009=\u2009<i>f</i><sup class=\"upper-index\">(3)</sup>(<i>x</i>)</span> is idempotent since it is identity function: <span class=\"tex-span\"><i>f</i><sup class=\"upper-index\">(3)</sup>(<i>x</i>)\u2009=\u2009<i>x</i></span> for any <img align=\"middle\" class=\"tex-formula\" src=\"https://espresso.codeforces.com/46a8c73444c646004dfde04451775e7af924d108.png\" style=\"max-width: 100.0%;max-height: 100.0%;\"/> meaning that the formula <span class=\"tex-span\"><i>f</i><sup class=\"upper-index\">(3)</sup>(<i>f</i><sup class=\"upper-index\">(3)</sup>(<i>x</i>))\u2009=\u2009<i>f</i><sup class=\"upper-index\">(3)</sup>(<i>x</i>)</span> also holds. </li></ul>",
    "contestId": 542,
    "index": "C",
    "name": "Idempotent functions",
    "type": "PROGRAMMING",
    "tags": [
        "constructive algorithms",
        "graphs",
        "math"
    ],
    "solvedCount": 1103
}