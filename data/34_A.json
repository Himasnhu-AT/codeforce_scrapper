{
    "title": "A. Reconnaissance 2",
    "timeLimit": {
        "value": 2.0,
        "unit": "seconds"
    },
    "memoryLimit": {
        "value": 256.0,
        "unit": "megabytes"
    },
    "statement": "<p><span class=\"tex-span\"><i>n</i></span> soldiers stand in a circle. For each soldier his height <span class=\"tex-span\"><i>a</i><sub class=\"lower-index\"><i>i</i></sub></span> is known. A reconnaissance unit can be made of such two <span class=\"tex-font-style-bf\">neighbouring</span> soldiers, whose heights difference is minimal, i.e. <span class=\"tex-span\">|<i>a</i><sub class=\"lower-index\"><i>i</i></sub>\u2009-\u2009<i>a</i><sub class=\"lower-index\"><i>j</i></sub>|</span> is minimal. So each of them will be less noticeable with the other. Output any pair of soldiers that can form a reconnaissance unit.</p>",
    "inputSpecification": "<p>The first line contains integer <span class=\"tex-span\"><i>n</i></span> (<span class=\"tex-span\">2\u2009\u2264\u2009<i>n</i>\u2009\u2264\u2009100</span>) \u2014 amount of soldiers. Then follow the heights of the soldiers in their order in the circle \u2014 <span class=\"tex-span\"><i>n</i></span> space-separated integers <span class=\"tex-span\"><i>a</i><sub class=\"lower-index\">1</sub>,\u2009<i>a</i><sub class=\"lower-index\">2</sub>,\u2009...,\u2009<i>a</i><sub class=\"lower-index\"><i>n</i></sub></span> (<span class=\"tex-span\">1\u2009\u2264\u2009<i>a</i><sub class=\"lower-index\"><i>i</i></sub>\u2009\u2264\u20091000</span>). The soldier heights are given in clockwise or counterclockwise direction.</p>",
    "outputSpecification": "<p>Output two integers \u2014 indexes of <span class=\"tex-font-style-bf\">neighbouring</span> soldiers, who should form a reconnaissance unit. If there are many optimum solutions, output any of them. Remember, that the soldiers stand in a circle.</p>",
    "samples": [
        {
            "input": "5<br/>10 12 13 15 10<br/>",
            "output": "5 1<br/>"
        },
        {
            "input": "4<br/>10 20 30 40<br/>",
            "output": "1 2<br/>"
        }
    ],
    "note": null,
    "contestId": 34,
    "index": "A",
    "name": "Reconnaissance 2",
    "type": "PROGRAMMING",
    "tags": [
        "implementation"
    ],
    "solvedCount": 28756
}