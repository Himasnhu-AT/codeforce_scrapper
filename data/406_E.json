{
    "title": "E. Hamming Triples",
    "timeLimit": {
        "value": 1.0,
        "unit": "second"
    },
    "memoryLimit": {
        "value": 256.0,
        "unit": "megabytes"
    },
    "statement": "<p>Little Chris is having a nightmare. Even in dreams all he thinks about is math.</p><p>Chris dreams about <span class=\"tex-span\"><i>m</i></span> binary strings of length <span class=\"tex-span\"><i>n</i></span>, indexed with numbers from 1 to <span class=\"tex-span\"><i>m</i></span>. The most horrifying part is that the bits of each string are ordered in either ascending or descending order. For example, Chris could be dreaming about the following 4 strings of length 5:</p><center> <img class=\"tex-graphics\" src=\"https://espresso.codeforces.com/4255770731152e955e6303f90191cfe811b72785.png\" style=\"max-width: 100.0%;max-height: 100.0%;\"/> </center><p>The <span class=\"tex-font-style-underline\">Hamming distance</span> <span class=\"tex-span\"><i>H</i>(<i>a</i>,\u2009<i>b</i>)</span> between two strings <span class=\"tex-span\"><i>a</i></span> and <span class=\"tex-span\"><i>b</i></span> of length <span class=\"tex-span\"><i>n</i></span> is the number of positions at which the corresponding symbols are different. </p><p>\u0421hris thinks that each three strings with different indices constitute a single triple. Chris's delusion is that he will wake up only if he counts the number of such string triples <span class=\"tex-span\"><i>a</i></span>, <span class=\"tex-span\"><i>b</i></span>, <span class=\"tex-span\"><i>c</i></span> that the sum <span class=\"tex-span\"><i>H</i>(<i>a</i>,\u2009<i>b</i>)\u2009+\u2009<i>H</i>(<i>b</i>,\u2009<i>c</i>)\u2009+\u2009<i>H</i>(<i>c</i>,\u2009<i>a</i>)</span> is maximal among all the string triples constructed from the dreamed strings.</p><p>Help Chris wake up from this nightmare!</p>",
    "inputSpecification": "<p>The first line of input contains two space-separated integers <span class=\"tex-span\"><i>n</i></span> and <span class=\"tex-span\"><i>m</i></span> (<span class=\"tex-span\">1\u2009\u2264\u2009<i>n</i>\u2009\u2264\u200910<sup class=\"upper-index\">9</sup></span>; <span class=\"tex-span\">3\u2009\u2264\u2009<i>m</i>\u2009\u2264\u200910<sup class=\"upper-index\">5</sup></span>), the length and the number of strings. The next <span class=\"tex-span\"><i>m</i></span> lines contain the description of the strings. The <span class=\"tex-span\"><i>i</i></span>-th line contains two space-separated integers <span class=\"tex-span\"><i>s</i><sub class=\"lower-index\"><i>i</i></sub></span> and <span class=\"tex-span\"><i>f</i><sub class=\"lower-index\"><i>i</i></sub></span> (<span class=\"tex-span\">0\u2009\u2264\u2009<i>s</i><sub class=\"lower-index\"><i>i</i></sub>\u2009\u2264\u20091</span>; <span class=\"tex-span\">1\u2009\u2264\u2009<i>f</i><sub class=\"lower-index\"><i>i</i></sub>\u2009\u2264\u2009<i>n</i></span>), the description of the string with index <span class=\"tex-span\"><i>i</i></span>; that means that the first <span class=\"tex-span\"><i>f</i><sub class=\"lower-index\"><i>i</i></sub></span> bits of the <span class=\"tex-span\"><i>i</i></span>-th string are equal to <span class=\"tex-span\"><i>s</i><sub class=\"lower-index\"><i>i</i></sub></span>, and the remaining <span class=\"tex-span\"><i>n</i>\u2009-\u2009<i>f</i><sub class=\"lower-index\"><i>i</i></sub></span> bits are equal to <span class=\"tex-span\">1\u2009-\u2009<i>s</i><sub class=\"lower-index\"><i>i</i></sub></span>. There can be multiple equal strings in Chris's dream.</p>",
    "outputSpecification": "<p>Output a single integer, the number of such string triples among the given that the sum of the Hamming distances between the strings of the triple is maximal.</p>",
    "samples": [
        {
            "input": "5 4<br/>0 3<br/>0 5<br/>1 4<br/>1 5<br/>",
            "output": "3<br/>"
        },
        {
            "input": "10 4<br/>1 5<br/>0 5<br/>0 5<br/>1 5<br/>",
            "output": "4<br/>"
        }
    ],
    "note": null,
    "contestId": 406,
    "index": "E",
    "name": "Hamming Triples",
    "type": "PROGRAMMING",
    "tags": [
        "implementation",
        "math",
        "two pointers"
    ],
    "solvedCount": 229
}