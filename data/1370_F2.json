{
    "title": "F2. The Hidden Pair (Hard Version)",
    "timeLimit": {
        "value": 2.0,
        "unit": "seconds"
    },
    "memoryLimit": {
        "value": 256.0,
        "unit": "megabytes"
    },
    "statement": "<p><span class=\"tex-font-style-bf\">Note that the only difference between the easy and hard version is the constraint on the number of queries. You can make hacks only if all versions of the problem are solved.</span></p><p><span class=\"tex-font-style-bf\">This is an interactive problem.</span></p><p>You are given a tree consisting of $$$n$$$ nodes numbered with integers from $$$1$$$ to $$$n$$$. Ayush and Ashish chose two secret distinct nodes in the tree. You need to find out both the nodes. You can make the following query: </p><ul> <li> Provide a list of nodes and you will receive a node from that list whose sum of distances to both the hidden nodes is minimal (if there are multiple such nodes in the list, you will receive any one of them). You will also get the sum of distances of that node to the hidden nodes. </li></ul><p>Recall that a tree is a connected graph without cycles. The distance between two nodes is defined as the number of edges in the simple path between them.</p><p>More formally, let's define two hidden nodes as $$$s$$$ and $$$f$$$. In one query you can provide the set of nodes $$$\\{a_1, a_2, \\ldots, a_c\\}$$$ of the tree. As a result, you will get two numbers $$$a_i$$$ and $$$dist(a_i, s) + dist(a_i, f)$$$. The node $$$a_i$$$ is any node from the provided set, for which the number $$$dist(a_i, s) + dist(a_i, f)$$$ is minimal.</p><p><span class=\"tex-font-style-bf\">You can ask no more than $$$11$$$ queries.</span></p>",
    "inputSpecification": "<p>The first line contains a single integer $$$t$$$ $$$(1 \\leq t \\leq 10)$$$\u00a0\u2014 the number of test cases. <span class=\"tex-font-style-bf\">Please note, how the interaction process is organized.</span></p><p>The first line of each test case consists of a single integer $$$n$$$ $$$(2 \\le n \\le 1000)$$$\u00a0\u2014 the number of nodes in the tree.</p><p>The next $$$n - 1$$$ lines consist of two integers $$$u$$$, $$$v$$$ $$$(1 \\le u, v \\le n, u \\ne v)$$$\u00a0\u2014 the edges of the tree.</p>",
    "outputSpecification": null,
    "samples": [
        {
            "input": "\n1\n3\n1 2\n1 3\n\n1 1\n\n2 3\n\n3 1\n\n3 1\n\nCorrect",
            "output": "\n? 1 1\n\n? 1 2\n\n? 1 3\n\n? 2 2 3\n\n! 1 3"
        }
    ],
    "note": "<p>The tree from the first test is shown below, and the hidden nodes are $$$1$$$ and $$$3$$$.</p><center><img class=\"tex-graphics\" src=\"https://espresso.codeforces.com/bcbd6776c018650322ba173e0c6ba8ca885688ab.png\" style=\"max-width: 100.0%;max-height: 100.0%;\"/></center>",
    "contestId": 1370,
    "index": "F2",
    "name": "The Hidden Pair (Hard Version)",
    "type": "PROGRAMMING",
    "tags": [
        "binary search",
        "dfs and similar",
        "graphs",
        "interactive",
        "shortest paths",
        "trees"
    ],
    "solvedCount": 1254
}