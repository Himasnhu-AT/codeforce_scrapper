{
    "title": "A. The Brand New Function",
    "timeLimit": {
        "value": 2.0,
        "unit": "seconds"
    },
    "memoryLimit": {
        "value": 256.0,
        "unit": "megabytes"
    },
    "statement": "<p>Polycarpus has a sequence, consisting of <span class=\"tex-span\"><i>n</i></span> non-negative integers: <span class=\"tex-span\"><i>a</i><sub class=\"lower-index\">1</sub>,\u2009<i>a</i><sub class=\"lower-index\">2</sub>,\u2009...,\u2009<i>a</i><sub class=\"lower-index\"><i>n</i></sub></span>.</p><p>Let's define function <span class=\"tex-span\"><i>f</i>(<i>l</i>,\u2009<i>r</i>)</span> (<span class=\"tex-span\"><i>l</i>,\u2009<i>r</i></span> are integer, <span class=\"tex-span\">1\u2009\u2264\u2009<i>l</i>\u2009\u2264\u2009<i>r</i>\u2009\u2264\u2009<i>n</i></span>) for sequence <span class=\"tex-span\"><i>a</i></span> as an operation of bitwise OR of all the sequence elements with indexes from <span class=\"tex-span\"><i>l</i></span> to <span class=\"tex-span\"><i>r</i></span>. Formally: <span class=\"tex-span\"><i>f</i>(<i>l</i>,\u2009<i>r</i>)\u2009=\u2009<i>a</i><sub class=\"lower-index\"><i>l</i></sub>\u00a0|\u00a0<i>a</i><sub class=\"lower-index\"><i>l</i>\u2009+\u20091</sub>\u00a0|\u00a0... \u00a0|\u00a0<i>a</i><sub class=\"lower-index\"><i>r</i></sub></span>. </p><p>Polycarpus took a piece of paper and wrote out the values of function <span class=\"tex-span\"><i>f</i>(<i>l</i>,\u2009<i>r</i>)</span> for all <span class=\"tex-span\"><i>l</i>,\u2009<i>r</i></span> (<span class=\"tex-span\"><i>l</i>,\u2009<i>r</i></span> are integer, <span class=\"tex-span\">1\u2009\u2264\u2009<i>l</i>\u2009\u2264\u2009<i>r</i>\u2009\u2264\u2009<i>n</i></span>). Now he wants to know, how many <span class=\"tex-font-style-bf\">distinct</span> values he's got in the end. </p><p>Help Polycarpus, count the number of distinct values of function <span class=\"tex-span\"><i>f</i>(<i>l</i>,\u2009<i>r</i>)</span> for the given sequence <span class=\"tex-span\"><i>a</i></span>.</p><p>Expression <span class=\"tex-span\"><i>x</i>\u00a0|\u00a0<i>y</i></span> means applying the operation of bitwise OR to numbers <span class=\"tex-span\"><i>x</i></span> and <span class=\"tex-span\"><i>y</i></span>. This operation exists in all modern programming languages, for example, in language <span class=\"tex-font-style-it\">C++</span> and <span class=\"tex-font-style-it\">Java</span> it is marked as \"<span class=\"tex-font-style-tt\">|</span>\", in <span class=\"tex-font-style-it\">Pascal</span> \u2014 as \"<span class=\"tex-font-style-tt\">or</span>\".</p>",
    "inputSpecification": "<p>The first line contains integer <span class=\"tex-span\"><i>n</i></span> <span class=\"tex-span\">(1\u2009\u2264\u2009<i>n</i>\u2009\u2264\u200910<sup class=\"upper-index\">5</sup>)</span> \u2014 the number of elements of sequence <span class=\"tex-span\"><i>a</i></span>. The second line contains <span class=\"tex-span\"><i>n</i></span> space-separated integers <span class=\"tex-span\"><i>a</i><sub class=\"lower-index\">1</sub>,\u2009<i>a</i><sub class=\"lower-index\">2</sub>,\u2009...,\u2009<i>a</i><sub class=\"lower-index\"><i>n</i></sub></span> <span class=\"tex-span\">(0\u2009\u2264\u2009<i>a</i><sub class=\"lower-index\"><i>i</i></sub>\u2009\u2264\u200910<sup class=\"upper-index\">6</sup>)</span> \u2014 the elements of sequence <span class=\"tex-span\"><i>a</i></span>.</p>",
    "outputSpecification": "<p>Print a single integer \u2014 the number of distinct values of function <span class=\"tex-span\"><i>f</i>(<i>l</i>,\u2009<i>r</i>)</span> for the given sequence <span class=\"tex-span\"><i>a</i></span>.</p><p>Please, do not use the <span class=\"tex-font-style-tt\">%lld</span> specifier to read or write 64-bit integers in \u0421++. It is preferred to use <span class=\"tex-font-style-tt\">cin</span>, <span class=\"tex-font-style-tt\">cout</span> streams or the <span class=\"tex-font-style-tt\">%I64d</span> specifier.</p>",
    "samples": [
        {
            "input": "3<br/>1 2 0<br/>",
            "output": "4"
        },
        {
            "input": "10<br/>1 2 3 4 5 6 1 2 9 10<br/>",
            "output": "11"
        }
    ],
    "note": "<p>In the first test case Polycarpus will have 6 numbers written on the paper: <span class=\"tex-span\"><i>f</i>(1,\u20091)\u2009=\u20091</span>, <span class=\"tex-span\"><i>f</i>(1,\u20092)\u2009=\u20093</span>, <span class=\"tex-span\"><i>f</i>(1,\u20093)\u2009=\u20093</span>, <span class=\"tex-span\"><i>f</i>(2,\u20092)\u2009=\u20092</span>, <span class=\"tex-span\"><i>f</i>(2,\u20093)\u2009=\u20092</span>, <span class=\"tex-span\"><i>f</i>(3,\u20093)\u2009=\u20090</span>. There are exactly <span class=\"tex-span\">4</span> distinct numbers among them: <span class=\"tex-span\">0,\u20091,\u20092,\u20093</span>.</p>",
    "contestId": 243,
    "index": "A",
    "name": "The Brand New Function",
    "type": "PROGRAMMING",
    "tags": [
        "bitmasks"
    ],
    "solvedCount": 3834
}