{
    "title": "A. Sereja and Algorithm ",
    "timeLimit": {
        "value": 1.0,
        "unit": "second"
    },
    "memoryLimit": {
        "value": 256.0,
        "unit": "megabytes"
    },
    "statement": "<p>Sereja loves all sorts of algorithms. He has recently come up with a new algorithm, which receives a string as an input. Let's represent the input string of the algorithm as <span class=\"tex-span\"><i>q</i>\u2009=\u2009<i>q</i><sub class=\"lower-index\">1</sub><i>q</i><sub class=\"lower-index\">2</sub>... <i>q</i><sub class=\"lower-index\"><i>k</i></sub></span>. The algorithm consists of two steps:</p><ol> <li> Find any continuous subsequence (substring) of three characters of string <span class=\"tex-span\"><i>q</i></span>, which doesn't equal to either string \"<span class=\"tex-font-style-tt\">zyx</span>\", \"<span class=\"tex-font-style-tt\">xzy</span>\", \"<span class=\"tex-font-style-tt\">yxz</span>\". If <span class=\"tex-span\"><i>q</i></span> doesn't contain any such subsequence, terminate the algorithm, otherwise go to step 2. </li><li> Rearrange the letters of the found subsequence randomly and go to step 1. </li></ol><p>Sereja thinks that the algorithm works correctly on string <span class=\"tex-span\"><i>q</i></span> if there is a non-zero probability that the algorithm will be terminated. But if the algorithm anyway will work for infinitely long on a string, then we consider the algorithm to work incorrectly on this string.</p><p>Sereja wants to test his algorithm. For that, he has string <span class=\"tex-span\"><i>s</i>\u2009=\u2009<i>s</i><sub class=\"lower-index\">1</sub><i>s</i><sub class=\"lower-index\">2</sub>... <i>s</i><sub class=\"lower-index\"><i>n</i></sub></span>, consisting of <span class=\"tex-span\"><i>n</i></span> characters. The boy conducts a series of <span class=\"tex-span\"><i>m</i></span> tests. As the <span class=\"tex-span\"><i>i</i></span>-th test, he sends substring <span class=\"tex-span\"><i>s</i><sub class=\"lower-index\"><i>l</i><sub class=\"lower-index\"><i>i</i></sub></sub><i>s</i><sub class=\"lower-index\"><i>l</i><sub class=\"lower-index\"><i>i</i></sub>\u2009+\u20091</sub>... <i>s</i><sub class=\"lower-index\"><i>r</i><sub class=\"lower-index\"><i>i</i></sub></sub></span> <span class=\"tex-span\">(1\u2009\u2264\u2009<i>l</i><sub class=\"lower-index\"><i>i</i></sub>\u2009\u2264\u2009<i>r</i><sub class=\"lower-index\"><i>i</i></sub>\u2009\u2264\u2009<i>n</i>)</span> to the algorithm input. Unfortunately, the implementation of his algorithm works too long, so Sereja asked you to help. For each test <span class=\"tex-span\">(<i>l</i><sub class=\"lower-index\"><i>i</i></sub>,\u2009<i>r</i><sub class=\"lower-index\"><i>i</i></sub>)</span> determine if the algorithm works correctly on this test or not.</p>",
    "inputSpecification": "<p>The first line contains non-empty string <span class=\"tex-span\"><i>s</i></span>, its length (<span class=\"tex-span\"><i>n</i></span>) doesn't exceed <span class=\"tex-span\">10<sup class=\"upper-index\">5</sup></span>. It is guaranteed that string <span class=\"tex-span\"><i>s</i></span> only contains characters: '<span class=\"tex-font-style-tt\">x</span>', '<span class=\"tex-font-style-tt\">y</span>', '<span class=\"tex-font-style-tt\">z</span>'.</p><p>The second line contains integer <span class=\"tex-span\"><i>m</i></span> <span class=\"tex-span\">(1\u2009\u2264\u2009<i>m</i>\u2009\u2264\u200910<sup class=\"upper-index\">5</sup>)</span> \u2014 the number of tests. Next <span class=\"tex-span\"><i>m</i></span> lines contain the tests. The <span class=\"tex-span\"><i>i</i></span>-th line contains a pair of integers <span class=\"tex-span\"><i>l</i><sub class=\"lower-index\"><i>i</i></sub></span>, <span class=\"tex-span\"><i>r</i><sub class=\"lower-index\"><i>i</i></sub></span> <span class=\"tex-span\">(1\u2009\u2264\u2009<i>l</i><sub class=\"lower-index\"><i>i</i></sub>\u2009\u2264\u2009<i>r</i><sub class=\"lower-index\"><i>i</i></sub>\u2009\u2264\u2009<i>n</i>)</span>.</p>",
    "outputSpecification": "<p>For each test, print \"<span class=\"tex-font-style-tt\">YES</span>\" (without the quotes) if the algorithm works correctly on the corresponding test and \"<span class=\"tex-font-style-tt\">NO</span>\" (without the quotes) otherwise.</p>",
    "samples": [
        {
            "input": "zyxxxxxxyyz<br/>5<br/>5 5<br/>1 3<br/>1 11<br/>1 4<br/>3 6<br/>",
            "output": "YES<br/>YES<br/>NO<br/>YES<br/>NO<br/>"
        }
    ],
    "note": "<p>In the first example, in test one and two the algorithm will always be terminated in one step. In the fourth test you can get string \"<span class=\"tex-font-style-tt\">xzyx</span>\" on which the algorithm will terminate. In all other tests the algorithm doesn't work correctly. </p>",
    "contestId": 367,
    "index": "A",
    "name": "Sereja and Algorithm ",
    "type": "PROGRAMMING",
    "tags": [
        "data structures",
        "implementation"
    ],
    "solvedCount": 4293
}