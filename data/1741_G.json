{
    "title": "G. Kirill and Company",
    "timeLimit": {
        "value": 3.0,
        "unit": "seconds"
    },
    "memoryLimit": {
        "value": 256.0,
        "unit": "megabytes"
    },
    "statement": "<p>Kirill lives on a connected undirected graph of $$$n$$$ vertices and $$$m$$$ edges at vertex $$$1$$$. One fine evening he gathered $$$f$$$ friends, the $$$i$$$-th friend lives at the vertex $$$h_i$$$. So all friends are now in the vertex $$$1$$$, the $$$i$$$-th friend must get to his home to the vertex $$$h_i$$$.</p><p>The evening is about to end and it is time to leave. It turned out that $$$k$$$ ($$$k \\le 6$$$) of his friends have no cars, and they would have to walk if no one gives them a ride. One friend with a car can give a ride to <span class=\"tex-font-style-bf\">any</span> number of friends without cars, but only if he can give them a ride by driving along one of the <span class=\"tex-font-style-bf\">shortest</span> paths to his house.</p><p>For example, in the graph below, a friend from vertex $$$h_i=5$$$ can give a ride to friends from the following sets of vertices: $$$[2, 3]$$$, $$$[2, 4]$$$, $$$[2]$$$, $$$[3]$$$, $$$[4]$$$, but can't give a ride to friend from vertex $$$6$$$ or a set $$$[3, 4]$$$.</p><center> <img class=\"tex-graphics\" src=\"https://espresso.codeforces.com/36c8782d165c07fe49a422331a46da8fb44280b5.png\" style=\"max-width: 100.0%;max-height: 100.0%;\"/> <span class=\"tex-font-size-small\">The vertices where friends without cars live are highlighted in green, and with cars \u2014 in red.</span> </center><p>Kirill wants as few friends as possible to have to walk. Help him find the <span class=\"tex-font-style-bf\">minimum</span> possible number.</p>",
    "inputSpecification": "<p>The first line of input data contains an integer $$$t$$$ ($$$1 \\le t \\le 10^3$$$)\u00a0\u2014 the number of test cases in the test.</p><p>The first line of the test case contains two integers $$$n$$$ and $$$m$$$ ($$$2 \\le n \\le 10^4$$$, $$$n-1 \\le m \\le min (10^4, $$$$$$ \\frac{n \\cdot (n - 1)}{2} $$$$$$)$$$)\u00a0\u2014 the number of vertices and edges, respectively.</p><p>The next $$$m$$$ lines of the test case contain a description of the edges, two integers each $$$u$$$ and $$$v$$$ ($$$1 \\le u, v \\le n$$$, $$$u \\ne v$$$)\u00a0\u2014 indexes of vertices connected by an edge. It is guaranteed that there is at most one edge between any pair of vertices (i.e. no multiple edges in the graph).</p><p>Then follows line containing the number $$$f$$$ ($$$1 \\le f \\le 10^4$$$)\u00a0\u2014 the number of Kirill's friends.</p><p>The next line of the test case contains $$$f$$$ integers: $$$h_1, h_2, \\dots, h_f$$$ ($$$2 \\le h_i \\le n$$$)\u00a0\u2014 the vertices in which they live. Some vertices may be repeated.</p><p>The next line of the set contains the number $$$k$$$ ($$$1 \\le k \\le min(6, f)$$$)\u00a0\u2014 the number of friends without cars.</p><p>The last line of each test case contains $$$k$$$ integers: $$$p_1, p_2, \\dots, p_k$$$ ($$$1 \\le p_i \\le f$$$, $$$p_i &lt; p_{i+1}$$$)\u00a0\u2014 indexes of friends without cars.</p><p>It is guaranteed that the sum of $$$n$$$ over all cases does not exceed $$$10^4$$$, as well as the sums of $$$m$$$ and $$$f$$$.</p>",
    "outputSpecification": "<p>Output $$$t$$$ lines, each of which contains the answer to the corresponding test case. As an answer, output a single integer\u00a0\u2014 <span class=\"tex-font-style-bf\">the minimum</span> possible number of friends who will have to walk.</p>",
    "samples": [
        {
            "input": "\n<div class=\"test-example-line test-example-line-even test-example-line-0\">3</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">6 7</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">1 2</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">2 3</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">2 4</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">3 5</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">4 5</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">3 6</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">6 5</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">5</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">2 3 4 5 6</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">4</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">1 2 3 5</div><div class=\"test-example-line test-example-line-even test-example-line-2\">6 7</div><div class=\"test-example-line test-example-line-even test-example-line-2\">1 2</div><div class=\"test-example-line test-example-line-even test-example-line-2\">2 3</div><div class=\"test-example-line test-example-line-even test-example-line-2\">2 4</div><div class=\"test-example-line test-example-line-even test-example-line-2\">3 5</div><div class=\"test-example-line test-example-line-even test-example-line-2\">4 5</div><div class=\"test-example-line test-example-line-even test-example-line-2\">3 6</div><div class=\"test-example-line test-example-line-even test-example-line-2\">6 5</div><div class=\"test-example-line test-example-line-even test-example-line-2\">6</div><div class=\"test-example-line test-example-line-even test-example-line-2\">2 3 4 5 6 5</div><div class=\"test-example-line test-example-line-even test-example-line-2\">4</div><div class=\"test-example-line test-example-line-even test-example-line-2\">1 2 3 5</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">4 4</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">1 2</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">1 3</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">2 3</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">3 4</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">3</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">3 4 2</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">2</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">1 3</div>",
            "output": "\n2\n1\n1\n"
        },
        {
            "input": "\n<div class=\"test-example-line test-example-line-even test-example-line-0\">3</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">2 1</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">1 2</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">3</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">2 2 2</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">3</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">1 2 3</div><div class=\"test-example-line test-example-line-even test-example-line-2\">3 3</div><div class=\"test-example-line test-example-line-even test-example-line-2\">1 2</div><div class=\"test-example-line test-example-line-even test-example-line-2\">1 3</div><div class=\"test-example-line test-example-line-even test-example-line-2\">2 3</div><div class=\"test-example-line test-example-line-even test-example-line-2\">4</div><div class=\"test-example-line test-example-line-even test-example-line-2\">2 2 2 3</div><div class=\"test-example-line test-example-line-even test-example-line-2\">3</div><div class=\"test-example-line test-example-line-even test-example-line-2\">1 2 4</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">4 4</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">3 1</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">3 2</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">1 4</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">2 4</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">5</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">3 2 2 4 2</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">3</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">1 3 4</div>",
            "output": "\n3\n1\n0\n"
        }
    ],
    "note": "<p>The first test case of the first example is explained in the statement.</p><p>In the second test case of the first example, two friends with cars live at vertex $$$5$$$, one can give a ride to friends from vertices $$$2$$$ and $$$3$$$, and the second from vertex $$$4$$$, only a friend from vertex $$$6$$$ will have to walk.</p>",
    "contestId": 1741,
    "index": "G",
    "name": "Kirill and Company",
    "type": "PROGRAMMING",
    "tags": [
        "bitmasks",
        "brute force",
        "dfs and similar",
        "dp",
        "flows",
        "graphs",
        "shortest paths"
    ],
    "solvedCount": 1439
}