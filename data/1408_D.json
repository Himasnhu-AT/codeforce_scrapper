{
    "title": "D. Searchlights",
    "timeLimit": {
        "value": 1.0,
        "unit": "second"
    },
    "memoryLimit": {
        "value": 256.0,
        "unit": "megabytes"
    },
    "statement": "<p>There are $$$n$$$ robbers at coordinates $$$(a_1, b_1)$$$, $$$(a_2, b_2)$$$, ..., $$$(a_n, b_n)$$$ and $$$m$$$ searchlight at coordinates $$$(c_1, d_1)$$$, $$$(c_2, d_2)$$$, ..., $$$(c_m, d_m)$$$. </p><p>In one move you can move each robber to the right (increase $$$a_i$$$ of each robber by one) or move each robber up (increase $$$b_i$$$ of each robber by one). Note that you should either increase <span class=\"tex-font-style-bf\">all</span> $$$a_i$$$ or <span class=\"tex-font-style-bf\">all</span> $$$b_i$$$, you <span class=\"tex-font-style-bf\">can't</span> increase $$$a_i$$$ for some points and $$$b_i$$$ for some other points.</p><p>Searchlight $$$j$$$ can see a robber $$$i$$$ if $$$a_i \\leq c_j$$$ and $$$b_i \\leq d_j$$$. </p><p>A configuration of robbers is <span class=\"tex-font-style-it\">safe</span> if no searchlight can see a robber (i.e. if there is no pair $$$i,j$$$ such that searchlight $$$j$$$ can see a robber $$$i$$$).</p><p>What is the minimum number of moves you need to perform to reach a safe configuration?</p>",
    "inputSpecification": "<p>The first line of input contains two integers $$$n$$$ and $$$m$$$ ($$$1 \\leq n, m \\leq 2000$$$): the number of robbers and the number of searchlight.</p><p>Each of the next $$$n$$$ lines contains two integers $$$a_i$$$, $$$b_i$$$ ($$$0 \\leq a_i, b_i \\leq 10^6$$$), coordinates of robbers.</p><p>Each of the next $$$m$$$ lines contains two integers $$$c_i$$$, $$$d_i$$$ ($$$0 \\leq c_i, d_i \\leq 10^6$$$), coordinates of searchlights.</p>",
    "outputSpecification": "<p>Print one integer: the minimum number of moves you need to perform to reach a safe configuration.</p>",
    "samples": [
        {
            "input": "\n1 1\n0 0\n2 3\n",
            "output": "\n3\n"
        },
        {
            "input": "\n2 3\n1 6\n6 1\n10 1\n1 10\n7 7\n",
            "output": "\n4\n"
        },
        {
            "input": "\n1 2\n0 0\n0 0\n0 0\n",
            "output": "\n1\n"
        },
        {
            "input": "\n7 3\n0 8\n3 8\n2 7\n0 10\n5 5\n7 0\n3 5\n6 6\n3 11\n11 5\n",
            "output": "\n6\n"
        }
    ],
    "note": "<p>In the first test, you can move each robber to the right three times. After that there will be one robber in the coordinates $$$(3, 0)$$$.</p><p>The configuration of the robbers is safe, because the only searchlight can't see the robber, because it is in the coordinates $$$(2, 3)$$$ and $$$3 &gt; 2$$$.</p><p>In the second test, you can move each robber to the right two times and two times up. After that robbers will be in the coordinates $$$(3, 8)$$$, $$$(8, 3)$$$.</p><p>It's easy the see that the configuration of the robbers is safe.</p><p>It can be proved that you can't reach a safe configuration using no more than $$$3$$$ moves.</p>",
    "contestId": 1408,
    "index": "D",
    "name": "Searchlights",
    "type": "PROGRAMMING",
    "tags": [
        "binary search",
        "brute force",
        "data structures",
        "dp",
        "implementation",
        "sortings",
        "two pointers"
    ],
    "solvedCount": 4180
}