{
    "title": "C. Not Adjacent Matrix",
    "timeLimit": {
        "value": 4.0,
        "unit": "seconds"
    },
    "memoryLimit": {
        "value": 256.0,
        "unit": "megabytes"
    },
    "statement": "<p>We will consider the numbers $$$a$$$ and $$$b$$$ as adjacent if they differ by exactly one, that is, $$$|a-b|=1$$$.</p><p>We will consider cells of a square matrix $$$n \\times n$$$ as adjacent if they have a common side, that is, for cell $$$(r, c)$$$ cells $$$(r, c-1)$$$, $$$(r, c+1)$$$, $$$(r-1, c)$$$ and $$$(r+1, c)$$$ are adjacent to it.</p><p>For a given number $$$n$$$, construct a square matrix $$$n \\times n$$$ such that: </p><ul> <li> Each integer from $$$1$$$ to $$$n^2$$$ occurs in this matrix exactly once; </li><li> If $$$(r_1, c_1)$$$ and $$$(r_2, c_2)$$$ are adjacent cells, then the numbers written in them <span class=\"tex-font-style-bf\">must not be adjacent</span>. </li></ul>",
    "inputSpecification": "<p>The first line contains one integer $$$t$$$ ($$$1 \\le t \\le 100$$$). Then $$$t$$$ test cases follow.</p><p>Each test case is characterized by one integer $$$n$$$ ($$$1 \\le n \\le 100$$$).</p>",
    "outputSpecification": "<p>For each test case, output: </p><ul> <li> <span class=\"tex-font-style-tt\">-1</span>, if the required matrix does not exist; </li><li> the required matrix, otherwise (any such matrix if many of them exist). </li></ul><p>The matrix should be outputted as $$$n$$$ lines, where each line contains $$$n$$$ integers.</p>",
    "samples": [
        {
            "input": "\n3\n1\n2\n3\n",
            "output": "\n1\n-1\n2 9 7\n4 6 3\n1 8 5\n"
        }
    ],
    "note": null,
    "contestId": 1520,
    "index": "C",
    "name": "Not Adjacent Matrix",
    "type": "PROGRAMMING",
    "tags": [
        "constructive algorithms"
    ],
    "solvedCount": 30878
}