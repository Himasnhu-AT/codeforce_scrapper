{
    "title": "E. Complete the Permutations",
    "timeLimit": {
        "value": 5.0,
        "unit": "seconds"
    },
    "memoryLimit": {
        "value": 256.0,
        "unit": "megabytes"
    },
    "statement": "<p>ZS the Coder is given two permutations <span class=\"tex-span\"><i>p</i></span> and <span class=\"tex-span\"><i>q</i></span> of <span class=\"tex-span\">{1,\u20092,\u2009...,\u2009<i>n</i>}</span>, but some of their elements are replaced with <span class=\"tex-span\">0</span>. The <span class=\"tex-font-style-it\">distance</span> between two permutations <span class=\"tex-span\"><i>p</i></span> and <span class=\"tex-span\"><i>q</i></span> is defined as the minimum number of moves required to turn <span class=\"tex-span\"><i>p</i></span> into <span class=\"tex-span\"><i>q</i></span>. A move consists of swapping exactly <span class=\"tex-span\">2</span> elements of <span class=\"tex-span\"><i>p</i></span>.</p><p>ZS the Coder wants to determine the number of ways to replace the zeros with positive integers from the set <span class=\"tex-span\">{1,\u20092,\u2009...,\u2009<i>n</i>}</span> such that <span class=\"tex-span\"><i>p</i></span> and <span class=\"tex-span\"><i>q</i></span> are permutations of <span class=\"tex-span\">{1,\u20092,\u2009...,\u2009<i>n</i>}</span> and the distance between <span class=\"tex-span\"><i>p</i></span> and <span class=\"tex-span\"><i>q</i></span> is exactly <span class=\"tex-span\"><i>k</i></span>.</p><p>ZS the Coder wants to find the answer for all <span class=\"tex-span\">0\u2009\u2264\u2009<i>k</i>\u2009\u2264\u2009<i>n</i>\u2009-\u20091</span>. Can you help him?</p>",
    "inputSpecification": "<p>The first line of the input contains a single integer <span class=\"tex-span\"><i>n</i></span> (<span class=\"tex-span\">1\u2009\u2264\u2009<i>n</i>\u2009\u2264\u2009250</span>)\u00a0\u2014 the number of elements in the permutations.</p><p>The second line contains <span class=\"tex-span\"><i>n</i></span> integers, <span class=\"tex-span\"><i>p</i><sub class=\"lower-index\">1</sub>,\u2009<i>p</i><sub class=\"lower-index\">2</sub>,\u2009...,\u2009<i>p</i><sub class=\"lower-index\"><i>n</i></sub></span> (<span class=\"tex-span\">0\u2009\u2264\u2009<i>p</i><sub class=\"lower-index\"><i>i</i></sub>\u2009\u2264\u2009<i>n</i></span>)\u00a0\u2014 the permutation <span class=\"tex-span\"><i>p</i></span>. It is guaranteed that there is at least one way to replace zeros such that <span class=\"tex-span\"><i>p</i></span> is a permutation of <span class=\"tex-span\">{1,\u20092,\u2009...,\u2009<i>n</i>}</span>.</p><p>The third line contains <span class=\"tex-span\"><i>n</i></span> integers, <span class=\"tex-span\"><i>q</i><sub class=\"lower-index\">1</sub>,\u2009<i>q</i><sub class=\"lower-index\">2</sub>,\u2009...,\u2009<i>q</i><sub class=\"lower-index\"><i>n</i></sub></span> (<span class=\"tex-span\">0\u2009\u2264\u2009<i>q</i><sub class=\"lower-index\"><i>i</i></sub>\u2009\u2264\u2009<i>n</i></span>)\u00a0\u2014 the permutation <span class=\"tex-span\"><i>q</i></span>. It is guaranteed that there is at least one way to replace zeros such that <span class=\"tex-span\"><i>q</i></span> is a permutation of <span class=\"tex-span\">{1,\u20092,\u2009...,\u2009<i>n</i>}</span>.</p>",
    "outputSpecification": "<p>Print <span class=\"tex-span\"><i>n</i></span> integers, <span class=\"tex-span\"><i>i</i></span>-th of them should denote the answer for <span class=\"tex-span\"><i>k</i>\u2009=\u2009<i>i</i>\u2009-\u20091</span>. Since the answer may be quite large, and ZS the Coder loves weird primes, print them modulo <span class=\"tex-span\">998244353\u2009=\u20092<sup class=\"upper-index\">23</sup>\u00b77\u00b717\u2009+\u20091</span>, which is a prime.</p>",
    "samples": [
        {
            "input": "3<br/>1 0 0<br/>0 2 0<br/>",
            "output": "1 2 1 <br/>"
        },
        {
            "input": "4<br/>1 0 0 3<br/>0 0 0 4<br/>",
            "output": "0 2 6 4 <br/>"
        },
        {
            "input": "6<br/>1 3 2 5 4 6<br/>6 4 5 1 0 0<br/>",
            "output": "0 0 0 0 1 1 <br/>"
        },
        {
            "input": "4<br/>1 2 3 4<br/>2 3 4 1<br/>",
            "output": "0 0 0 1 <br/>"
        }
    ],
    "note": "<p>In the first sample case, there is the only way to replace zeros so that it takes <span class=\"tex-span\">0</span> swaps to convert <span class=\"tex-span\"><i>p</i></span> into <span class=\"tex-span\"><i>q</i></span>, namely <span class=\"tex-span\"><i>p</i>\u2009=\u2009(1,\u20092,\u20093),\u2009<i>q</i>\u2009=\u2009(1,\u20092,\u20093)</span>.</p><p>There are two ways to replace zeros so that it takes <span class=\"tex-span\">1</span> swap to turn <span class=\"tex-span\"><i>p</i></span> into <span class=\"tex-span\"><i>q</i></span>. One of these ways is <span class=\"tex-span\"><i>p</i>\u2009=\u2009(1,\u20092,\u20093),\u2009<i>q</i>\u2009=\u2009(3,\u20092,\u20091)</span>, then swapping <span class=\"tex-span\">1</span> and <span class=\"tex-span\">3</span> from <span class=\"tex-span\"><i>p</i></span> transform it into <span class=\"tex-span\"><i>q</i></span>. The other way is <span class=\"tex-span\"><i>p</i>\u2009=\u2009(1,\u20093,\u20092),\u2009<i>q</i>\u2009=\u2009(1,\u20092,\u20093)</span>. Swapping <span class=\"tex-span\">2</span> and <span class=\"tex-span\">3</span> works in this case.</p><p>Finally, there is one way to replace zeros so that it takes <span class=\"tex-span\">2</span> swaps to turn <span class=\"tex-span\"><i>p</i></span> into <span class=\"tex-span\"><i>q</i></span>, namely <span class=\"tex-span\"><i>p</i>\u2009=\u2009(1,\u20093,\u20092),\u2009<i>q</i>\u2009=\u2009(3,\u20092,\u20091)</span>. Then, we can transform <span class=\"tex-span\"><i>p</i></span> into <span class=\"tex-span\"><i>q</i></span> like following: <img align=\"middle\" class=\"tex-formula\" src=\"https://espresso.codeforces.com/beeee62f30e67cbf13c9846ffccc84c2d29df3be.png\" style=\"max-width: 100.0%;max-height: 100.0%;\"/>.</p>",
    "contestId": 715,
    "index": "E",
    "name": "Complete the Permutations",
    "type": "PROGRAMMING",
    "tags": [
        "combinatorics",
        "fft",
        "graphs",
        "math"
    ],
    "solvedCount": 348
}