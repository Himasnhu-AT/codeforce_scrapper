{
    "title": "G. Tree Modification",
    "timeLimit": {
        "value": 1.0,
        "unit": "second"
    },
    "memoryLimit": {
        "value": 256.0,
        "unit": "megabytes"
    },
    "statement": "<p>You are given a tree with $$$n$$$ vertices. You are allowed to modify the structure of the tree through the following multi-step operation:</p><ol> <li> Choose three vertices $$$a$$$, $$$b$$$, and $$$c$$$ such that $$$b$$$ is adjacent to both $$$a$$$ and $$$c$$$. </li><li> For every vertex $$$d$$$ <span class=\"tex-font-style-bf\">other than $$$b$$$</span> that is adjacent to $$$a$$$, remove the edge connecting $$$d$$$ and $$$a$$$ and add the edge connecting $$$d$$$ and $$$c$$$. </li><li> Delete the edge connecting $$$a$$$ and $$$b$$$ and add the edge connecting $$$a$$$ and $$$c$$$. </li></ol><p>As an example, consider the following tree:</p><center> <img class=\"tex-graphics\" src=\"https://espresso.codeforces.com/67ad2197112ff5162542c7d358f309287fdd44d4.png\" style=\"max-width: 100.0%;max-height: 100.0%;\"/> </center><p>The following diagram illustrates the sequence of steps that happen when we apply an operation to vertices $$$2$$$, $$$4$$$, and $$$5$$$:</p><center> <img class=\"tex-graphics\" src=\"https://espresso.codeforces.com/26b87851f85078e8d9fa3f6db19c8a632a1c0e7a.png\" style=\"max-width: 100.0%;max-height: 100.0%;\"/> </center><p>It can be proven that after each operation, the resulting graph is still a tree.</p><p>Find the minimum number of operations that must be performed to transform the tree into a star. A star is a tree with one vertex of degree $$$n - 1$$$, called its center, and $$$n - 1$$$ vertices of degree $$$1$$$.</p>",
    "inputSpecification": "<p>The first line contains an integer $$$n$$$ ($$$3 \\le n \\le 2 \\cdot 10^5$$$) \u00a0\u2014 the number of vertices in the tree.</p><p>The $$$i$$$-th of the following $$$n - 1$$$ lines contains two integers $$$u_i$$$ and $$$v_i$$$ ($$$1 \\le u_i, v_i \\le n$$$, $$$u_i \\neq v_i$$$) denoting that there exists an edge connecting vertices $$$u_i$$$ and $$$v_i$$$. It is guaranteed that the given edges form a tree.</p>",
    "outputSpecification": "<p>Print a single integer \u00a0\u2014 the minimum number of operations needed to transform the tree into a star.</p><p>It can be proven that under the given constraints, it is always possible to transform the tree into a star using at most $$$10^{18}$$$ operations.</p>",
    "samples": [
        {
            "input": "\n6\n4 5\n2 6\n3 2\n1 2\n2 4\n",
            "output": "\n1\n"
        },
        {
            "input": "\n4\n2 4\n4 1\n3 4\n",
            "output": "\n0\n"
        }
    ],
    "note": "<p>The first test case corresponds to the tree shown in the statement. As we have seen before, we can transform the tree into a star with center at vertex $$$5$$$ by applying a single operation to vertices $$$2$$$, $$$4$$$, and $$$5$$$.</p><p>In the second test case, the given tree is already a star with the center at vertex $$$4$$$, so no operations have to be performed.</p>",
    "contestId": 1375,
    "index": "G",
    "name": "Tree Modification",
    "type": "PROGRAMMING",
    "tags": [
        "brute force",
        "constructive algorithms",
        "dfs and similar",
        "graph matchings",
        "graphs",
        "trees"
    ],
    "solvedCount": 1682
}