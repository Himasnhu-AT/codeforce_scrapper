{
    "title": "F2. Field Division (hard version)",
    "timeLimit": {
        "value": 3.0,
        "unit": "seconds"
    },
    "memoryLimit": {
        "value": 256.0,
        "unit": "megabytes"
    },
    "statement": "<p><span class=\"tex-font-style-bf\">This is a hard version of the problem; it differs from the easy version only by the question. The easy version only needs you to print whether some values are non-zero or not. The hard version needs you to print the exact values.</span></p><p>Alice and Bob are dividing the field. The field is a rectangle of size $$$n \\times m$$$ ($$$2 \\le n, m \\le 10^9$$$); the rows are numbered from $$$1$$$ to $$$n$$$ from top to bottom, and the columns are numbered from $$$1$$$ to $$$m$$$ from left to right. The cell at the intersection of row $$$r$$$ and column $$$c$$$ is denoted as ($$$r, c$$$).</p><p>Bob has $$$k$$$ ($$$2 \\le k \\le 2 \\cdot 10^5$$$) fountains, all of them are located in different cells of the field. Alice is responsible for dividing the field, but she must meet several conditions:</p><ul> <li> To divide the field, Alice will start her path in any free (without a fountain) cell on the left or top side of the field and will move, each time moving to the adjacent cell <span class=\"tex-font-style-bf\">down</span> or <span class=\"tex-font-style-bf\">right</span>. Her path will end on the right or bottom side of the field. </li><li> Alice's path will divide the field into two parts \u2014 one part will belong to Alice (this part includes the cells of her path), the other part \u2014 to Bob. </li><li> Alice will own the part that includes the cell ($$$n, 1$$$). </li><li> Bob will own the part that includes the cell ($$$1, m$$$). </li></ul><p>Alice wants to divide the field in such a way as to get as many cells as possible.</p><p>Bob wants to keep ownership of all the fountains, but he can give one of them to Alice. First, output the integer $$$\\alpha$$$ \u2014 the maximum possible size of Alice's plot, if Bob does not give her any fountain (i.e., all fountains will remain on Bob's plot).</p><p>Then output $$$k$$$ non-negative integers $$$a_1, a_2, \\dots, a_k$$$, where $$$a_i$$$ is a value such that after Bob gives Alice the $$$i$$$-th fountain, the maximum size of her plot will be $$$\\alpha + a_i$$$.</p>",
    "inputSpecification": "<p>The first line contains a single integer $$$t$$$ ($$$1 \\le t \\le 10^4$$$)\u00a0\u2014 the number of test cases.</p><p>The first line of each test case contains three integers $$$n$$$, $$$m$$$, and $$$k$$$ ($$$2 \\le n, m \\le 10^9$$$, $$$2 \\le k \\le 2 \\cdot 10^5$$$)\u00a0\u2014 the field sizes and the number of fountains, respectively.</p><p>Then follow $$$k$$$ lines, each containing two numbers $$$r_i$$$ and $$$c_i$$$ ($$$1 \\le r_i \\le n$$$, $$$1 \\le c_i \\le m$$$)\u00a0\u2014 the coordinates of the cell with the $$$i$$$-th fountain. It is guaranteed that all cells are distinct and none of them is ($$$n, 1$$$).</p><p>It is guaranteed that the sum of $$$k$$$ over all test cases does not exceed $$$2 \\cdot 10^5$$$.</p>",
    "outputSpecification": "<p>For each test case, first output $$$\\alpha$$$\u00a0\u2014 the maximum size of the plot that can belong to Alice if Bob does not give her any of the fountains. Then output $$$k$$$ non-negative integers $$$a_1, a_2, \\dots, a_k$$$, where $$$a_i$$$ is a value such that after Bob gives Alice the $$$i$$$-th fountain, the maximum size of her plot will be $$$\\alpha + a_i$$$.</p>",
    "samples": [
        {
            "input": "\n<div class=\"test-example-line test-example-line-even test-example-line-0\">5</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">2 2 3</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">1 1</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">1 2</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">2 2</div><div class=\"test-example-line test-example-line-even test-example-line-2\">5 5 4</div><div class=\"test-example-line test-example-line-even test-example-line-2\">1 2</div><div class=\"test-example-line test-example-line-even test-example-line-2\">2 2</div><div class=\"test-example-line test-example-line-even test-example-line-2\">3 4</div><div class=\"test-example-line test-example-line-even test-example-line-2\">4 3</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">2 5 9</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">1 2</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">1 5</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">1 1</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">2 2</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">2 4</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">2 5</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">1 4</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">2 3</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">1 3</div><div class=\"test-example-line test-example-line-even test-example-line-4\">6 4 4</div><div class=\"test-example-line test-example-line-even test-example-line-4\">6 2</div><div class=\"test-example-line test-example-line-even test-example-line-4\">1 3</div><div class=\"test-example-line test-example-line-even test-example-line-4\">1 4</div><div class=\"test-example-line test-example-line-even test-example-line-4\">1 2</div><div class=\"test-example-line test-example-line-odd test-example-line-5\">3 4 5</div><div class=\"test-example-line test-example-line-odd test-example-line-5\">2 1</div><div class=\"test-example-line test-example-line-odd test-example-line-5\">3 2</div><div class=\"test-example-line test-example-line-odd test-example-line-5\">1 4</div><div class=\"test-example-line test-example-line-odd test-example-line-5\">1 3</div><div class=\"test-example-line test-example-line-odd test-example-line-5\">2 4</div>",
            "output": "\n1\n1 0 1 \n11\n0 1 0 4 \n1\n0 0 1 1 0 0 0 0 0 \n6\n15 0 0 0 \n1\n2 3 0 0 0 \n"
        }
    ],
    "note": "<p>Below are the images for the second example: </p><center> <img class=\"tex-graphics\" src=\"https://espresso.codeforces.com/bde472d19619eb31ec9b7a164388a7a94839f2fb.png\" style=\"max-width: 100.0%;max-height: 100.0%;\"/> <span class=\"tex-font-size-small\">The indices of the fountains are labeled in green. The cells belonging to Alice are marked in blue.</span> </center><p>Note that if Bob gives Alice fountain $$$1$$$ or fountain $$$3$$$, then that fountain cannot be on Alice's plot.</p>",
    "contestId": 1980,
    "index": "F2",
    "name": "Field Division (hard version)",
    "type": "PROGRAMMING",
    "tags": [
        "math",
        "sortings"
    ],
    "solvedCount": 620
}