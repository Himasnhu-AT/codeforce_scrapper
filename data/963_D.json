{
    "title": "D. Frequency of String",
    "timeLimit": {
        "value": 1.5,
        "unit": "seconds"
    },
    "memoryLimit": {
        "value": 512.0,
        "unit": "megabytes"
    },
    "statement": "<p>You are given a string $$$s$$$. You should answer $$$n$$$ queries. The $$$i$$$-th query consists of integer $$$k_i$$$ and string $$$m_i$$$. The answer for this query is the minimum length of such a string $$$t$$$ that $$$t$$$ is a substring of $$$s$$$ and $$$m_i$$$ has at least $$$k_i$$$ occurrences as a substring in $$$t$$$.</p><p>A substring of a string is a continuous segment of characters of the string.</p><p>It is guaranteed that for any two queries the strings $$$m_i$$$ from these queries are different. </p>",
    "inputSpecification": "<p>The first line contains string $$$s$$$ $$$(1 \\leq \\left | s \\right | \\leq 10^{5})$$$.</p><p>The second line contains an integer $$$n$$$ ($$$1 \\leq n \\leq 10^5$$$).</p><p>Each of next $$$n$$$ lines contains an integer $$$k_i$$$ $$$(1 \\leq k_i \\leq |s|)$$$ and a non-empty string $$$m_i$$$\u00a0\u2014 parameters of the query with number $$$i$$$, in this order.</p><p>All strings in input consists of lowercase English letters. Sum of length of all strings in input doesn't exceed $$$10^5$$$. All $$$m_i$$$ are distinct.</p>",
    "outputSpecification": "<p>For each query output the answer for it in a separate line.</p><p>If a string $$$m_{i}$$$ occurs in $$$s$$$ less that $$$k_{i}$$$ times, output <span class=\"tex-font-style-tt\">-1</span>.</p>",
    "samples": [
        {
            "input": "aaaaa<br/>5<br/>3 a<br/>3 aa<br/>2 aaa<br/>3 aaaa<br/>1 aaaaa<br/>",
            "output": "3<br/>4<br/>4<br/>-1<br/>5<br/>"
        },
        {
            "input": "abbb<br/>7<br/>4 b<br/>1 ab<br/>3 bb<br/>1 abb<br/>2 bbb<br/>1 a<br/>2 abbb<br/>",
            "output": "-1<br/>2<br/>-1<br/>3<br/>-1<br/>1<br/>-1<br/>"
        }
    ],
    "note": null,
    "contestId": 963,
    "index": "D",
    "name": "Frequency of String",
    "type": "PROGRAMMING",
    "tags": [
        "hashing",
        "string suffix structures",
        "strings"
    ],
    "solvedCount": 1836
}