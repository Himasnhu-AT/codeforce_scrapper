{
    "title": "F. Anti-Proxy Attendance",
    "timeLimit": {
        "value": 2.0,
        "unit": "seconds"
    },
    "memoryLimit": {
        "value": 256.0,
        "unit": "megabytes"
    },
    "statement": "<p><span class=\"tex-font-style-it\">This is an interactive problem!</span></p><p>Mr. 1048576 is one of those faculty who hates wasting his time in taking class attendance. Instead of taking attendance the old-fashioned way, he decided to try out something new today.</p><p>There are $$$n$$$ students in his class, having roll numbers $$$1$$$ to $$$n$$$. He knows that <span class=\"tex-font-style-bf\">exactly $$$1$$$ student is absent</span> today. In order to determine who is absent, he can ask some queries to the class. In each query, he can provide two integers $$$l$$$ and $$$r$$$ ($$$1\\leq l\\leq r\\leq n$$$) and all students whose roll numbers are between $$$l$$$ and $$$r$$$ (inclusive) will raise their hands. He then counts them to determine if the roll number of the absent student lies between these values.</p><p>Things seemed fine until his teaching assistant noticed something \u2014 the students are dishonest! Some students whose roll numbers lie in the given range may not raise their hands, while some other students whose roll number does not lie in the given range may raise their hands. But the students don't want to raise much suspicion. So, only the following $$$4$$$ cases are possible for a particular query $$$(l,r)$$$ \u2014 </p><ol> <li> True Positive: $$$r-l+1$$$ students are present and $$$r-l+1$$$ students raised their hands. </li><li> True Negative: $$$r-l$$$ students are present and $$$r-l$$$ students raised their hands. </li><li> False Positive: $$$r-l$$$ students are present but $$$r-l+1$$$ students raised their hands. </li><li> False Negative: $$$r-l+1$$$ students are present but $$$r-l$$$ students raised their hands. </li></ol><p>In the first two cases, the students are said to be answering honestly, while in the last two cases, the students are said to be answering dishonestly. The students can mutually decide upon their strategy, not known to Mr. 1048576. Also, the students do not want to raise any suspicion and at the same time, want to create a lot of confusion. So, their strategy always meets the following two conditions \u2014 </p><ol> <li> The students will never answer honestly $$$3$$$ times in a row. </li><li> The students will never answer dishonestly $$$3$$$ times in a row. </li></ol><p>Mr. 1048576 is frustrated by this act of students. So, he is willing to mark at most $$$2$$$ students as absent (though he knows that only one is). The attendance is said to be successful if the student who is actually absent is among those two. Also, due to limited class time, he can only ask up to $$$\\lceil\\log_{1.116}{n}\\rceil-1$$$ queries (weird numbers but okay). Help him complete a successful attendance.</p>",
    "inputSpecification": null,
    "outputSpecification": null,
    "samples": [
        {
            "input": "\n2\n5\n\n3\n\n2\n\n1\n\n2\n\n0\n\n1\n\n0\n\n2\n\n0\n\n1\n\n6\n\n6\n\n2\n\n2\n\n0\n\n1\n\n1\n\n0\n\n0\n\n0\n\n1\n\n",
            "output": "\n\n\n? 1 4\n\n? 3 5\n\n? 2 2\n\n? 1 3\n\n? 3 3\n\n? 3 3\n\n! 3\n\n? 2 4\n\n? 4 4\n\n! 2\n\n#\n\n? 1 6\n\n? 1 3\n\n? 4 6\n\n? 1 1\n\n? 3 3\n\n? 5 5\n\n! 3\n\n? 2 2\n\n? 4 4\n\n! 4\n\n#\n"
        }
    ],
    "note": "<p>For the first test case, the student with roll number $$$2$$$ is absent and the truth sequence (see section for hacks) is <span class=\"tex-font-style-tt\">TFFTFTTF</span>. During execution of your solution, this test case will use a non-adaptive grader.</p><p>For the second test case, the student with roll number $$$4$$$ is absent, and the truth sequence is <span class=\"tex-font-style-tt\">FFTFTTFT</span>. During the execution of your solution, in this test case your program will interact with an adaptive grader. So, the actual answer might be different depending on your queries but will always remain consistent with the responses to the previous queries.</p>",
    "contestId": 1924,
    "index": "F",
    "name": "Anti-Proxy Attendance",
    "type": "PROGRAMMING",
    "tags": [
        "constructive algorithms",
        "dp",
        "interactive",
        "ternary search"
    ],
    "solvedCount": 134
}