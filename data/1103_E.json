{
    "title": "E. Radix sum",
    "timeLimit": {
        "value": 4.0,
        "unit": "seconds"
    },
    "memoryLimit": {
        "value": 256.0,
        "unit": "megabytes"
    },
    "statement": "<p>Let's define <span class=\"tex-font-style-bf\">radix sum</span> of number $$$a$$$ consisting of digits $$$a_1, \\ldots ,a_k$$$ and number $$$b$$$ consisting of digits $$$b_1, \\ldots ,b_k$$$(we add leading zeroes to the shorter number to match longer length) as number $$$s(a,b)$$$ consisting of digits $$$(a_1+b_1)\\mod 10, \\ldots ,(a_k+b_k)\\mod 10$$$. The <span class=\"tex-font-style-bf\">radix sum</span> of several integers is defined as follows: $$$s(t_1, \\ldots ,t_n)=s(t_1,s(t_2, \\ldots ,t_n))$$$</p><p>You are given an array $$$x_1, \\ldots ,x_n$$$. The task is to compute for each integer $$$i (0 \\le i &lt; n)$$$ number of ways to consequently choose one of the integers from the array $$$n$$$ times, so that the <span class=\"tex-font-style-bf\">radix sum</span> of these integers is equal to $$$i$$$. Calculate these values modulo $$$2^{58}$$$.</p>",
    "inputSpecification": "<p>The first line contains integer $$$n$$$\u00a0\u2014 the length of the array($$$1 \\leq n \\leq 100000$$$).</p><p>The second line contains $$$n$$$ integers $$$x_1, \\ldots x_n$$$\u00a0\u2014 array elements($$$0 \\leq x_i &lt; 100000$$$).</p>",
    "outputSpecification": "<p>Output $$$n$$$ integers $$$y_0, \\ldots, y_{n-1}$$$\u00a0\u2014 $$$y_i$$$ should be equal to corresponding number of ways modulo $$$2^{58}$$$.</p>",
    "samples": [
        {
            "input": "\n2\n5 6\n",
            "output": "\n1\n2\n"
        },
        {
            "input": "\n4\n5 7 5 7\n",
            "output": "\n16\n0\n64\n0\n"
        }
    ],
    "note": "<p>In the first example there exist sequences: sequence $$$(5,5)$$$ with radix sum $$$0$$$, sequence $$$(5,6)$$$ with radix sum $$$1$$$, sequence $$$(6,5)$$$ with radix sum $$$1$$$, sequence $$$(6,6)$$$ with radix sum $$$2$$$.</p>",
    "contestId": 1103,
    "index": "E",
    "name": "Radix sum",
    "type": "PROGRAMMING",
    "tags": [
        "fft",
        "math",
        "number theory"
    ],
    "solvedCount": 222
}