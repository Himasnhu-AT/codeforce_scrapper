{
    "title": "C. Alice and the Cake",
    "timeLimit": {
        "value": 2.0,
        "unit": "seconds"
    },
    "memoryLimit": {
        "value": 256.0,
        "unit": "megabytes"
    },
    "statement": "<p>Alice has a cake, and she is going to cut it. She will perform the following operation $$$n-1$$$ times: choose a piece of the cake (initially, the cake is all one piece) with weight $$$w\\ge 2$$$ and cut it into two smaller pieces of weight $$$\\lfloor\\frac{w}{2}\\rfloor$$$ and $$$\\lceil\\frac{w}{2}\\rceil$$$ ($$$\\lfloor x \\rfloor$$$ and $$$\\lceil x \\rceil$$$ denote <a href=\"https://en.wikipedia.org/wiki/Floor_and_ceiling_functions\">floor and ceiling functions</a>, respectively).</p><p>After cutting the cake in $$$n$$$ pieces, she will line up these $$$n$$$ pieces on a table in an arbitrary order. Let $$$a_i$$$ be the weight of the $$$i$$$-th piece in the line.</p><p>You are given the array $$$a$$$. Determine whether there exists an initial weight and sequence of operations which results in $$$a$$$.</p>",
    "inputSpecification": "<p>The first line contains a single integer $$$t$$$ ($$$1 \\le t \\le 10^4$$$) \u2014 the number of test cases.</p><p>The first line of each test case contains a single integer $$$n$$$ ($$$1 \\le n \\le 2 \\cdot 10^5$$$).</p><p>The second line of each test case contains $$$n$$$ integers $$$a_1, a_2, \\ldots, a_n$$$ ($$$1 \\le a_i \\le 10^9$$$).</p><p>It is guaranteed that the sum of $$$n$$$ for all test cases does not exceed $$$2 \\cdot 10^5$$$.</p>",
    "outputSpecification": "<p>For each test case, print a single line: print <span class=\"tex-font-style-tt\">YES</span> if the array $$$a$$$ could have resulted from Alice's operations, otherwise print <span class=\"tex-font-style-tt\">NO</span>.</p><p>You may print each letter in any case (for example, <span class=\"tex-font-style-tt\">YES</span>, <span class=\"tex-font-style-tt\">Yes</span>, <span class=\"tex-font-style-tt\">yes</span>, <span class=\"tex-font-style-tt\">yEs</span> will all be recognized as positive answer).</p>",
    "samples": [
        {
            "input": "\n<div class=\"test-example-line test-example-line-even test-example-line-0\">14</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">1</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">327</div><div class=\"test-example-line test-example-line-even test-example-line-2\">2</div><div class=\"test-example-line test-example-line-even test-example-line-2\">869 541</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">2</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">985214736 985214737</div><div class=\"test-example-line test-example-line-even test-example-line-4\">3</div><div class=\"test-example-line test-example-line-even test-example-line-4\">2 3 1</div><div class=\"test-example-line test-example-line-odd test-example-line-5\">3</div><div class=\"test-example-line test-example-line-odd test-example-line-5\">2 3 3</div><div class=\"test-example-line test-example-line-even test-example-line-6\">6</div><div class=\"test-example-line test-example-line-even test-example-line-6\">1 1 1 1 1 1</div><div class=\"test-example-line test-example-line-odd test-example-line-7\">6</div><div class=\"test-example-line test-example-line-odd test-example-line-7\">100 100 100 100 100 100</div><div class=\"test-example-line test-example-line-even test-example-line-8\">8</div><div class=\"test-example-line test-example-line-even test-example-line-8\">100 100 100 100 100 100 100 100</div><div class=\"test-example-line test-example-line-odd test-example-line-9\">8</div><div class=\"test-example-line test-example-line-odd test-example-line-9\">2 16 1 8 64 1 4 32</div><div class=\"test-example-line test-example-line-even test-example-line-10\">10</div><div class=\"test-example-line test-example-line-even test-example-line-10\">1 2 4 7 1 1 1 1 7 2</div><div class=\"test-example-line test-example-line-odd test-example-line-11\">10</div><div class=\"test-example-line test-example-line-odd test-example-line-11\">7 1 1 1 3 1 3 3 2 3</div><div class=\"test-example-line test-example-line-even test-example-line-12\">10</div><div class=\"test-example-line test-example-line-even test-example-line-12\">1 4 4 1 1 1 3 3 3 1</div><div class=\"test-example-line test-example-line-odd test-example-line-13\">10</div><div class=\"test-example-line test-example-line-odd test-example-line-13\">2 3 2 2 1 2 2 2 2 2</div><div class=\"test-example-line test-example-line-even test-example-line-14\">4</div><div class=\"test-example-line test-example-line-even test-example-line-14\">999999999 999999999 999999999 999999999</div>",
            "output": "\nYES\nNO\nYES\nYES\nNO\nYES\nNO\nYES\nYES\nYES\nYES\nNO\nNO\nYES\n"
        }
    ],
    "note": "<p>In the first test case, it's possible to get the array $$$a$$$ by performing $$$0$$$ operations on a cake with weight $$$327$$$.</p><p>In the second test case, it's not possible to get the array $$$a$$$.</p><p>In the third test case, it's possible to get the array $$$a$$$ by performing $$$1$$$ operation on a cake with weight $$$1\\,970\\,429\\,473$$$: </p><ul> <li> Cut it in half, so that the weights are $$$[985\\,214\\,736, 985\\,214\\,737]$$$. </li></ul> Note that the starting weight can be greater than $$$10^9$$$.<p>In the fourth test case, it's possible to get the array $$$a$$$ by performing $$$2$$$ operations on a cake with weight $$$6$$$:</p><ul> <li> Cut it in half, so that the weights are $$$[3,3]$$$. </li><li> Cut one of the two pieces with weight $$$3$$$, so that the new weights are $$$[1, 2, 3]$$$ which is equivalent to $$$[2, 3, 1]$$$ up to reordering.</li></ul>",
    "contestId": 1654,
    "index": "C",
    "name": "Alice and the Cake",
    "type": "PROGRAMMING",
    "tags": [
        "data structures",
        "greedy",
        "implementation",
        "sortings"
    ],
    "solvedCount": 13236
}