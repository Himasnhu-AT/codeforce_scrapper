{
    "title": "E. Tree Constructing",
    "timeLimit": {
        "value": 4.0,
        "unit": "seconds"
    },
    "memoryLimit": {
        "value": 256.0,
        "unit": "megabytes"
    },
    "statement": "<p>You are given three integers $$$n$$$, $$$d$$$ and $$$k$$$.</p><p>Your task is to construct an undirected tree on $$$n$$$ vertices with diameter $$$d$$$ and degree of each vertex at most $$$k$$$, or say that it is impossible.</p><p>An undirected tree is a connected undirected graph with $$$n - 1$$$ edges.</p><p>Diameter of a tree is the maximum length of a simple path (a path in which each vertex appears at most once) between all pairs of vertices of this tree.</p><p>Degree of a vertex is the number of edges incident to this vertex (i.e. for a vertex $$$u$$$ it is the number of edges $$$(u, v)$$$ that belong to the tree, where $$$v$$$ is any other vertex of a tree).</p>",
    "inputSpecification": "<p>The first line of the input contains three integers $$$n$$$, $$$d$$$ and $$$k$$$ ($$$1 \\le n, d, k \\le 4 \\cdot 10^5$$$).</p>",
    "outputSpecification": "<p>If there is no tree satisfying the conditions above, print only one word \"<span class=\"tex-font-style-tt\">NO</span>\" (without quotes).</p><p>Otherwise in the first line print \"<span class=\"tex-font-style-tt\">YES</span>\" (without quotes), and then print $$$n - 1$$$ lines describing edges of a tree satisfying the conditions above. Vertices of the tree must be numbered from $$$1$$$ to $$$n$$$. You can print edges and vertices connected by an edge in any order. If there are multiple answers, print any of them.1</p>",
    "samples": [
        {
            "input": "6 3 3<br/>",
            "output": "YES<br/>3 1<br/>4 1<br/>1 2<br/>5 2<br/>2 6<br/>"
        },
        {
            "input": "6 2 3<br/>",
            "output": "NO<br/>"
        },
        {
            "input": "10 4 3<br/>",
            "output": "YES<br/>2 9<br/>2 10<br/>10 3<br/>3 1<br/>6 10<br/>8 2<br/>4 3<br/>5 6<br/>6 7<br/>"
        },
        {
            "input": "8 5 3<br/>",
            "output": "YES<br/>2 5<br/>7 2<br/>3 7<br/>3 1<br/>1 6<br/>8 7<br/>4 3<br/>"
        }
    ],
    "note": null,
    "contestId": 1003,
    "index": "E",
    "name": "Tree Constructing",
    "type": "PROGRAMMING",
    "tags": [
        "constructive algorithms",
        "graphs"
    ],
    "solvedCount": 2509
}