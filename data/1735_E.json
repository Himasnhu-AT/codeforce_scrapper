{
    "title": "E. House Planning",
    "timeLimit": {
        "value": 3.0,
        "unit": "seconds"
    },
    "memoryLimit": {
        "value": 256.0,
        "unit": "megabytes"
    },
    "statement": "<p>There are $$$n$$$ houses in your city arranged on an axis at points $$$h_1, h_2, \\ldots, h_n$$$. You want to build a new house for yourself and consider two options where to place it: points $$$p_1$$$ and $$$p_2$$$.</p><p>As you like visiting friends, you have calculated in advance the distances from both options to all existing houses. More formally, you have calculated two arrays $$$d_1$$$, $$$d_2$$$: $$$d_{i, j} = \\left|p_i - h_j\\right|$$$, where $$$|x|$$$ defines the absolute value of $$$x$$$.</p><p>After a long time of inactivity you have forgotten the locations of the houses $$$h$$$ and the options $$$p_1$$$, $$$p_2$$$. But your diary still keeps two arrays \u2014 $$$d_1$$$, $$$d_2$$$, whose authenticity you doubt. Also, the values inside each array could be <span class=\"tex-font-style-bf\">shuffled</span>, so values at the same positions of $$$d_1$$$ and $$$d_2$$$ may correspond to different houses. Pay attention, that values from one array could not get to another, in other words, all values in the array $$$d_1$$$ correspond the distances from $$$p_1$$$ to the houses, and in the array $$$d_2$$$ \u00a0\u2014 from $$$p_2$$$ to the houses.</p><p>Also pay attention, that the locations of the houses $$$h_i$$$ and the considered options $$$p_j$$$ could match. For example, the next locations are correct: $$$h = \\{1, 0, 3, 3\\}$$$, $$$p = \\{1, 1\\}$$$, that could correspond to already shuffled $$$d_1 = \\{0, 2, 1, 2\\}$$$, $$$d_2 = \\{2, 2, 1, 0\\}$$$.</p><p>Check whether there are locations of houses $$$h$$$ and considered points $$$p_1$$$, $$$p_2$$$, for which the founded arrays of distances would be correct. If it is possible, find appropriate locations of houses and considered options. </p>",
    "inputSpecification": "<p>The first line of the input contains a single integer $$$t$$$ ($$$1 \\le t \\le 10^3$$$) \u2014 the number of test cases. The description of test cases follows.</p><p>The first line of each test case contains one integer $$$n$$$ ($$$1 \\le n \\le 10^3$$$) \u2014 the length of arrays $$$d_1$$$, $$$d_2$$$.</p><p>The next two lines contain $$$n$$$ integers each: arrays $$$d_1$$$ and $$$d_2$$$ ($$$0 \\le d_{i, j} \\le 10^9$$$) respectively.</p><p>It is guaranteed that the sum of $$$n$$$ over all test cases doesn't exceed $$$2 \\cdot 10^3$$$.</p>",
    "outputSpecification": "<p>For each test case, output a single line \"<span class=\"tex-font-style-tt\">NO</span>\" if there is no answer.</p><p>Otherwise output three lines. The first line must contain \"<span class=\"tex-font-style-tt\">YES</span>\". In the second line, print $$$n$$$ integers $$$h_1, h_2, \\ldots, h_n$$$. In the third line print two integers $$$p_1$$$, $$$p_2$$$.</p><p>It must be satisfied that $$$0 \\le h_i, p_1, p_2 \\le 2 \\cdot 10^9$$$. We can show that if there is an answer, then there is one satisfying these constraints.</p><p>If there are several answers, output any of them.</p>",
    "samples": [
        {
            "input": "\n<div class=\"test-example-line test-example-line-even test-example-line-0\">4</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">1</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">5</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">5</div><div class=\"test-example-line test-example-line-even test-example-line-2\">2</div><div class=\"test-example-line test-example-line-even test-example-line-2\">10 12</div><div class=\"test-example-line test-example-line-even test-example-line-2\">5 20</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">2</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">10 33</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">26 69</div><div class=\"test-example-line test-example-line-even test-example-line-4\">4</div><div class=\"test-example-line test-example-line-even test-example-line-4\">0 2 1 2</div><div class=\"test-example-line test-example-line-even test-example-line-4\">2 2 1 0</div>",
            "output": "\nYES\n5 \n0 10\nNO\nYES\n0 43 \n33 69\nYES\n1 0 3 3\n1 1"
        }
    ],
    "note": "<p>In the image below you can see the sample solutions. Planned houses are shown in bright colours: pink and purple. Existing houses are dim. </p><p>In test case $$$1$$$, the first planned house is located at point $$$0$$$, the second at point $$$10$$$. The existing house is located at point $$$5$$$ and is at a distance of $$$5$$$ from both planned houses. </p><center> <img class=\"tex-graphics\" src=\"https://espresso.codeforces.com/6b5a8d5eb077333ca1aec3cfbcacb09c9d2ffff8.png\" style=\"max-width: 100.0%;max-height: 100.0%;\" width=\"832px\"/> </center><p>It can be shown that there is no answer for test case $$$2$$$. </p><center> <img class=\"tex-graphics\" src=\"https://espresso.codeforces.com/fa6f14d7f502445019ddbf41c4dc83c9b09b6b9e.png\" style=\"max-width: 100.0%;max-height: 100.0%;\" width=\"832px\"/> </center><p>In test case $$$3$$$, the planned houses are located at points $$$33$$$ and $$$69$$$. </p><center> <img class=\"tex-graphics\" src=\"https://espresso.codeforces.com/fd759b648d8db9e4ecfc980b69b7a878d1d5115a.png\" style=\"max-width: 100.0%;max-height: 100.0%;\" width=\"832px\"/> </center><p>Note that in test case $$$4$$$, both plans are located at point $$$1$$$, where one of the existing houses is located at the same time. It is a correct placement. </p><center> <img class=\"tex-graphics\" src=\"https://espresso.codeforces.com/3e1093c29b1b4c83e02c0f6f39e52b27fe62e9f8.png\" style=\"max-width: 100.0%;max-height: 100.0%;\" width=\"832px\"/> </center>",
    "contestId": 1735,
    "index": "E",
    "name": "House Planning",
    "type": "PROGRAMMING",
    "tags": [
        "constructive algorithms",
        "data structures",
        "graph matchings",
        "greedy"
    ],
    "solvedCount": 1027
}