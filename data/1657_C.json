{
    "title": "C. Bracket Sequence Deletion",
    "timeLimit": {
        "value": 2.0,
        "unit": "seconds"
    },
    "memoryLimit": {
        "value": 256.0,
        "unit": "megabytes"
    },
    "statement": "<p>You are given a bracket sequence consisting of $$$n$$$ characters '<span class=\"tex-font-style-tt\">(</span>' and/or <span class=\"tex-font-style-tt\">)</span>'. You perform several operations with it.</p><p>During one operation, you choose the <span class=\"tex-font-style-bf\">shortest</span> prefix of this string (some amount of first characters of the string) that is <span class=\"tex-font-style-bf\">good</span> and remove it from the string.</p><p>The prefix is considered <span class=\"tex-font-style-bf\">good</span> if one of the following two conditions is satisfied:</p><ul> <li> this prefix is a regular bracket sequence; </li><li> this prefix is a palindrome of length <span class=\"tex-font-style-bf\">at least two</span>. </li></ul><p>A bracket sequence is called regular if it is possible to obtain a correct arithmetic expression by inserting characters '<span class=\"tex-font-style-tt\">+</span>' and '<span class=\"tex-font-style-tt\">1</span>' into this sequence. For example, sequences <span class=\"tex-font-style-tt\">(())()</span>, <span class=\"tex-font-style-tt\">()</span> and <span class=\"tex-font-style-tt\">(()(()))</span> are regular, while <span class=\"tex-font-style-tt\">)(</span>, <span class=\"tex-font-style-tt\">(()</span> and <span class=\"tex-font-style-tt\">(()))(</span> are not.</p><p>The bracket sequence is called palindrome if it reads the same back and forth. For example, the bracket sequences <span class=\"tex-font-style-tt\">))</span>, <span class=\"tex-font-style-tt\">((</span> and <span class=\"tex-font-style-tt\">)(()</span> are palindromes, while bracket sequences <span class=\"tex-font-style-tt\">()</span>, <span class=\"tex-font-style-tt\">)(</span> and <span class=\"tex-font-style-tt\">))(</span> are not palindromes.</p><p>You stop performing the operations when it's not possible to find a <span class=\"tex-font-style-bf\">good</span> prefix. Your task is to find the number of operations you will perform on the given string and the number of remaining characters in the string.</p><p>You have to answer $$$t$$$ independent test cases.</p>",
    "inputSpecification": "<p>The first line of the input contains one integer $$$t$$$ ($$$1 \\le t \\le 10^4$$$) \u2014 the number of test cases. The next $$$2t$$$ lines describe test cases.</p><p>The first line of the test case contains one integer $$$n$$$ ($$$1 \\le n \\le 5 \\cdot 10^5$$$) \u2014 the length of the bracket sequence.</p><p>The second line of the test case contains $$$n$$$ characters '<span class=\"tex-font-style-tt\">(</span>' and/or '<span class=\"tex-font-style-tt\">)</span>' \u2014 the bracket sequence itself.</p><p>It is guaranteed that the sum of $$$n$$$ over all test cases do not exceed $$$5 \\cdot 10^5$$$ ($$$\\sum n \\le 5 \\cdot 10^5$$$).</p>",
    "outputSpecification": "<p>For each test case, print two integers $$$c$$$ and $$$r$$$ \u2014 the number of operations you will perform on the given bracket sequence and the number of characters that remain in the string after performing all operations.</p>",
    "samples": [
        {
            "input": "\n<div class=\"test-example-line test-example-line-even test-example-line-0\">5</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">2</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">()</div><div class=\"test-example-line test-example-line-even test-example-line-2\">3</div><div class=\"test-example-line test-example-line-even test-example-line-2\">())</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">4</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">((((</div><div class=\"test-example-line test-example-line-even test-example-line-4\">5</div><div class=\"test-example-line test-example-line-even test-example-line-4\">)((()</div><div class=\"test-example-line test-example-line-odd test-example-line-5\">6</div><div class=\"test-example-line test-example-line-odd test-example-line-5\">)((()(</div>",
            "output": "\n1 0\n1 1\n2 0\n1 0\n1 1\n"
        }
    ],
    "note": null,
    "contestId": 1657,
    "index": "C",
    "name": "Bracket Sequence Deletion",
    "type": "PROGRAMMING",
    "tags": [
        "greedy",
        "implementation"
    ],
    "solvedCount": 16589
}