{
    "title": "A. Recent Actions",
    "timeLimit": {
        "value": 1.0,
        "unit": "second"
    },
    "memoryLimit": {
        "value": 256.0,
        "unit": "megabytes"
    },
    "statement": "<p>On Codeforces the \"Recent Actions\" field shows the last $$$n$$$ posts with recent actions.</p><p>Initially, there are posts $$$1, 2, \\ldots, n$$$ in the field (this is in order from top to down). Also there are infinitely many posts not in the field, numbered with integers $$$n + 1, n + 2, \\ldots$$$.</p><p>When recent action happens in the post $$$p$$$:</p><ul> <li> If it is in the \"Recent Actions\" field, it moves from its position to the top position. </li><li> Otherwise, it is added to the top position, and the post on the down position is removed from the \"Recent Actions\" field. </li></ul><p>You know, that the next $$$m$$$ recent actions will happen in the posts $$$p_1, p_2, \\ldots, p_m$$$ ($$$n + 1 \\leq p_i \\leq n + m$$$) in the moments of time $$$1, 2, \\ldots, m$$$. <span class=\"tex-font-style-bf\">Note</span>, that recent actions only happen with posts with numbers $$$\\geq n + 1$$$.</p><p>For each post $$$i$$$ ($$$1 \\leq i \\leq n$$$), find the first time it will be removed from the \"Recent Actions\" field or say, that it won't be removed.</p>",
    "inputSpecification": "<p>The first line contains a single integer $$$t$$$ ($$$1 \\leq t \\leq 10^4$$$) \u2014 the number of test cases. Descriptions of test cases follow.</p><p>The first line of each test case contains two integers $$$n$$$, $$$m$$$ ($$$1 \\leq n, m \\leq 5 \\cdot 10^4$$$) \u2014 the size of the \"Recent Actions\" field and the number of actions.</p><p>The next line contains $$$m$$$ integers $$$p_1, p_2, \\ldots, p_m$$$ ($$$n + 1 \\leq p_i \\leq n + m$$$).</p><p>It is guaranteed, that the sum of $$$n$$$ and the sum of $$$m$$$ for all test cases does not exceed $$$5 \\cdot 10^4$$$.</p>",
    "outputSpecification": "<p>For each test case print $$$n$$$ integers $$$t_1, t_2, \\ldots, t_n$$$, where $$$t_i=-1$$$ if the post $$$i$$$ won't be removed or $$$t_i$$$ equals to the first moment of time the post $$$i$$$ will be removed ($$$1 \\leq t_i \\leq m$$$).</p>",
    "samples": [
        {
            "input": "\n<div class=\"test-example-line test-example-line-even test-example-line-0\">10</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">1 1</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">2</div><div class=\"test-example-line test-example-line-even test-example-line-2\">3 2</div><div class=\"test-example-line test-example-line-even test-example-line-2\">5 4</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">4 5</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">5 9 9 5 7</div><div class=\"test-example-line test-example-line-even test-example-line-4\">5 5</div><div class=\"test-example-line test-example-line-even test-example-line-4\">6 7 8 9 10</div><div class=\"test-example-line test-example-line-odd test-example-line-5\">3 4</div><div class=\"test-example-line test-example-line-odd test-example-line-5\">4 4 4 4</div><div class=\"test-example-line test-example-line-even test-example-line-6\">4 4</div><div class=\"test-example-line test-example-line-even test-example-line-6\">5 5 6 6</div><div class=\"test-example-line test-example-line-odd test-example-line-7\">3 5</div><div class=\"test-example-line test-example-line-odd test-example-line-7\">4 5 5 5 4</div><div class=\"test-example-line test-example-line-even test-example-line-8\">4 20</div><div class=\"test-example-line test-example-line-even test-example-line-8\">5 5 24 24 24 5 6 7 8 9 10 12 13 14 15 16 17 18 19 20</div><div class=\"test-example-line test-example-line-odd test-example-line-9\">5 7</div><div class=\"test-example-line test-example-line-odd test-example-line-9\">7 8 7 11 7 12 10</div><div class=\"test-example-line test-example-line-even test-example-line-10\">6 7</div><div class=\"test-example-line test-example-line-even test-example-line-10\">8 11 7 8 8 8 12</div>",
            "output": "\n1 \n-1 2 1 \n-1 5 2 1 \n5 4 3 2 1 \n-1 -1 1 \n-1 -1 3 1 \n-1 2 1 \n8 7 3 1 \n7 6 4 2 1 \n-1 -1 7 3 2 1 \n"
        }
    ],
    "note": "<p>In the first test case, the only post $$$1$$$ will be removed at the moment $$$1$$$ and replaced by the post $$$2$$$.</p><p>In the second test case the \"Recent Actions\" field will be (given an order from top to down):</p><ol> <li> Before moment $$$1$$$: $$$[1, 2, 3]$$$, after moment $$$1$$$: $$$[5, 1, 2]$$$. Post number $$$3$$$ was removed. </li><li> Before moment $$$2$$$: $$$[5, 1, 2]$$$, after moment $$$2$$$: $$$[4, 5, 1]$$$. Post number $$$2$$$ was removed. </li></ol><p>Post number $$$1$$$ won't be removed.</p><p>In the third test case the \"Recent Actions\" field will be (given an order from top to down):</p><ol> <li> Before moment $$$1$$$: $$$[1, 2, 3, 4]$$$, after moment $$$1$$$: $$$[5, 1, 2, 3]$$$. Post number $$$4$$$ was removed. </li><li> Before moment $$$2$$$: $$$[5, 1, 2, 3]$$$, after moment $$$2$$$: $$$[9, 5, 1, 2]$$$. Post number $$$3$$$ was removed. </li><li> Before moment $$$3$$$: $$$[9, 5, 1, 2]$$$, after moment $$$3$$$: $$$[9, 5, 1, 2]$$$. Nothing was changed. </li><li> Before moment $$$4$$$: $$$[9, 5, 1, 2]$$$, after moment $$$4$$$: $$$[5, 9, 1, 2]$$$. The order was changed. </li><li> Before moment $$$5$$$: $$$[5, 9, 1, 2]$$$, after moment $$$5$$$: $$$[7, 5, 9, 1]$$$. Post number $$$2$$$ was removed. </li></ol><p>Post number $$$1$$$ won't be removed.</p>",
    "contestId": 1799,
    "index": "A",
    "name": "Recent Actions",
    "type": "PROGRAMMING",
    "tags": [
        "data structures",
        "greedy",
        "implementation",
        "math"
    ],
    "solvedCount": 11411
}