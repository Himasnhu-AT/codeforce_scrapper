{
    "title": "G. The Great Equalizer",
    "timeLimit": {
        "value": 4.0,
        "unit": "seconds"
    },
    "memoryLimit": {
        "value": 256.0,
        "unit": "megabytes"
    },
    "statement": "<p>Tema bought an old device with a small screen and a worn-out inscription \"The Great Equalizer\" on the side.</p><p>The seller said that the device needs to be given an array $$$a$$$ of integers as input, after which \"The Great Equalizer\" will work as follows: </p><ol> <li> Sort the current array in non-decreasing order and remove duplicate elements leaving only one occurrence of each element. </li><li> If the current length of the array is equal to $$$1$$$, the device stops working and outputs the single number in the array\u00a0\u2014 output value of the device. </li><li> Add an arithmetic progression {$$$n,\\ n - 1,\\ n - 2,\\ \\ldots,\\ 1$$$} to the current array, where $$$n$$$ is the length of the current array. In other words, $$$n - i$$$ is added to the $$$i$$$-th element of the array, when indexed from zero. </li><li> Go to the first step. </li></ol><p>To test the operation of the device, Tema came up with a certain array of integers $$$a$$$, and then wanted to perform $$$q$$$ operations on the array $$$a$$$ of the following type: </p><ol> <li> Assign the value $$$x$$$ ($$$1 \\le x \\le 10^9$$$) to the element $$$a_i$$$ ($$$1 \\le i \\le n$$$). </li><li> Give the array $$$a$$$ as input to the device and find out the result of the device's operation, <span class=\"tex-font-style-bf\">while the array $$$a$$$ remains unchanged during the operation of the device</span>. </li></ol><p>Help Tema find out the output values of the device after each operation.</p>",
    "inputSpecification": "<p>The first line of the input contains a single integer $$$t$$$ ($$$1 \\le t \\le 10^4$$$)\u00a0\u2014 the number of test cases.</p><p>Then follows the description of each test case.</p><p>The first line of each test case contains a single integer $$$n$$$ ($$$1 \\le n \\le 2 \\cdot 10^5$$$)\u00a0\u2014 the size of the array $$$a$$$ that Tema initially came up with.</p><p>The second line of each test case contains $$$n$$$ integers $$$a_1, a_2, a_3, \\ldots, a_n$$$ ($$$1 \\le a_i \\le 10^9$$$)\u00a0\u2014 the elements of the array $$$a$$$.</p><p>The third line of a set contains a single integer $$$q$$$ ($$$1 \\le q \\le 2 \\cdot 10^5$$$)\u00a0\u2014 the number of operations.</p><p>Each of the next $$$q$$$ lines of a test case contains two integers $$$i$$$ ($$$1 \\le i \\le n$$$) and $$$x$$$ ($$$1 \\le x \\le 10^9$$$) - the descriptions of the operations.</p><p>It is guaranteed that the sum of the values of $$$n$$$ and the sum of the values of $$$q$$$ for all test cases do not exceed $$$2 \\cdot 10^5$$$.</p>",
    "outputSpecification": "<p>For each test case, output $$$q$$$ integers\u00a0\u2014 the output values of the device after each operation.</p>",
    "samples": [
        {
            "input": "\n<div class=\"test-example-line test-example-line-even test-example-line-0\">4</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">3</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">2 4 8</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">3</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">1 6</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">2 10</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">3 1</div><div class=\"test-example-line test-example-line-even test-example-line-2\">5</div><div class=\"test-example-line test-example-line-even test-example-line-2\">1 2 2 2 2</div><div class=\"test-example-line test-example-line-even test-example-line-2\">1</div><div class=\"test-example-line test-example-line-even test-example-line-2\">5 3</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">2</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">5 6</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">7</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">1 2</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">1 7</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">1 7</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">2 5</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">1 2</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">2 7</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">2 2</div><div class=\"test-example-line test-example-line-even test-example-line-4\">5</div><div class=\"test-example-line test-example-line-even test-example-line-4\">2 5 1 10 6</div><div class=\"test-example-line test-example-line-even test-example-line-4\">10</div><div class=\"test-example-line test-example-line-even test-example-line-4\">1 7</div><div class=\"test-example-line test-example-line-even test-example-line-4\">4 8</div><div class=\"test-example-line test-example-line-even test-example-line-4\">2 5</div><div class=\"test-example-line test-example-line-even test-example-line-4\">1 4</div><div class=\"test-example-line test-example-line-even test-example-line-4\">2 8</div><div class=\"test-example-line test-example-line-even test-example-line-4\">3 4</div><div class=\"test-example-line test-example-line-even test-example-line-4\">1 9</div><div class=\"test-example-line test-example-line-even test-example-line-4\">3 7</div><div class=\"test-example-line test-example-line-even test-example-line-4\">3 4</div><div class=\"test-example-line test-example-line-even test-example-line-4\">3 1</div>",
            "output": "\n10 12 15 \n4 \n10 8 8 9 8 12 2 \n14 12 12 11 11 10 11 10 11 14 \n"
        }
    ],
    "note": "<p>Let's consider the first example of the input.</p><p>Initially, the array of numbers given as input to the device will be $$$[6, 4, 8]$$$. It will change as follows: $$$$$$[6, 4, 8] \\rightarrow [4, 6, 8] \\rightarrow [7, 8, 9] \\rightarrow [10, 10, 10] \\rightarrow [10]$$$$$$</p><p>Then, the array of numbers given as input to the device will be $$$[6, 10, 8]$$$. It will change as follows: $$$$$$[6, 10, 8] \\rightarrow [6, 8, 10] \\rightarrow [9, 10, 11] \\rightarrow [12, 12, 12] \\rightarrow [12]$$$$$$</p><p>The last array of numbers given as input to the device will be $$$[6, 10, 1]$$$. It will change as follows: $$$$$$[6, 10, 1] \\rightarrow [1, 6, 10] \\rightarrow [4, 8, 11] \\rightarrow [7, 10, 12] \\rightarrow [10, 12, 13] \\rightarrow [13, 14, 14] \\rightarrow [13, 14] \\rightarrow [15, 15] \\rightarrow [15]$$$$$$</p>",
    "contestId": 1862,
    "index": "G",
    "name": "The Great Equalizer",
    "type": "PROGRAMMING",
    "tags": [
        "binary search",
        "data structures",
        "math",
        "sortings"
    ],
    "solvedCount": 2705
}