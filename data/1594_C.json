{
    "title": "C. Make Them Equal",
    "timeLimit": {
        "value": 2.0,
        "unit": "seconds"
    },
    "memoryLimit": {
        "value": 256.0,
        "unit": "megabytes"
    },
    "statement": "<p>Theofanis has a string $$$s_1 s_2 \\dots s_n$$$ and a character $$$c$$$. He wants to make all characters of the string equal to $$$c$$$ using the minimum number of operations.</p><p>In one operation he can choose a number $$$x$$$ ($$$1 \\le x \\le n$$$) and <span class=\"tex-font-style-bf\">for every position $$$i$$$</span>, where $$$i$$$ is <span class=\"tex-font-style-bf\">not</span> divisible by $$$x$$$, replace $$$s_i$$$ with $$$c$$$. </p><p>Find the minimum number of operations required to make all the characters equal to $$$c$$$ and the $$$x$$$-s that he should use in his operations.</p>",
    "inputSpecification": "<p>The first line contains a single integer $$$t$$$ ($$$1 \\le t \\le 10^4$$$)\u00a0\u2014 the number of test cases.</p><p>The first line of each test case contains the integer $$$n$$$ ($$$3 \\le n \\le 3 \\cdot 10^5$$$) and a lowercase Latin letter $$$c$$$\u00a0\u2014 the length of the string $$$s$$$ and the character the resulting string should consist of.</p><p>The second line of each test case contains a string $$$s$$$ of lowercase Latin letters\u00a0\u2014 the initial string.</p><p>It is guaranteed that the sum of $$$n$$$ over all test cases does not exceed $$$3 \\cdot 10^5$$$.</p>",
    "outputSpecification": "<p>For each test case, firstly print one integer $$$m$$$\u00a0\u2014 the minimum number of operations required to make all the characters equal to $$$c$$$.</p><p>Next, print $$$m$$$ integers $$$x_1, x_2, \\dots, x_m$$$ ($$$1 \\le x_j \\le n$$$)\u00a0\u2014 the $$$x$$$-s that should be used in the order they are given.</p><p>It can be proved that under given constraints, an answer always exists. If there are multiple answers, print any.</p>",
    "samples": [
        {
            "input": "\n3\n4 a\naaaa\n4 a\nbaaa\n4 b\nbzyx\n",
            "output": "\n0\n1\n2\n2 \n2 3\n"
        }
    ],
    "note": "<p>Let's describe what happens in the third test case: </p><ol> <li> $$$x_1 = 2$$$: we choose all positions that are not divisible by $$$2$$$ and replace them, i.\u00a0e. <span class=\"tex-font-style-tt\"><span class=\"tex-font-style-underline\">b</span>z<span class=\"tex-font-style-underline\">y</span>x</span> $$$\\rightarrow$$$ <span class=\"tex-font-style-tt\">bzbx</span>; </li><li> $$$x_2 = 3$$$: we choose all positions that are not divisible by $$$3$$$ and replace them, i.\u00a0e. <span class=\"tex-font-style-tt\"><span class=\"tex-font-style-underline\">bz</span>b<span class=\"tex-font-style-underline\">x</span></span> $$$\\rightarrow$$$ <span class=\"tex-font-style-tt\">bbbb</span>. </li></ol>",
    "contestId": 1594,
    "index": "C",
    "name": "Make Them Equal",
    "type": "PROGRAMMING",
    "tags": [
        "brute force",
        "greedy",
        "math",
        "strings"
    ],
    "solvedCount": 18267
}