{
    "title": "F. Sum of Progression",
    "timeLimit": {
        "value": 2.0,
        "unit": "seconds"
    },
    "memoryLimit": {
        "value": 1024.0,
        "unit": "megabytes"
    },
    "statement": "<p>You are given an array $$$a$$$ of $$$n$$$ numbers. There are also $$$q$$$ queries of the form $$$s, d, k$$$.</p><p>For each query $$$q$$$, find the sum of elements $$$a_s + a_{s+d} \\cdot 2 + \\dots + a_{s + d \\cdot (k - 1)} \\cdot k$$$. In other words, for each query, it is necessary to find the sum of $$$k$$$ elements of the array with indices starting from the $$$s$$$-th, taking steps of size $$$d$$$, multiplying it by the serial number of the element in the resulting sequence.</p>",
    "inputSpecification": "<p>Each test consists of several testcases. The first line contains one integer $$$t$$$ ($$$1 \\le t \\le 10^4$$$) \u2014 the number of testcases. Next lines contain descriptions of testcases.</p><p>The first line of each testcase contains two numbers $$$n, q$$$ ($$$1 \\le n \\le 10^5, 1 \\le q \\le 2 \\cdot 10^5$$$) \u2014 the number of elements in the array $$$a$$$ and the number of queries.</p><p>The second line contains $$$n$$$ integers $$$a_1, ... a_n$$$ ($$$-10^8 \\le a_1, ..., a_n \\le 10^8$$$) \u2014 elements of the array $$$a$$$.</p><p>The next $$$q$$$ lines each contain three integers $$$s$$$, $$$d$$$, and $$$k$$$ ($$$1 \\le s, d, k \\le n$$$, $$$s + d\\cdot (k - 1) \\le n$$$ ).</p><p>It is guaranteed that the sum of $$$n$$$ over all testcases does not exceed $$$10^5$$$, and that the sum of $$$q$$$ over all testcases does not exceed $$$2 \\cdot 10^5 $$$.</p>",
    "outputSpecification": "<p>For each testcase, print $$$q$$$ numbers in a separate line \u2014 the desired sums, separated with space.</p>",
    "samples": [
        {
            "input": "\n<div class=\"test-example-line test-example-line-even test-example-line-0\">5</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">3 3</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">1 1 2</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">1 2 2</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">2 2 1</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">1 1 2</div><div class=\"test-example-line test-example-line-even test-example-line-2\">3 1</div><div class=\"test-example-line test-example-line-even test-example-line-2\">-100000000 -100000000 -100000000</div><div class=\"test-example-line test-example-line-even test-example-line-2\">1 1 3</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">5 3</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">1 2 3 4 5</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">1 2 3</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">2 3 2</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">1 1 5</div><div class=\"test-example-line test-example-line-even test-example-line-4\">3 1</div><div class=\"test-example-line test-example-line-even test-example-line-4\">100000000 100000000 100000000</div><div class=\"test-example-line test-example-line-even test-example-line-4\">1 1 3</div><div class=\"test-example-line test-example-line-odd test-example-line-5\">7 7</div><div class=\"test-example-line test-example-line-odd test-example-line-5\">34 87 5 42 -44 66 -32</div><div class=\"test-example-line test-example-line-odd test-example-line-5\">2 2 2</div><div class=\"test-example-line test-example-line-odd test-example-line-5\">4 3 1</div><div class=\"test-example-line test-example-line-odd test-example-line-5\">1 3 2</div><div class=\"test-example-line test-example-line-odd test-example-line-5\">6 2 1</div><div class=\"test-example-line test-example-line-odd test-example-line-5\">5 2 2</div><div class=\"test-example-line test-example-line-odd test-example-line-5\">2 5 2</div><div class=\"test-example-line test-example-line-odd test-example-line-5\">6 1 2</div>",
            "output": "\n5 1 3 \n-600000000 \n22 12 55 \n600000000 \n171 42 118 66 -108 23 2 "
        }
    ],
    "note": null,
    "contestId": 1921,
    "index": "F",
    "name": "Sum of Progression",
    "type": "PROGRAMMING",
    "tags": [
        "brute force",
        "data structures",
        "dp",
        "implementation",
        "math"
    ],
    "solvedCount": 3543
}