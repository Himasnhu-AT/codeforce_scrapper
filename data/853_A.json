{
    "title": "A. Planning",
    "timeLimit": {
        "value": 1.0,
        "unit": "second"
    },
    "memoryLimit": {
        "value": 512.0,
        "unit": "megabytes"
    },
    "statement": "<p>Helen works in Metropolis airport. She is responsible for creating a departure schedule. There are <span class=\"tex-span\"><i>n</i></span> flights that must depart today, the <span class=\"tex-span\"><i>i</i></span>-th of them is planned to depart at the <span class=\"tex-span\"><i>i</i></span>-th minute of the day.</p><p>Metropolis airport is the main transport hub of Metropolia, so it is difficult to keep the schedule intact. This is exactly the case today: because of technical issues, no flights were able to depart during the first <span class=\"tex-span\"><i>k</i></span> minutes of the day, so now the new departure schedule must be created.</p><p>All <span class=\"tex-span\"><i>n</i></span> scheduled flights must now depart at different minutes between <span class=\"tex-span\">(<i>k</i>\u2009+\u20091)</span>-th and <span class=\"tex-span\">(<i>k</i>\u2009+\u2009<i>n</i>)</span>-th, inclusive. However, it's not mandatory for the flights to depart in the same order they were initially scheduled to do so\u00a0\u2014 their order in the new schedule can be different. There is only one restriction: no flight is allowed to depart earlier than it was supposed to depart in the initial schedule.</p><p>Helen knows that each minute of delay of the <span class=\"tex-span\"><i>i</i></span>-th flight costs airport <span class=\"tex-span\"><i>c</i><sub class=\"lower-index\"><i>i</i></sub></span> burles. Help her find the order for flights to depart in the new schedule that minimizes the total cost for the airport.</p>",
    "inputSpecification": "<p>The first line contains two integers <span class=\"tex-span\"><i>n</i></span> and <span class=\"tex-span\"><i>k</i></span> (<span class=\"tex-span\">1\u2009\u2264\u2009<i>k</i>\u2009\u2264\u2009<i>n</i>\u2009\u2264\u2009300\u2009000</span>), here <span class=\"tex-span\"><i>n</i></span> is the number of flights, and <span class=\"tex-span\"><i>k</i></span> is the number of minutes in the beginning of the day that the flights did not depart.</p><p>The second line contains <span class=\"tex-span\"><i>n</i></span> integers <span class=\"tex-span\"><i>c</i><sub class=\"lower-index\">1</sub>,\u2009<i>c</i><sub class=\"lower-index\">2</sub>,\u2009...,\u2009<i>c</i><sub class=\"lower-index\"><i>n</i></sub></span> (<span class=\"tex-span\">1\u2009\u2264\u2009<i>c</i><sub class=\"lower-index\"><i>i</i></sub>\u2009\u2264\u200910<sup class=\"upper-index\">7</sup></span>), here <span class=\"tex-span\"><i>c</i><sub class=\"lower-index\"><i>i</i></sub></span> is the cost of delaying the <span class=\"tex-span\"><i>i</i></span>-th flight for one minute.</p>",
    "outputSpecification": "<p>The first line must contain the minimum possible total cost of delaying the flights.</p><p>The second line must contain <span class=\"tex-span\"><i>n</i></span> different integers <span class=\"tex-span\"><i>t</i><sub class=\"lower-index\">1</sub>,\u2009<i>t</i><sub class=\"lower-index\">2</sub>,\u2009...,\u2009<i>t</i><sub class=\"lower-index\"><i>n</i></sub></span> (<span class=\"tex-span\"><i>k</i>\u2009+\u20091\u2009\u2264\u2009<i>t</i><sub class=\"lower-index\"><i>i</i></sub>\u2009\u2264\u2009<i>k</i>\u2009+\u2009<i>n</i></span>), here <span class=\"tex-span\"><i>t</i><sub class=\"lower-index\"><i>i</i></sub></span> is the minute when the <span class=\"tex-span\"><i>i</i></span>-th flight must depart. If there are several optimal schedules, print any of them.</p>",
    "samples": [
        {
            "input": "5 2<br/>4 2 1 10 2<br/>",
            "output": "20<br/>3 6 7 4 5 <br/>"
        }
    ],
    "note": "<p>Let us consider sample test. If Helen just moves all flights <span class=\"tex-span\">2</span> minutes later preserving the order, the total cost of delaying the flights would be <span class=\"tex-span\">(3\u2009-\u20091)\u00b74\u2009+\u2009(4\u2009-\u20092)\u00b72\u2009+\u2009(5\u2009-\u20093)\u00b71\u2009+\u2009(6\u2009-\u20094)\u00b710\u2009+\u2009(7\u2009-\u20095)\u00b72\u2009=\u200938</span> burles. </p><p>However, the better schedule is shown in the sample answer, its cost is <span class=\"tex-span\">(3\u2009-\u20091)\u00b74\u2009+\u2009(6\u2009-\u20092)\u00b72\u2009+\u2009(7\u2009-\u20093)\u00b71\u2009+\u2009(4\u2009-\u20094)\u00b710\u2009+\u2009(5\u2009-\u20095)\u00b72\u2009=\u200920</span> burles.</p>",
    "contestId": 853,
    "index": "A",
    "name": "Planning",
    "type": "PROGRAMMING",
    "tags": [
        "greedy"
    ],
    "solvedCount": 5775
}