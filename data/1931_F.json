{
    "title": "F. Chat Screenshots",
    "timeLimit": {
        "value": 2.0,
        "unit": "seconds"
    },
    "memoryLimit": {
        "value": 256.0,
        "unit": "megabytes"
    },
    "statement": "<p>There are $$$n$$$ people in the programming contest chat. Chat participants are ordered by activity, but each person sees himself at the top of the list.</p><p>For example, there are $$$4$$$ participants in the chat, and their order is $$$[2, 3, 1, 4]$$$. Then </p><ul> <li> $$$1$$$-st user sees the order $$$[1, 2, 3, 4]$$$. </li><li> $$$2$$$-nd user sees the order $$$[2, 3, 1, 4]$$$. </li><li> $$$3$$$-rd user sees the order $$$[3, 2, 1, 4]$$$. </li><li> $$$4$$$-th user sees the order $$$[4, 2, 3, 1]$$$. </li></ul><p>$$$k$$$ people posted screenshots in the chat, which show the order of participants shown to this user. The screenshots were taken within a short period of time, and the order of participants has not changed. </p><p>Your task is to determine whether there is a certain order that all screenshots correspond to.</p>",
    "inputSpecification": "<p>The first line contains a single integer $$$t$$$ ($$$1 \\le t \\le 10^4$$$) \u2014 the number of input test cases. The descriptions of test cases follow.</p><p>The first line of the description of each test case contains two integers $$$n$$$ and $$$k$$$ ($$$1 \\le k \\le n \\le 2 \\cdot 10^5, n \\cdot k \\le 2 \\cdot 10^5$$$) \u2014 the number of chat participants and the number of participants who posted screenshots.</p><p>The following $$$k$$$ lines contain descriptions of screenshots posted by the participants.</p><p>The $$$i$$$-th row contains $$$n$$$ integers $$$a_{ij}$$$ each ($$$1 \\le a_{ij} \\le n$$$, all $$$a_{ij}$$$ are different) \u2014 the order of participants shown to the participant $$$a_{i0}$$$, where $$$a_{i0}$$$ \u2014 the author of the screenshot. You can show that in the screenshot description it will always be at the top of the list.</p><p>It is guaranteed that the sum of $$$n \\cdot k$$$ for all test cases does not exceed $$$2 \\cdot 10^5$$$. It is also guaranteed that all the authors of the screenshots are different.</p>",
    "outputSpecification": "<p>Output $$$t$$$ lines, each of which is the answer to the corresponding test case. As an answer, output \"<span class=\"tex-font-style-tt\">YES</span>\" if there exists at least one order of participants, under which all $$$k$$$ screenshots could have been obtained. Otherwise, output \"<span class=\"tex-font-style-tt\">NO</span>\".</p><p>You can output the answer in any case (upper or lower). For example, the strings \"<span class=\"tex-font-style-tt\">yEs</span>\", \"<span class=\"tex-font-style-tt\">yes</span>\", \"<span class=\"tex-font-style-tt\">Yes</span>\", and \"<span class=\"tex-font-style-tt\">YES</span>\" will be recognized as positive responses.</p>",
    "samples": [
        {
            "input": "\n<div class=\"test-example-line test-example-line-even test-example-line-0\">10</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">5 1</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">1 2 3 4 5</div><div class=\"test-example-line test-example-line-even test-example-line-2\">4 4</div><div class=\"test-example-line test-example-line-even test-example-line-2\">1 2 3 4</div><div class=\"test-example-line test-example-line-even test-example-line-2\">2 3 1 4</div><div class=\"test-example-line test-example-line-even test-example-line-2\">3 2 1 4</div><div class=\"test-example-line test-example-line-even test-example-line-2\">4 2 3 1</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">6 2</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">1 3 5 2 4 6</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">6 3 5 2 1 4</div><div class=\"test-example-line test-example-line-even test-example-line-4\">3 3</div><div class=\"test-example-line test-example-line-even test-example-line-4\">1 2 3</div><div class=\"test-example-line test-example-line-even test-example-line-4\">2 3 1</div><div class=\"test-example-line test-example-line-even test-example-line-4\">3 2 1</div><div class=\"test-example-line test-example-line-odd test-example-line-5\">10 2</div><div class=\"test-example-line test-example-line-odd test-example-line-5\">1 2 3 4 5 6 7 8 9 10</div><div class=\"test-example-line test-example-line-odd test-example-line-5\">10 9 8 7 6 5 4 3 2 1</div><div class=\"test-example-line test-example-line-even test-example-line-6\">1 1</div><div class=\"test-example-line test-example-line-even test-example-line-6\">1</div><div class=\"test-example-line test-example-line-odd test-example-line-7\">5 2</div><div class=\"test-example-line test-example-line-odd test-example-line-7\">1 2 3 5 4</div><div class=\"test-example-line test-example-line-odd test-example-line-7\">2 1 3 5 4</div><div class=\"test-example-line test-example-line-even test-example-line-8\">3 3</div><div class=\"test-example-line test-example-line-even test-example-line-8\">3 1 2</div><div class=\"test-example-line test-example-line-even test-example-line-8\">2 3 1</div><div class=\"test-example-line test-example-line-even test-example-line-8\">1 3 2</div><div class=\"test-example-line test-example-line-odd test-example-line-9\">5 4</div><div class=\"test-example-line test-example-line-odd test-example-line-9\">3 5 1 4 2</div><div class=\"test-example-line test-example-line-odd test-example-line-9\">2 5 1 4 3</div><div class=\"test-example-line test-example-line-odd test-example-line-9\">1 5 4 3 2</div><div class=\"test-example-line test-example-line-odd test-example-line-9\">5 1 4 3 2</div><div class=\"test-example-line test-example-line-even test-example-line-10\">3 3</div><div class=\"test-example-line test-example-line-even test-example-line-10\">1 3 2</div><div class=\"test-example-line test-example-line-even test-example-line-10\">2 1 3</div><div class=\"test-example-line test-example-line-even test-example-line-10\">3 2 1</div>",
            "output": "\nYES\nYES\nYES\nYES\nNO\nYES\nYES\nYES\nYES\nNO\n"
        }
    ],
    "note": null,
    "contestId": 1931,
    "index": "F",
    "name": "Chat Screenshots",
    "type": "PROGRAMMING",
    "tags": [
        "combinatorics",
        "dfs and similar",
        "graphs"
    ],
    "solvedCount": 7190
}