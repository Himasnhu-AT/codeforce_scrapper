{
    "title": "I. Olympiad in Programming and Sports",
    "timeLimit": {
        "value": 2.0,
        "unit": "seconds"
    },
    "memoryLimit": {
        "value": 512.0,
        "unit": "megabytes"
    },
    "statement": "<p>There are <span class=\"tex-span\"><i>n</i></span> students at Berland State University. Every student has two skills, each measured as a number: <span class=\"tex-span\"><i>a</i><sub class=\"lower-index\"><i>i</i></sub></span> \u2014 the programming skill and <span class=\"tex-span\"><i>b</i><sub class=\"lower-index\"><i>i</i></sub></span> \u2014 the sports skill.</p><p>It is announced that an Olympiad in programming and sports will be held soon. That's why Berland State University should choose two teams: one to take part in the programming track and one to take part in the sports track.</p><p>There should be exactly <span class=\"tex-span\"><i>p</i></span> students in the programming team and exactly <span class=\"tex-span\"><i>s</i></span> students in the sports team. A student can't be a member of both teams.</p><p>The university management considers that the strength of the university on the Olympiad is equal to the sum of two values: the programming team strength and the sports team strength. The strength of a team is the sum of skills of its members in the corresponding area, so the strength of the programming team is the sum of all <span class=\"tex-span\"><i>a</i><sub class=\"lower-index\"><i>i</i></sub></span> and the strength of the sports team is the sum of all <span class=\"tex-span\"><i>b</i><sub class=\"lower-index\"><i>i</i></sub></span> over corresponding team members.</p><p>Help Berland State University to compose two teams to maximize the total strength of the university on the Olympiad.</p>",
    "inputSpecification": "<p>The first line contains three positive integer numbers <span class=\"tex-span\"><i>n</i></span>, <span class=\"tex-span\"><i>p</i></span> and <span class=\"tex-span\"><i>s</i></span> (<span class=\"tex-span\">2\u2009\u2264\u2009<i>n</i>\u2009\u2264\u20093000</span>, <span class=\"tex-span\"><i>p</i>\u2009+\u2009<i>s</i>\u2009\u2264\u2009<i>n</i></span>) \u2014 the number of students, the size of the programming team and the size of the sports team.</p><p>The second line contains <span class=\"tex-span\"><i>n</i></span> positive integers <span class=\"tex-span\"><i>a</i><sub class=\"lower-index\">1</sub>,\u2009<i>a</i><sub class=\"lower-index\">2</sub>,\u2009...,\u2009<i>a</i><sub class=\"lower-index\"><i>n</i></sub></span> (<span class=\"tex-span\">1\u2009\u2264\u2009<i>a</i><sub class=\"lower-index\"><i>i</i></sub>\u2009\u2264\u20093000</span>), where <span class=\"tex-span\"><i>a</i><sub class=\"lower-index\"><i>i</i></sub></span> is the programming skill of the <span class=\"tex-span\"><i>i</i></span>-th student.</p><p>The third line contains <span class=\"tex-span\"><i>n</i></span> positive integers <span class=\"tex-span\"><i>b</i><sub class=\"lower-index\">1</sub>,\u2009<i>b</i><sub class=\"lower-index\">2</sub>,\u2009...,\u2009<i>b</i><sub class=\"lower-index\"><i>n</i></sub></span> (<span class=\"tex-span\">1\u2009\u2264\u2009<i>b</i><sub class=\"lower-index\"><i>i</i></sub>\u2009\u2264\u20093000</span>), where <span class=\"tex-span\"><i>b</i><sub class=\"lower-index\"><i>i</i></sub></span> is the sports skill of the <span class=\"tex-span\"><i>i</i></span>-th student.</p>",
    "outputSpecification": "<p>In the first line, print the the maximum strength of the university on the Olympiad. In the second line, print <span class=\"tex-span\"><i>p</i></span> numbers \u2014 the members of the programming team. In the third line, print <span class=\"tex-span\"><i>s</i></span> numbers \u2014 the members of the sports team.</p><p>The students are numbered from 1 to <span class=\"tex-span\"><i>n</i></span> as they are given in the input. All numbers printed in the second and in the third lines should be distinct and can be printed in arbitrary order.</p><p>If there are multiple solutions, print any of them.</p>",
    "samples": [
        {
            "input": "5 2 2<br/>1 3 4 5 2<br/>5 3 2 1 4<br/>",
            "output": "18<br/>3 4 <br/>1 5 <br/>"
        },
        {
            "input": "4 2 2<br/>10 8 8 3<br/>10 7 9 4<br/>",
            "output": "31<br/>1 2 <br/>3 4 <br/>"
        },
        {
            "input": "5 3 1<br/>5 2 5 1 7<br/>6 3 1 6 3<br/>",
            "output": "23<br/>1 3 5 <br/>4 <br/>"
        }
    ],
    "note": null,
    "contestId": 730,
    "index": "I",
    "name": "Olympiad in Programming and Sports",
    "type": "PROGRAMMING",
    "tags": [
        "dp",
        "flows",
        "graphs",
        "greedy"
    ],
    "solvedCount": 1966
}