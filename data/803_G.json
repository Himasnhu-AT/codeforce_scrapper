{
    "title": "G. Periodic RMQ Problem",
    "timeLimit": {
        "value": 4.0,
        "unit": "seconds"
    },
    "memoryLimit": {
        "value": 512.0,
        "unit": "megabytes"
    },
    "statement": "<p>You are given an array <span class=\"tex-span\"><i>a</i></span> consisting of positive integers and <span class=\"tex-span\"><i>q</i></span> queries to this array. There are two types of queries: </p><ul> <li> <span class=\"tex-span\">1</span> <span class=\"tex-span\"><i>l</i></span> <span class=\"tex-span\"><i>r</i></span> <span class=\"tex-span\"><i>x</i></span> \u2014 for each index <span class=\"tex-span\"><i>i</i></span> such that <span class=\"tex-span\"><i>l</i>\u2009\u2264\u2009<i>i</i>\u2009\u2264\u2009<i>r</i></span> set <span class=\"tex-span\"><i>a</i><sub class=\"lower-index\"><i>i</i></sub>\u2009=\u2009<i>x</i></span>. </li><li> <span class=\"tex-span\">2</span> <span class=\"tex-span\"><i>l</i></span> <span class=\"tex-span\"><i>r</i></span> \u2014 find the minimum among such <span class=\"tex-span\"><i>a</i><sub class=\"lower-index\"><i>i</i></sub></span> that <span class=\"tex-span\"><i>l</i>\u2009\u2264\u2009<i>i</i>\u2009\u2264\u2009<i>r</i></span>. </li></ul><p>We decided that this problem is too easy. So the array <span class=\"tex-span\"><i>a</i></span> is given in a compressed form: there is an array <span class=\"tex-span\"><i>b</i></span> consisting of <span class=\"tex-span\"><i>n</i></span> elements and a number <span class=\"tex-span\"><i>k</i></span> in the input, and before all queries <span class=\"tex-span\"><i>a</i></span> is equal to the concatenation of <span class=\"tex-span\"><i>k</i></span> arrays <span class=\"tex-span\"><i>b</i></span> (so the size of <span class=\"tex-span\"><i>a</i></span> is <span class=\"tex-span\"><i>n</i>\u00b7<i>k</i></span>).</p>",
    "inputSpecification": "<p>The first line contains two integers <span class=\"tex-span\"><i>n</i></span> and <span class=\"tex-span\"><i>k</i></span> (<span class=\"tex-span\">1\u2009\u2264\u2009<i>n</i>\u2009\u2264\u200910<sup class=\"upper-index\">5</sup></span>, <span class=\"tex-span\">1\u2009\u2264\u2009<i>k</i>\u2009\u2264\u200910<sup class=\"upper-index\">4</sup></span>).</p><p>The second line contains <span class=\"tex-span\"><i>n</i></span> integers \u2014 elements of the array <span class=\"tex-span\"><i>b</i></span> (<span class=\"tex-span\">1\u2009\u2264\u2009<i>b</i><sub class=\"lower-index\"><i>i</i></sub>\u2009\u2264\u200910<sup class=\"upper-index\">9</sup></span>).</p><p>The third line contains one integer <span class=\"tex-span\"><i>q</i></span> (<span class=\"tex-span\">1\u2009\u2264\u2009<i>q</i>\u2009\u2264\u200910<sup class=\"upper-index\">5</sup></span>).</p><p>Then <span class=\"tex-span\"><i>q</i></span> lines follow, each representing a query. Each query is given either as <span class=\"tex-span\">1</span> <span class=\"tex-span\"><i>l</i></span> <span class=\"tex-span\"><i>r</i></span> <span class=\"tex-span\"><i>x</i></span> \u2014 set all elements in the segment from <span class=\"tex-span\"><i>l</i></span> till <span class=\"tex-span\"><i>r</i></span> (including borders) to <span class=\"tex-span\"><i>x</i></span> (<span class=\"tex-span\">1\u2009\u2264\u2009<i>l</i>\u2009\u2264\u2009<i>r</i>\u2009\u2264\u2009<i>n</i>\u00b7<i>k</i></span>, <span class=\"tex-span\">1\u2009\u2264\u2009<i>x</i>\u2009\u2264\u200910<sup class=\"upper-index\">9</sup></span>) or as <span class=\"tex-span\">2</span> <span class=\"tex-span\"><i>l</i></span> <span class=\"tex-span\"><i>r</i></span> \u2014 find the minimum among all elements in the segment from <span class=\"tex-span\"><i>l</i></span> till <span class=\"tex-span\"><i>r</i></span> (<span class=\"tex-span\">1\u2009\u2264\u2009<i>l</i>\u2009\u2264\u2009<i>r</i>\u2009\u2264\u2009<i>n</i>\u00b7<i>k</i></span>).</p>",
    "outputSpecification": "<p>For each query of type <span class=\"tex-span\">2</span> print the answer to this query \u2014 the minimum on the corresponding segment.</p>",
    "samples": [
        {
            "input": "3 1<br/>1 2 3<br/>3<br/>2 1 3<br/>1 1 2 4<br/>2 1 3<br/>",
            "output": "1<br/>3<br/>"
        },
        {
            "input": "3 2<br/>1 2 3<br/>5<br/>2 4 4<br/>1 4 4 5<br/>2 4 4<br/>1 1 6 1<br/>2 6 6<br/>",
            "output": "1<br/>5<br/>1<br/>"
        }
    ],
    "note": null,
    "contestId": 803,
    "index": "G",
    "name": "Periodic RMQ Problem",
    "type": "PROGRAMMING",
    "tags": [
        "data structures"
    ],
    "solvedCount": 1320
}