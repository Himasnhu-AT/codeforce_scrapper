{
    "title": "B. Diameter of Graph",
    "timeLimit": {
        "value": 1.0,
        "unit": "second"
    },
    "memoryLimit": {
        "value": 256.0,
        "unit": "megabytes"
    },
    "statement": "<p>CQXYM wants to create a connected undirected graph with $$$n$$$ nodes and $$$m$$$ edges, and the diameter of the graph must be strictly less than $$$k-1$$$. Also, CQXYM doesn't want a graph that contains self-loops or multiple edges (i.e. each edge connects two different vertices and between each pair of vertices there is at most one edge).</p><p>The diameter of a graph is the maximum distance between any two nodes.</p><p>The distance between two nodes is the minimum number of the edges on the path which endpoints are the two nodes.</p><p>CQXYM wonders whether it is possible to create such a graph.</p>",
    "inputSpecification": "<p>The input consists of multiple test cases. </p><p>The first line contains an integer $$$t (1 \\leq t \\leq 10^5)$$$ \u2014 the number of test cases. The description of the test cases follows.</p><p>Only one line of each test case contains three integers $$$n(1 \\leq n \\leq 10^9)$$$, $$$m$$$, $$$k$$$ $$$(0 \\leq m,k \\leq 10^9)$$$.</p>",
    "outputSpecification": "<p>For each test case, print <span class=\"tex-font-style-tt\">YES</span> if it is possible to create the graph, or print <span class=\"tex-font-style-tt\">NO</span> if it is impossible. You can print each letter in any case (upper or lower).</p>",
    "samples": [
        {
            "input": "\n5\n1 0 3\n4 5 3\n4 6 3\n5 4 1\n2 1 1\n",
            "output": "\nYES\nNO\nYES\nNO\nNO\n"
        }
    ],
    "note": "<p>In the first test case, the graph's diameter equal to 0.</p><p>In the second test case, the graph's diameter can only be 2.</p><p>In the third test case, the graph's diameter can only be 1.</p>",
    "contestId": 1581,
    "index": "B",
    "name": "Diameter of Graph",
    "type": "PROGRAMMING",
    "tags": [
        "constructive algorithms",
        "graphs",
        "greedy",
        "math"
    ],
    "solvedCount": 11098
}