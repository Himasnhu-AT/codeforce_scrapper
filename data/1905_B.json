{
    "title": "B. Begginer's Zelda",
    "timeLimit": {
        "value": 1.0,
        "unit": "second"
    },
    "memoryLimit": {
        "value": 256.0,
        "unit": "megabytes"
    },
    "statement": "<p>You are given a tree$$$^{\\dagger}$$$. In one <span class=\"tex-font-style-it\">zelda-operation</span> you can do follows:</p><ul><li> Choose two vertices of the tree $$$u$$$ and $$$v$$$;</li><li> Compress all the vertices on the path from $$$u$$$ to $$$v$$$ into one vertex. In other words, all the vertices on path from $$$u$$$ to $$$v$$$ will be erased from the tree, a new vertex $$$w$$$ will be created. Then every vertex $$$s$$$ that had an edge to some vertex on the path from $$$u$$$ to $$$v$$$ will have an edge to the vertex $$$w$$$.</li></ul><center> <img class=\"tex-graphics\" src=\"https://espresso.codeforces.com/17652d819e3f2befc596f790b49c7268c923236b.png\" style=\"max-width: 100.0%;max-height: 100.0%;\"/> <span class=\"tex-font-size-small\">Illustration of a zelda-operation performed for vertices $$$1$$$ and $$$5$$$.</span> </center><p>Determine the minimum number of zelda-operations required for the tree to have only one vertex.</p><p>$$$^{\\dagger}$$$A tree is a connected acyclic undirected graph.</p>",
    "inputSpecification": "<p>Each test consists of multiple test cases. The first line contains a single integer $$$t$$$ ($$$1 \\le t \\le 10^4$$$) \u2014 the number of test cases. The description of the test cases follows.</p><p>The first line of each test case contains a single integer $$$n$$$ ($$$2 \\le n \\le 10^5$$$) \u2014 the number of vertices.</p><p>$$$i$$$-th of the next $$$n \u2212 1$$$ lines contains two integers $$$u_i$$$ and $$$v_i$$$ ($$$1 \\le u_i, v_i \\le n, u_i \\ne v_i$$$) \u2014 the numbers of vertices connected by the $$$i$$$-th edge.</p><p>It is guaranteed that the given edges form a tree.</p><p>It is guaranteed that the sum of $$$n$$$ over all test cases does not exceed $$$10^5$$$.</p>",
    "outputSpecification": "<p>For each test case, output a single integer \u2014 the minimum number of zelda-operations required for the tree to have only one vertex.</p>",
    "samples": [
        {
            "input": "\n<div class=\"test-example-line test-example-line-even test-example-line-0\">4</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">4</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">1 2</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">1 3</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">3 4</div><div class=\"test-example-line test-example-line-even test-example-line-2\">9</div><div class=\"test-example-line test-example-line-even test-example-line-2\">3 1</div><div class=\"test-example-line test-example-line-even test-example-line-2\">3 5</div><div class=\"test-example-line test-example-line-even test-example-line-2\">3 2</div><div class=\"test-example-line test-example-line-even test-example-line-2\">5 6</div><div class=\"test-example-line test-example-line-even test-example-line-2\">6 7</div><div class=\"test-example-line test-example-line-even test-example-line-2\">7 8</div><div class=\"test-example-line test-example-line-even test-example-line-2\">7 9</div><div class=\"test-example-line test-example-line-even test-example-line-2\">6 4</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">7</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">1 2</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">1 3</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">2 4</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">4 5</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">3 6</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">2 7</div><div class=\"test-example-line test-example-line-even test-example-line-4\">6</div><div class=\"test-example-line test-example-line-even test-example-line-4\">1 2</div><div class=\"test-example-line test-example-line-even test-example-line-4\">1 3</div><div class=\"test-example-line test-example-line-even test-example-line-4\">1 4</div><div class=\"test-example-line test-example-line-even test-example-line-4\">4 5</div><div class=\"test-example-line test-example-line-even test-example-line-4\">2 6</div>",
            "output": "\n1\n3\n2\n2\n"
        }
    ],
    "note": "<p>In the first test case, it's enough to perform one zelda-operation for vertices $$$2$$$ and $$$4$$$.</p><p>In the second test case, we can perform the following zelda-operations:</p><ol> <li> $$$u = 2, v = 1$$$. Let the resulting added vertex be labeled as $$$w = 10$$$; </li><li> $$$u = 4, v = 9$$$. Let the resulting added vertex be labeled as $$$w = 11$$$; </li><li> $$$u = 8, v = 10$$$. After this operation, the tree consists of a single vertex. </li></ol>",
    "contestId": 1905,
    "index": "B",
    "name": "Begginer's Zelda",
    "type": "PROGRAMMING",
    "tags": [
        "greedy",
        "trees"
    ],
    "solvedCount": 15500
}