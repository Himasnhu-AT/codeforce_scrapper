{
    "title": "F. Points",
    "timeLimit": {
        "value": 6.5,
        "unit": "seconds"
    },
    "memoryLimit": {
        "value": 512.0,
        "unit": "megabytes"
    },
    "statement": "<p>A triple of points $$$i$$$, $$$j$$$ and $$$k$$$ on a coordinate line is called <span class=\"tex-font-style-bf\">beautiful</span> if $$$i &lt; j &lt; k$$$ and $$$k - i \\le d$$$.</p><p>You are given a set of points on a coordinate line, initially empty. You have to process queries of three types:</p><ul> <li> add a point; </li><li> remove a point; </li><li> calculate the number of beautiful triples consisting of points belonging to the set. </li></ul>",
    "inputSpecification": "<p>The first line contains two integers $$$q$$$ and $$$d$$$ ($$$1 \\le q, d \\le 2 \\cdot 10^5$$$) \u2014 the number of queries and the parameter for defining if a triple is beautiful, respectively.</p><p>The second line contains $$$q$$$ integers $$$a_1, a_2, \\dots, a_q$$$ ($$$1 \\le a_i \\le 2 \\cdot 10^5$$$) denoting the queries. The integer $$$a_i$$$ denotes the $$$i$$$-th query in the following way:</p><ul> <li> if the point $$$a_i$$$ belongs to the set, remove it; otherwise, add it; </li><li> after adding or removing the point, print the number of beautiful triples. </li></ul>",
    "outputSpecification": "<p>For each query, print one integer \u2014 the number of beautiful triples after processing the respective query.</p>",
    "samples": [
        {
            "input": "\n7 5\n8 5 3 2 1 5 6\n",
            "output": "\n0\n0\n1\n2\n5\n1\n5\n"
        }
    ],
    "note": null,
    "contestId": 1701,
    "index": "F",
    "name": "Points",
    "type": "PROGRAMMING",
    "tags": [
        "combinatorics",
        "data structures",
        "implementation",
        "math",
        "matrices"
    ],
    "solvedCount": 902
}