{
    "title": "A. Friends Meeting",
    "timeLimit": {
        "value": 1.0,
        "unit": "second"
    },
    "memoryLimit": {
        "value": 256.0,
        "unit": "megabytes"
    },
    "statement": "<p>Two friends are on the coordinate axis <span class=\"tex-span\"><i>Ox</i></span> in points with integer coordinates. One of them is in the point <span class=\"tex-span\"><i>x</i><sub class=\"lower-index\">1</sub>\u2009=\u2009<i>a</i></span>, another one is in the point <span class=\"tex-span\"><i>x</i><sub class=\"lower-index\">2</sub>\u2009=\u2009<i>b</i></span>. </p><p>Each of the friends can move by one along the line in any direction unlimited number of times. When a friend moves, the tiredness of a friend changes according to the following rules: the first move increases the tiredness by <span class=\"tex-span\">1</span>, the second move increases the tiredness by <span class=\"tex-span\">2</span>, the third\u00a0\u2014 by <span class=\"tex-span\">3</span> and so on. For example, if a friend moves first to the left, then to the right (returning to the same point), and then again to the left his tiredness becomes equal to <span class=\"tex-span\">1\u2009+\u20092\u2009+\u20093\u2009=\u20096</span>.</p><p>The friends want to meet in a integer point. Determine the minimum total tiredness they should gain, if they meet in the same point.</p>",
    "inputSpecification": "<p>The first line contains a single integer <span class=\"tex-span\"><i>a</i></span> (<span class=\"tex-span\">1\u2009\u2264\u2009<i>a</i>\u2009\u2264\u20091000</span>) \u2014 the initial position of the first friend. </p><p>The second line contains a single integer <span class=\"tex-span\"><i>b</i></span> (<span class=\"tex-span\">1\u2009\u2264\u2009<i>b</i>\u2009\u2264\u20091000</span>) \u2014 the initial position of the second friend.</p><p>It is guaranteed that <span class=\"tex-span\"><i>a</i>\u2009\u2260\u2009<i>b</i></span>.</p>",
    "outputSpecification": "<p>Print the minimum possible total tiredness if the friends meet in the same point.</p>",
    "samples": [
        {
            "input": "3<br/>4<br/>",
            "output": "1<br/>"
        },
        {
            "input": "101<br/>99<br/>",
            "output": "2<br/>"
        },
        {
            "input": "5<br/>10<br/>",
            "output": "9<br/>"
        }
    ],
    "note": "<p>In the first example the first friend should move by one to the right (then the meeting happens at point <span class=\"tex-span\">4</span>), or the second friend should move by one to the left (then the meeting happens at point <span class=\"tex-span\">3</span>). In both cases, the total tiredness becomes <span class=\"tex-span\">1</span>.</p><p>In the second example the first friend should move by one to the left, and the second friend should move by one to the right. Then they meet in the point <span class=\"tex-span\">100</span>, and the total tiredness becomes <span class=\"tex-span\">1\u2009+\u20091\u2009=\u20092</span>.</p><p>In the third example one of the optimal ways is the following. The first friend should move three times to the right, and the second friend \u2014 two times to the left. Thus the friends meet in the point <span class=\"tex-span\">8</span>, and the total tiredness becomes <span class=\"tex-span\">1\u2009+\u20092\u2009+\u20093\u2009+\u20091\u2009+\u20092\u2009=\u20099</span>.</p>",
    "contestId": 931,
    "index": "A",
    "name": "Friends Meeting",
    "type": "PROGRAMMING",
    "tags": [
        "brute force",
        "greedy",
        "implementation",
        "math"
    ],
    "solvedCount": 11760
}