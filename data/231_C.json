{
    "title": "C. To Add or Not to Add",
    "timeLimit": {
        "value": 2.0,
        "unit": "seconds"
    },
    "memoryLimit": {
        "value": 256.0,
        "unit": "megabytes"
    },
    "statement": "<p>A piece of paper contains an array of <span class=\"tex-span\"><i>n</i></span> integers <span class=\"tex-span\"><i>a</i><sub class=\"lower-index\">1</sub>,\u2009<i>a</i><sub class=\"lower-index\">2</sub>,\u2009...,\u2009<i>a</i><sub class=\"lower-index\"><i>n</i></sub></span>. Your task is to find a number that occurs the maximum number of times in this array.</p><p>However, before looking for such number, you are allowed to perform not more than <span class=\"tex-span\"><i>k</i></span> following operations \u2014 choose an arbitrary element from the array and add <span class=\"tex-span\">1</span> to it. In other words, you are allowed to increase some array element by <span class=\"tex-span\">1</span> no more than <span class=\"tex-span\"><i>k</i></span> times (you are allowed to increase the same element of the array multiple times).</p><p>Your task is to find the maximum number of occurrences of some number in the array after performing no more than <span class=\"tex-span\"><i>k</i></span> allowed operations. If there are several such numbers, your task is to find the minimum one.</p>",
    "inputSpecification": "<p>The first line contains two integers <span class=\"tex-span\"><i>n</i></span> and <span class=\"tex-span\"><i>k</i></span> (<span class=\"tex-span\">1\u2009\u2264\u2009<i>n</i>\u2009\u2264\u200910<sup class=\"upper-index\">5</sup></span>; <span class=\"tex-span\">0\u2009\u2264\u2009<i>k</i>\u2009\u2264\u200910<sup class=\"upper-index\">9</sup></span>) \u2014 the number of elements in the array and the number of operations you are allowed to perform, correspondingly.</p><p>The third line contains a sequence of <span class=\"tex-span\"><i>n</i></span> integers <span class=\"tex-span\"><i>a</i><sub class=\"lower-index\">1</sub>,\u2009<i>a</i><sub class=\"lower-index\">2</sub>,\u2009...,\u2009<i>a</i><sub class=\"lower-index\"><i>n</i></sub></span> <span class=\"tex-span\">(|<i>a</i><sub class=\"lower-index\"><i>i</i></sub>|\u2009\u2264\u200910<sup class=\"upper-index\">9</sup>)</span> \u2014 the initial array. The numbers in the lines are separated by single spaces.</p>",
    "outputSpecification": "<p>In a single line print two numbers \u2014 the maximum number of occurrences of some number in the array after at most <span class=\"tex-span\"><i>k</i></span> allowed operations are performed, and the minimum number that reaches the given maximum. Separate the printed numbers by whitespaces.</p>",
    "samples": [
        {
            "input": "5 3<br/>6 3 4 0 2<br/>",
            "output": "3 4<br/>"
        },
        {
            "input": "3 4<br/>5 5 5<br/>",
            "output": "3 5<br/>"
        },
        {
            "input": "5 3<br/>3 1 2 2 1<br/>",
            "output": "4 2<br/>"
        }
    ],
    "note": "<p>In the first sample your task is to increase the second element of the array once and increase the fifth element of the array twice. Thus, we get sequence <span class=\"tex-span\">6,\u20094,\u20094,\u20090,\u20094</span>, where number <span class=\"tex-span\">4</span> occurs <span class=\"tex-span\">3</span> times.</p><p>In the second sample you don't need to perform a single operation or increase each element by one. If we do nothing, we get array <span class=\"tex-span\">5,\u20095,\u20095</span>, if we increase each by one, we get <span class=\"tex-span\">6,\u20096,\u20096</span>. In both cases the maximum number of occurrences equals <span class=\"tex-span\">3</span>. So we should do nothing, as number <span class=\"tex-span\">5</span> is less than number <span class=\"tex-span\">6</span>.</p><p>In the third sample we should increase the second array element once and the fifth element once. Thus, we get sequence <span class=\"tex-span\">3,\u20092,\u20092,\u20092,\u20092</span>, where number <span class=\"tex-span\">2</span> occurs <span class=\"tex-span\">4</span> times.</p>",
    "contestId": 231,
    "index": "C",
    "name": "To Add or Not to Add",
    "type": "PROGRAMMING",
    "tags": [
        "binary search",
        "sortings",
        "two pointers"
    ],
    "solvedCount": 8355
}