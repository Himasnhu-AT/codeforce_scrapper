{
    "title": "J. Zero-XOR Array",
    "timeLimit": {
        "value": 6.0,
        "unit": "seconds"
    },
    "memoryLimit": {
        "value": 256.0,
        "unit": "megabytes"
    },
    "statement": "<p>You are given an array of integers $$$a$$$ of size $$$n$$$. This array is non-decreasing, i.\u2009e. $$$a_1 \\le a_2 \\le \\dots \\le a_n$$$.</p><p>You have to find arrays of integers $$$b$$$ of size $$$2n - 1$$$, such that:</p><ul> <li> $$$b_{2i-1} = a_i$$$ ($$$1 \\le i \\le n$$$); </li><li> array $$$b$$$ is non-decreasing; </li><li> $$$b_1 \\oplus b_2 \\oplus \\dots \\oplus b_{2n-1} = 0$$$ ($$$\\oplus$$$ denotes bitwise XOR operation: <a href=\"https://en.wikipedia.org/wiki/Exclusive_or\">https://en.wikipedia.org/wiki/Exclusive_or</a>. In Kotlin, it is <span class=\"tex-font-style-tt\">xor</span> function). </li></ul><p>Calculate the number of arrays that meet all the above conditions, modulo $$$998244353$$$.</p>",
    "inputSpecification": "<p>The first line contains a single integer $$$n$$$ ($$$2 \\le n \\le 17$$$) \u2014 the size of the array $$$a$$$.</p><p>The second line contains $$$n$$$ integers ($$$0 \\le a_i \\le 2^{60} - 1; a_i \\le a_{i+1}$$$) \u2014 elements of the array $$$a$$$.</p>",
    "outputSpecification": "<p>Print a single integer \u2014 the number of arrays that meet all the above conditions, modulo $$$998244353$$$.</p>",
    "samples": [
        {
            "input": "\n3\n0 1 3\n",
            "output": "\n2\n"
        },
        {
            "input": "\n4\n0 3 6 7\n",
            "output": "\n6\n"
        },
        {
            "input": "\n5\n1 5 9 10 23\n",
            "output": "\n20\n"
        },
        {
            "input": "\n10\n39 62 64 79 81 83 96 109 120 122\n",
            "output": "\n678132\n"
        }
    ],
    "note": null,
    "contestId": 1431,
    "index": "J",
    "name": "Zero-XOR Array",
    "type": "PROGRAMMING",
    "tags": [
        "*special",
        "dp"
    ],
    "solvedCount": 43
}