{
    "title": "B. George and Round",
    "timeLimit": {
        "value": 1.0,
        "unit": "second"
    },
    "memoryLimit": {
        "value": 256.0,
        "unit": "megabytes"
    },
    "statement": "<p>George decided to prepare a Codesecrof round, so he has prepared <span class=\"tex-span\"><i>m</i></span> problems for the round. Let's number the problems with integers <span class=\"tex-span\">1</span> through <span class=\"tex-span\"><i>m</i></span>. George estimates the <span class=\"tex-span\"><i>i</i></span>-th problem's complexity by integer <span class=\"tex-span\"><i>b</i><sub class=\"lower-index\"><i>i</i></sub></span>.</p><p>To make the round <span class=\"tex-font-style-it\">good</span>, he needs to put at least <span class=\"tex-span\"><i>n</i></span> problems there. Besides, he needs to have at least one problem with complexity exactly <span class=\"tex-span\"><i>a</i><sub class=\"lower-index\">1</sub></span>, at least one with complexity exactly <span class=\"tex-span\"><i>a</i><sub class=\"lower-index\">2</sub></span>, ..., and at least one with complexity exactly <span class=\"tex-span\"><i>a</i><sub class=\"lower-index\"><i>n</i></sub></span>. Of course, the round can also have problems with other complexities.</p><p>George has a poor imagination. It's easier for him to make some already prepared problem simpler than to come up with a new one and prepare it. George is magnificent at simplifying problems. He can simplify any already prepared problem with complexity <span class=\"tex-span\"><i>c</i></span> to any positive integer complexity <span class=\"tex-span\"><i>d</i></span> (<span class=\"tex-span\"><i>c</i>\u2009\u2265\u2009<i>d</i></span>), by changing limits on the input data.</p><p>However, nothing is so simple. George understood that even if he simplifies some problems, he can run out of problems for a <span class=\"tex-font-style-it\">good</span> round. That's why he decided to find out the minimum number of problems he needs to come up with in addition to the <span class=\"tex-span\"><i>m</i></span> he's prepared in order to make a good round. Note that George can come up with a new problem of any complexity.</p>",
    "inputSpecification": "<p>The first line contains two integers <span class=\"tex-span\"><i>n</i></span> and <span class=\"tex-span\"><i>m</i></span> (<span class=\"tex-span\">1\u2009\u2264\u2009<i>n</i>,\u2009<i>m</i>\u2009\u2264\u20093000</span>) \u2014 the minimal number of problems in a good round and the number of problems George's prepared. The second line contains space-separated integers <span class=\"tex-span\"><i>a</i><sub class=\"lower-index\">1</sub>,\u2009<i>a</i><sub class=\"lower-index\">2</sub>,\u2009...,\u2009<i>a</i><sub class=\"lower-index\"><i>n</i></sub></span> (<span class=\"tex-span\">1\u2009\u2264\u2009<i>a</i><sub class=\"lower-index\">1</sub>\u2009&lt;\u2009<i>a</i><sub class=\"lower-index\">2</sub>\u2009&lt;\u2009...\u2009&lt;\u2009<i>a</i><sub class=\"lower-index\"><i>n</i></sub>\u2009\u2264\u200910<sup class=\"upper-index\">6</sup></span>) \u2014 the requirements for the complexity of the problems in a good round. The third line contains space-separated integers <span class=\"tex-span\"><i>b</i><sub class=\"lower-index\">1</sub>,\u2009<i>b</i><sub class=\"lower-index\">2</sub>,\u2009...,\u2009<i>b</i><sub class=\"lower-index\"><i>m</i></sub></span> (<span class=\"tex-span\">1\u2009\u2264\u2009<i>b</i><sub class=\"lower-index\">1</sub>\u2009\u2264\u2009<i>b</i><sub class=\"lower-index\">2</sub>...\u2009\u2264\u2009<i>b</i><sub class=\"lower-index\"><i>m</i></sub>\u2009\u2264\u200910<sup class=\"upper-index\">6</sup></span>) \u2014 the complexities of the problems prepared by George. </p>",
    "outputSpecification": "<p>Print a single integer \u2014 the answer to the problem.</p>",
    "samples": [
        {
            "input": "3 5<br/>1 2 3<br/>1 2 2 3 3<br/>",
            "output": "0<br/>"
        },
        {
            "input": "3 5<br/>1 2 3<br/>1 1 1 1 1<br/>",
            "output": "2<br/>"
        },
        {
            "input": "3 1<br/>2 3 4<br/>1<br/>",
            "output": "3<br/>"
        }
    ],
    "note": "<p>In the first sample the set of the prepared problems meets the requirements for a good round.</p><p>In the second sample, it is enough to come up with and prepare two problems with complexities <span class=\"tex-span\">2</span> and <span class=\"tex-span\">3</span> to get a good round.</p><p>In the third sample it is very easy to get a good round if come up with and prepare extra problems with complexities: <span class=\"tex-span\">2,\u20093,\u20094</span>. </p>",
    "contestId": 387,
    "index": "B",
    "name": "George and Round",
    "type": "PROGRAMMING",
    "tags": [
        "brute force",
        "greedy",
        "two pointers"
    ],
    "solvedCount": 11959
}