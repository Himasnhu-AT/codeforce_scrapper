{
    "title": "G. Autocompletion",
    "timeLimit": {
        "value": 7.0,
        "unit": "seconds"
    },
    "memoryLimit": {
        "value": 512.0,
        "unit": "megabytes"
    },
    "statement": "<p>You are given a set of strings $$$S$$$. Each string consists of lowercase Latin letters.</p><p>For each string in this set, you want to calculate the minimum number of seconds required to type this string. To type a string, you have to start with an empty string and transform it into the string you want to type using the following actions:</p><ul> <li> if the current string is $$$t$$$, choose some lowercase Latin letter $$$c$$$ and append it to the back of $$$t$$$, so the current string becomes $$$t + c$$$. This action takes $$$1$$$ second; </li><li> use autocompletion. When you try to autocomplete the current string $$$t$$$, a list of all strings $$$s \\in S$$$ such that $$$t$$$ is a prefix of $$$s$$$ is shown to you. <span class=\"tex-font-style-bf\">This list includes $$$t$$$ itself, if $$$t$$$ is a string from $$$S$$$</span>, and the strings are ordered lexicographically. You can transform $$$t$$$ into the $$$i$$$-th string from this list in $$$i$$$ seconds. Note that you may choose any string from this list you want, it is not necessarily the string you are trying to type. </li></ul><p>What is the minimum number of seconds that you have to spend to type each string from $$$S$$$?</p><p><span class=\"tex-font-style-bf\">Note that the strings from $$$S$$$ are given in an unusual way</span>.</p>",
    "inputSpecification": "<p>The first line contains one integer $$$n$$$ ($$$1 \\le n \\le 10^6$$$).</p><p>Then $$$n$$$ lines follow, the $$$i$$$-th line contains one integer $$$p_i$$$ ($$$0 \\le p_i &lt; i$$$) and one lowercase Latin character $$$c_i$$$. These lines form some set of strings such that $$$S$$$ is its subset as follows: there are $$$n + 1$$$ strings, numbered from $$$0$$$ to $$$n$$$; the $$$0$$$-th string is an empty string, and the $$$i$$$-th string ($$$i \\ge 1$$$) is the result of appending the character $$$c_i$$$ to the string $$$p_i$$$. <span class=\"tex-font-style-bf\">It is guaranteed that all these strings are distinct</span>.</p><p>The next line contains one integer $$$k$$$ ($$$1 \\le k \\le n$$$) \u2014 the number of strings in $$$S$$$.</p><p>The last line contains $$$k$$$ integers $$$a_1$$$, $$$a_2$$$, ..., $$$a_k$$$ ($$$1 \\le a_i \\le n$$$, all $$$a_i$$$ are pairwise distinct) denoting the indices of the strings generated by above-mentioned process that form the set $$$S$$$ \u2014 formally, if we denote the $$$i$$$-th generated string as $$$s_i$$$, then $$$S = {s_{a_1}, s_{a_2}, \\dots, s_{a_k}}$$$.</p>",
    "outputSpecification": "<p>Print $$$k$$$ integers, the $$$i$$$-th of them should be equal to the minimum number of seconds required to type the string $$$s_{a_i}$$$.</p>",
    "samples": [
        {
            "input": "\n10\n0 i\n1 q\n2 g\n0 k\n1 e\n5 r\n4 m\n5 h\n3 p\n3 e\n5\n8 9 1 10 6\n",
            "output": "\n2 4 1 3 3 \n"
        },
        {
            "input": "\n8\n0 a\n1 b\n2 a\n2 b\n4 a\n4 b\n5 c\n6 d\n5\n2 3 4 7 8\n",
            "output": "\n1 2 2 4 4 \n"
        }
    ],
    "note": "<p>In the first example, $$$S$$$ consists of the following strings: <span class=\"tex-font-style-tt\">ieh</span>, <span class=\"tex-font-style-tt\">iqgp</span>, <span class=\"tex-font-style-tt\">i</span>, <span class=\"tex-font-style-tt\">iqge</span>, <span class=\"tex-font-style-tt\">ier</span>.</p>",
    "contestId": 1312,
    "index": "G",
    "name": "Autocompletion",
    "type": "PROGRAMMING",
    "tags": [
        "data structures",
        "dfs and similar",
        "dp"
    ],
    "solvedCount": 798
}