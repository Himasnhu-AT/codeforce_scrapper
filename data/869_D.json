{
    "title": "D. The Overdosing Ubiquity",
    "timeLimit": {
        "value": 1.0,
        "unit": "second"
    },
    "memoryLimit": {
        "value": 256.0,
        "unit": "megabytes"
    },
    "statement": "<p><span class=\"tex-font-style-it\">The fundamental prerequisite for justice is not to be correct, but to be strong. That's why justice is always the victor.</span></p><p>The Cinderswarm Bee. Koyomi knows it.</p><p>The bees, according to their nature, live in a tree. To be more specific, a <span class=\"tex-font-style-underline\">complete binary tree</span> with <span class=\"tex-span\"><i>n</i></span> nodes numbered from <span class=\"tex-span\">1</span> to <span class=\"tex-span\"><i>n</i></span>. The node numbered <span class=\"tex-span\">1</span> is the root, and the parent of the <span class=\"tex-span\"><i>i</i></span>-th (<span class=\"tex-span\">2\u2009\u2264\u2009<i>i</i>\u2009\u2264\u2009<i>n</i></span>) node is <img align=\"middle\" class=\"tex-formula\" src=\"https://espresso.codeforces.com/9c7e21c7112189c87417afcaccc2c79b109fb983.png\" style=\"max-width: 100.0%;max-height: 100.0%;\"/>. Note that, however, all edges in the tree are undirected.</p><p>Koyomi adds <span class=\"tex-span\"><i>m</i></span> extra undirected edges to the tree, creating more complication to trick the bees. And you're here to count the number of <span class=\"tex-font-style-underline\">simple paths</span> in the resulting graph, modulo <span class=\"tex-span\">10<sup class=\"upper-index\">9</sup>\u2009+\u20097</span>. A <span class=\"tex-font-style-underline\">simple path</span> is an alternating sequence of adjacent nodes and undirected edges, which begins and ends with nodes and does not contain any node more than once. Do note that a single node is also considered a valid <span class=\"tex-font-style-underline\">simple path</span> under this definition. Please refer to the examples and notes below for instances.</p>",
    "inputSpecification": "<p>The first line of input contains two space-separated integers <span class=\"tex-span\"><i>n</i></span> and <span class=\"tex-span\"><i>m</i></span> (<span class=\"tex-span\">1\u2009\u2264\u2009<i>n</i>\u2009\u2264\u200910<sup class=\"upper-index\">9</sup></span>, <span class=\"tex-span\">0\u2009\u2264\u2009<i>m</i>\u2009\u2264\u20094</span>) \u2014 the number of nodes in the tree and the number of extra edges respectively.</p><p>The following <span class=\"tex-span\"><i>m</i></span> lines each contains two space-separated integers <span class=\"tex-span\"><i>u</i></span> and <span class=\"tex-span\"><i>v</i></span> (<span class=\"tex-span\">1\u2009\u2264\u2009<i>u</i>,\u2009<i>v</i>\u2009\u2264\u2009<i>n</i></span>, <span class=\"tex-span\"><i>u</i>\u2009\u2260\u2009<i>v</i></span>) \u2014 describing an undirected extra edge whose endpoints are <span class=\"tex-span\"><i>u</i></span> and <span class=\"tex-span\"><i>v</i></span>.</p><p>Note that there may be multiple edges between nodes in the resulting graph.</p>",
    "outputSpecification": "<p>Output one integer \u2014 the number of <span class=\"tex-font-style-underline\">simple paths</span> in the resulting graph, modulo <span class=\"tex-span\">10<sup class=\"upper-index\">9</sup>\u2009+\u20097</span>.</p>",
    "samples": [
        {
            "input": "3 0<br/>",
            "output": "9<br/>"
        },
        {
            "input": "3 1<br/>2 3<br/>",
            "output": "15<br/>"
        },
        {
            "input": "2 4<br/>1 2<br/>2 1<br/>1 2<br/>2 1<br/>",
            "output": "12<br/>"
        }
    ],
    "note": "<p>In the first example, the paths are: <span class=\"tex-span\">(1)</span>; <span class=\"tex-span\">(2)</span>; <span class=\"tex-span\">(3)</span>; <span class=\"tex-span\">(1,\u20092)</span>; <span class=\"tex-span\">(2,\u20091)</span>; <span class=\"tex-span\">(1,\u20093)</span>; <span class=\"tex-span\">(3,\u20091)</span>; <span class=\"tex-span\">(2,\u20091,\u20093)</span>; <span class=\"tex-span\">(3,\u20091,\u20092)</span>. (For the sake of clarity, the edges between nodes are omitted since there are no multiple edges in this case.)</p><p>In the second example, the paths are: <span class=\"tex-span\">(1)</span>; <span class=\"tex-span\">(1,\u20092)</span>; <span class=\"tex-span\">(1,\u20092,\u20093)</span>; <span class=\"tex-span\">(1,\u20093)</span>; <span class=\"tex-span\">(1,\u20093,\u20092)</span>; and similarly for paths starting with <span class=\"tex-span\">2</span> and <span class=\"tex-span\">3</span>. (<span class=\"tex-span\">5\u2009\u00d7\u20093\u2009=\u200915</span> paths in total.)</p><p>In the third example, the paths are: <span class=\"tex-span\">(1)</span>; <span class=\"tex-span\">(2)</span>; any undirected edge connecting the two nodes travelled in either direction. (<span class=\"tex-span\">2\u2009+\u20095\u2009\u00d7\u20092\u2009=\u200912</span> paths in total.)</p>",
    "contestId": 869,
    "index": "D",
    "name": "The Overdosing Ubiquity",
    "type": "PROGRAMMING",
    "tags": [
        "brute force",
        "dfs and similar",
        "graphs"
    ],
    "solvedCount": 237
}