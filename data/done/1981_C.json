{
    "title": "C. Turtle and an Incomplete Sequence",
    "timeLimit": {
        "value": 3.0,
        "unit": "seconds"
    },
    "memoryLimit": {
        "value": 256.0,
        "unit": "megabytes"
    },
    "statement": "<p>Turtle was playing with a sequence $$$a_1, a_2, \\ldots, a_n$$$ consisting of positive integers. Unfortunately, some of the integers went missing while playing.</p><p>Now the sequence becomes incomplete. There may exist an arbitrary number of indices $$$i$$$ such that $$$a_i$$$ becomes $$$-1$$$. Let the new sequence be $$$a'$$$.</p><p>Turtle is sad. But Turtle remembers that for every integer $$$i$$$ from $$$1$$$ to $$$n - 1$$$, either $$$a_i = \\left\\lfloor\\frac{a_{i + 1}}{2}\\right\\rfloor$$$ or $$$a_{i + 1} = \\left\\lfloor\\frac{a_i}{2}\\right\\rfloor$$$ holds for the original sequence $$$a$$$.</p><p>Turtle wants you to help him complete the sequence. But sometimes Turtle makes mistakes, so you need to tell him if you can't complete the sequence.</p><p>Formally, you need to find another sequence $$$b_1, b_2, \\ldots, b_n$$$ consisting of positive integers such that:</p><ul> <li> For every integer $$$i$$$ from $$$1$$$ to $$$n$$$, if $$$a'_i \\ne -1$$$, then $$$b_i = a'_i$$$. </li><li> For every integer $$$i$$$ from $$$1$$$ to $$$n - 1$$$, either $$$b_i = \\left\\lfloor\\frac{b_{i + 1}}{2}\\right\\rfloor$$$ or $$$b_{i + 1} = \\left\\lfloor\\frac{b_i}{2}\\right\\rfloor$$$ holds. </li><li> For every integer $$$i$$$ from $$$1$$$ to $$$n$$$, $$$1 \\le b_i \\le 10^9$$$. </li></ul><p>If there is no sequence $$$b_1, b_2, \\ldots, b_n$$$ that satisfies all of the conditions above, you need to report $$$-1$$$.</p>",
    "inputSpecification": "<p>Each test contains multiple test cases. The first line contains the number of test cases $$$t$$$ ($$$1 \\le t \\le 10^5$$$). The description of the test cases follows.</p><p>The first line of each test case contains a single integer $$$n$$$ ($$$2 \\le n \\le 2 \\cdot 10^5$$$) \u2014 the length of the sequence.</p><p>The second line of each test case contains $$$n$$$ integers $$$a'_1, a'_2, \\ldots, a'_n$$$ ($$$a'_i = -1$$$ or $$$1 \\le a'_i \\le 10^8$$$) \u2014 the elements of the sequence $$$a'$$$.</p><p>It is guaranteed that the sum of $$$n$$$ over all test cases does not exceed $$$2 \\cdot 10^5$$$.</p>",
    "outputSpecification": "<p>For each test case, if there is no sequence $$$b_1, b_2, \\ldots, b_n$$$ that satisfies all of the conditions, output a single integer $$$-1$$$.</p><p>Otherwise, output $$$n$$$ integers $$$b_1, b_2, \\ldots, b_n$$$ \u2014 the elements of the sequence $$$b_1, b_2, \\ldots, b_n$$$ you find. The sequence should satisfy that $$$1 \\le b_i \\le 10^9$$$ for every integer $$$i$$$ from $$$1$$$ to $$$n$$$. If there are multiple answers, print any of them.</p>",
    "samples": [
        {
            "input": "\n<div class=\"test-example-line test-example-line-even test-example-line-0\">9</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">8</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">-1 -1 -1 2 -1 -1 1 -1</div><div class=\"test-example-line test-example-line-even test-example-line-2\">4</div><div class=\"test-example-line test-example-line-even test-example-line-2\">-1 -1 -1 -1</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">6</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">3 -1 -1 -1 9 -1</div><div class=\"test-example-line test-example-line-even test-example-line-4\">4</div><div class=\"test-example-line test-example-line-even test-example-line-4\">-1 5 -1 6</div><div class=\"test-example-line test-example-line-odd test-example-line-5\">4</div><div class=\"test-example-line test-example-line-odd test-example-line-5\">2 -1 -1 3</div><div class=\"test-example-line test-example-line-even test-example-line-6\">4</div><div class=\"test-example-line test-example-line-even test-example-line-6\">1 2 3 4</div><div class=\"test-example-line test-example-line-odd test-example-line-7\">2</div><div class=\"test-example-line test-example-line-odd test-example-line-7\">4 2</div><div class=\"test-example-line test-example-line-even test-example-line-8\">5</div><div class=\"test-example-line test-example-line-even test-example-line-8\">-1 3 -1 3 6</div><div class=\"test-example-line test-example-line-odd test-example-line-9\">13</div><div class=\"test-example-line test-example-line-odd test-example-line-9\">-1 -1 3 -1 -1 -1 -1 7 -1 -1 3 -1 -1</div>",
            "output": "\n4 9 4 2 4 2 1 2\n7 3 6 13\n3 1 2 4 9 18\n-1\n-1\n-1\n4 2\n6 3 1 3 6\n3 1 3 1 3 7 3 7 3 1 3 1 3\n"
        }
    ],
    "note": "<p>In the first test case, $$$[4, 2, 1, 2, 1, 2, 1, 3]$$$ can also be the answer, while $$$[4, 2, 5, 10, 5, 2, 1, 3]$$$ and $$$[4, 2, 1, 2, 1, 2, 1, 4]$$$ cannot.</p><p>In the second test case, $$$[1, 2, 5, 2]$$$ can also be the answer.</p><p>From the fourth to the sixth test cases, it can be shown that there is no answer, so you should output $$$-1$$$.</p>",
    "contestId": 1981,
    "index": "C",
    "name": "Turtle and an Incomplete Sequence",
    "type": "PROGRAMMING",
    "tags": [
        "bitmasks",
        "brute force",
        "constructive algorithms",
        "greedy",
        "implementation",
        "math"
    ],
    "solvedCount": 3649
}