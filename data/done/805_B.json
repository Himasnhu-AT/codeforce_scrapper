{
    "title": "B. 3-palindrome",
    "timeLimit": {
        "value": 1.0,
        "unit": "second"
    },
    "memoryLimit": {
        "value": 256.0,
        "unit": "megabytes"
    },
    "statement": "<p>In the beginning of the new year Keivan decided to reverse his name. He doesn't like palindromes, so he changed Naviek to Navick.</p><p>He is too selfish, so for a given <span class=\"tex-span\"><i>n</i></span> he wants to obtain a string of <span class=\"tex-span\"><i>n</i></span> characters, each of which is either '<span class=\"tex-font-style-tt\">a</span>', '<span class=\"tex-font-style-tt\">b</span>' or '<span class=\"tex-font-style-tt\">c</span>', with no <span class=\"tex-font-style-it\">palindromes</span> of length <span class=\"tex-span\">3</span> appearing in the string as a substring. For example, the strings \"<span class=\"tex-font-style-tt\">abc</span>\" and \"<span class=\"tex-font-style-tt\">abca</span>\" suit him, while the string \"<span class=\"tex-font-style-tt\">aba</span>\" doesn't. He also want the number of letters '<span class=\"tex-font-style-tt\">c</span>' in his string to be as little as possible.</p>",
    "inputSpecification": "<p>The first line contains single integer <span class=\"tex-span\"><i>n</i></span> (<span class=\"tex-span\">1\u2009\u2264\u2009<i>n</i>\u2009\u2264\u20092\u00b710<sup class=\"upper-index\">5</sup></span>)\u00a0\u2014 the length of the string.</p>",
    "outputSpecification": "<p>Print the string that satisfies all the constraints.</p><p>If there are multiple answers, print any of them.</p>",
    "samples": [
        {
            "input": "2<br/>",
            "output": "aa<br/>"
        },
        {
            "input": "3<br/>",
            "output": "bba<br/>"
        }
    ],
    "note": "<p>A <span class=\"tex-font-style-it\">palindrome</span> is a sequence of characters which reads the same backward and forward.</p>",
    "contestId": 805,
    "index": "B",
    "name": "3-palindrome",
    "type": "PROGRAMMING",
    "tags": [
        "constructive algorithms"
    ],
    "solvedCount": 16355
}