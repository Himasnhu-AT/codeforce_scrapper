{
    "title": "D. The Strongest Build",
    "timeLimit": {
        "value": 3.0,
        "unit": "seconds"
    },
    "memoryLimit": {
        "value": 256.0,
        "unit": "megabytes"
    },
    "statement": "<p>Ivan is playing yet another roguelike computer game. He controls a single hero in the game. The hero has $$$n$$$ equipment slots. There is a list of $$$c_i$$$ items for the $$$i$$$-th slot, the $$$j$$$-th of them increases the hero strength by $$$a_{i,j}$$$. The items for each slot are pairwise distinct and are listed in the increasing order of their strength increase. So, $$$a_{i,1} &lt; a_{i,2} &lt; \\dots &lt; a_{i,c_i}$$$.</p><p>For each slot Ivan chooses exactly one item. Let the chosen item for the $$$i$$$-th slot be the $$$b_i$$$-th item in the corresponding list. The sequence of choices $$$[b_1, b_2, \\dots, b_n]$$$ is called <span class=\"tex-font-style-it\">a build</span>.</p><p>The strength of a build is the sum of the strength increases of the items in it. Some builds are banned from the game. There is a list of $$$m$$$ pairwise distinct banned builds. It's guaranteed that there's at least one build that's not banned.</p><p>What is the build with the maximum strength that is not banned from the game? If there are multiple builds with maximum strength, print any of them.</p>",
    "inputSpecification": "<p>The first line contains a single integer $$$n$$$ ($$$1 \\le n \\le 10$$$)\u00a0\u2014 the number of equipment slots.</p><p>The $$$i$$$-th of the next $$$n$$$ lines contains the description of the items for the $$$i$$$-th slot. First, one integer $$$c_i$$$ ($$$1 \\le c_i \\le 2 \\cdot 10^5$$$)\u00a0\u2014 the number of items for the $$$i$$$-th slot. Then $$$c_i$$$ integers $$$a_{i,1}, a_{i,2}, \\dots, a_{i,c_i}$$$ ($$$1 \\le a_{i,1} &lt; a_{i,2} &lt; \\dots &lt; a_{i,c_i} \\le 10^8$$$).</p><p>The sum of $$$c_i$$$ doesn't exceed $$$2 \\cdot 10^5$$$.</p><p>The next line contains a single integer $$$m$$$ ($$$0 \\le m \\le 10^5$$$)\u00a0\u2014 the number of banned builds.</p><p>Each of the next $$$m$$$ lines contains a description of a banned build\u00a0\u2014 a sequence of $$$n$$$ integers $$$b_1, b_2, \\dots, b_n$$$ ($$$1 \\le b_i \\le c_i$$$).</p><p>The builds are pairwise distinct, and there's at least one build that's not banned.</p>",
    "outputSpecification": "<p>Print the build with the maximum strength that is not banned from the game. If there are multiple builds with maximum strength, print any of them.</p>",
    "samples": [
        {
            "input": "\n3\n3 1 2 3\n2 1 5\n3 2 4 6\n2\n3 2 3\n3 2 2\n",
            "output": "\n2 2 3 \n"
        },
        {
            "input": "\n3\n3 1 2 3\n2 1 5\n3 2 4 6\n2\n3 2 3\n2 2 3\n",
            "output": "\n1 2 3\n"
        },
        {
            "input": "\n3\n3 1 2 3\n2 1 5\n3 2 4 6\n2\n3 2 3\n2 2 3\n",
            "output": "\n3 2 2\n"
        },
        {
            "input": "\n4\n1 10\n1 4\n1 7\n1 3\n0\n",
            "output": "\n1 1 1 1 \n"
        }
    ],
    "note": null,
    "contestId": 1574,
    "index": "D",
    "name": "The Strongest Build",
    "type": "PROGRAMMING",
    "tags": [
        "binary search",
        "brute force",
        "data structures",
        "dfs and similar",
        "graphs",
        "greedy",
        "hashing",
        "implementation"
    ],
    "solvedCount": 4380
}