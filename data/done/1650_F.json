{
    "title": "F. Vitaly and Advanced Useless Algorithms",
    "timeLimit": {
        "value": 2.0,
        "unit": "seconds"
    },
    "memoryLimit": {
        "value": 256.0,
        "unit": "megabytes"
    },
    "statement": "<p>Vitaly enrolled in the course Advanced Useless Algorithms. The course consists of $$$n$$$ tasks. Vitaly calculated that he has $$$a_i$$$ hours to do the task $$$i$$$ from the day he enrolled in the course. That is, the deadline before the $$$i$$$-th task is $$$a_i$$$ hours. The array $$$a$$$ is sorted in ascending order, in other words, the job numbers correspond to the order in which the assignments are turned in.</p><p>Vitaly does everything conscientiously, so he wants to complete <span class=\"tex-font-style-bf\">each</span> task by $$$100$$$ percent, <span class=\"tex-font-style-bf\">or more</span>. Initially, his completion rate for each task is $$$0$$$ percent.</p><p>Vitaly has $$$m$$$ training options, each option can be used <span class=\"tex-font-style-bf\">not more than</span> once. The $$$i$$$th option is characterized by three integers: $$$e_i, t_i$$$ and $$$p_i$$$. If Vitaly uses the $$$i$$$th option, then after $$$t_i$$$ hours (from the current moment) he will increase the progress of the task $$$e_i$$$ by $$$p_i$$$ percent. </p><p>For example, let Vitaly have $$$3$$$ of tasks to complete. Let the array $$$a$$$ have the form: $$$a = [5, 7, 8]$$$. Suppose Vitaly has $$$5$$$ of options: $$$[e_1=1, t_1=1, p_1=30]$$$, $$$[e_2=2, t_2=3, p_2=50]$$$, $$$[e_3=2, t_3=3, p_3=100]$$$, $$$[e_4=1, t_4=1, p_4=80]$$$, $$$[e_5=3, t_5=3, p_5=100]$$$. </p><p>Then, if Vitaly prepares in the following way, he will be able to complete everything in time: </p><ul> <li> Vitaly chooses the $$$4$$$-th option. Then in $$$1$$$ hour, he will complete the $$$1$$$-st task at $$$80$$$ percent. He still has $$$4$$$ hours left before the deadline for the $$$1$$$-st task. </li><li> Vitaly chooses the $$$3$$$-rd option. Then in $$$3$$$ hours, he will complete the $$$2$$$-nd task in its entirety. He has another $$$1$$$ hour left before the deadline for the $$$1$$$-st task and $$$4$$$ hours left before the deadline for the $$$3$$$-rd task. </li><li> Vitaly chooses the $$$1$$$-st option. Then after $$$1$$$ hour, he will complete the $$$1$$$-st task for $$$110$$$ percent, which means that he will complete the $$$1$$$-st task just in time for the deadline. </li><li> Vitaly chooses the $$$5$$$-th option. He will complete the $$$3$$$-rd task for $$$2$$$ hours, and after another $$$1$$$ hour, Vitaly will complete the $$$3$$$-rd task in its entirety. </li></ul><p>Thus, Vitaly has managed to complete the course completely and on time, using the $$$4$$$ options.</p><p>Help Vitaly\u00a0\u2014 print the options for Vitaly to complete the tasks in the correct order. Please note: each option can be used <span class=\"tex-font-style-bf\">not more than</span> once. If there are several possible answers, it is allowed to output any of them.</p>",
    "inputSpecification": "<p>The first line of input data contains an integer $$$T$$$ ($$$1 \\le T \\le 10^4$$$)\u00a0\u2014the number of input test cases in the test.</p><p>The descriptions of the input test case follow.</p><p>The first line of each test case description contains two integers $$$n$$$ and $$$m$$$ ($$$1 \\le n,m \\le 10^5$$$)\u00a0\u2014the number of jobs and the number of training options, respectively.</p><p>The next line contains $$$n$$$ numbers $$$a_1, a_2, \\dots, a_n$$$ ($$$1 \\le a_i \\le 10^9$$$)\u00a0\u2014 the time before the deadline of job $$$i$$$. The array values\u00a0\u2014 are non-decreasing, that is $$$a_1 \\le a_2 \\le \\dots \\le a_n$$$.</p><p>The following $$$m$$$ lines contain triples of numbers $$$e_i, t_i, p_i$$$ ($$$1 \\le e_i \\le n$$$, $$$1 \\le t_i \\le 10^9$$$, $$$1 \\le p_i \\le 100$$$)\u00a0\u2014 if Vitaly chooses this option, then after $$$t_i$$$ hours he will increase the progress of the task $$$e_i$$$ by $$$p_i$$$ percent. The options are numbered from $$$1$$$ to $$$m$$$ in order in the input data.</p><p>It is guaranteed that the sum of $$$n+m$$$ on all test cases does not exceed $$$2 \\cdot 10^5$$$.</p>",
    "outputSpecification": "<p>For each test case, print on the first line the number $$$k$$$, meaning that for $$$k$$$ of options, Vitaly will be able to complete each task by $$$100$$$ percent or more on time. The options should not be repeated. Or print <span class=\"tex-font-style-tt\">-1</span> if Vitaly is unable to complete all tasks in time.</p><p>If there is an answer, on the next line print $$$k$$$ of different integers from $$$1$$$ to $$$m$$$\u00a0\u2014 the numbers of the options in the order you want. If there is more than one answer, it is allowed to print <span class=\"tex-font-style-bf\">any</span> of them.</p>",
    "samples": [
        {
            "input": "\n<div class=\"test-example-line test-example-line-even test-example-line-0\">5</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">3 5</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">5 7 8</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">1 1 30</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">2 3 50</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">2 3 100</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">1 1 80</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">3 3 100</div><div class=\"test-example-line test-example-line-even test-example-line-2\">1 5</div><div class=\"test-example-line test-example-line-even test-example-line-2\">51</div><div class=\"test-example-line test-example-line-even test-example-line-2\">1 36 91</div><div class=\"test-example-line test-example-line-even test-example-line-2\">1 8 40</div><div class=\"test-example-line test-example-line-even test-example-line-2\">1 42 83</div><div class=\"test-example-line test-example-line-even test-example-line-2\">1 3 45</div><div class=\"test-example-line test-example-line-even test-example-line-2\">1 13 40</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">2 9</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">9 20</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">2 8 64</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">2 7 64</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">1 20 56</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">2 8 76</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">2 20 48</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">1 2 89</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">1 3 38</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">2 18 66</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">1 7 51</div><div class=\"test-example-line test-example-line-even test-example-line-4\">3 2</div><div class=\"test-example-line test-example-line-even test-example-line-4\">7 18 33</div><div class=\"test-example-line test-example-line-even test-example-line-4\">1 5 80</div><div class=\"test-example-line test-example-line-even test-example-line-4\">3 4 37</div><div class=\"test-example-line test-example-line-odd test-example-line-5\">2 5</div><div class=\"test-example-line test-example-line-odd test-example-line-5\">569452312 703565975</div><div class=\"test-example-line test-example-line-odd test-example-line-5\">1 928391659 66</div><div class=\"test-example-line test-example-line-odd test-example-line-5\">1 915310 82</div><div class=\"test-example-line test-example-line-odd test-example-line-5\">2 87017081 92</div><div class=\"test-example-line test-example-line-odd test-example-line-5\">1 415310 54</div><div class=\"test-example-line test-example-line-odd test-example-line-5\">2 567745964 82</div>",
            "output": "\n4\n1 4 3 5 \n3\n2 4 5 \n4\n6 7 1 2 \n-1\n4\n2 4 3 5 \n"
        },
        {
            "input": "\n<div class=\"test-example-line test-example-line-even test-example-line-0\">3</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">3 9</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">20 31 40</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">1 9 64</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">3 17 100</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">3 9 59</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">3 18 57</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">3 20 49</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">2 20 82</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">2 14 95</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">1 8 75</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">2 16 67</div><div class=\"test-example-line test-example-line-even test-example-line-2\">2 6</div><div class=\"test-example-line test-example-line-even test-example-line-2\">20 36</div><div class=\"test-example-line test-example-line-even test-example-line-2\">2 2 66</div><div class=\"test-example-line test-example-line-even test-example-line-2\">2 20 93</div><div class=\"test-example-line test-example-line-even test-example-line-2\">1 3 46</div><div class=\"test-example-line test-example-line-even test-example-line-2\">1 10 64</div><div class=\"test-example-line test-example-line-even test-example-line-2\">2 8 49</div><div class=\"test-example-line test-example-line-even test-example-line-2\">2 18 40</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">1 1</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">1000000000</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">1 1000000000 100</div>",
            "output": "\n-1\n4\n3 4 1 5 \n1\n1 \n"
        }
    ],
    "note": null,
    "contestId": 1650,
    "index": "F",
    "name": "Vitaly and Advanced Useless Algorithms",
    "type": "PROGRAMMING",
    "tags": [
        "dp",
        "greedy",
        "implementation"
    ],
    "solvedCount": 1393
}