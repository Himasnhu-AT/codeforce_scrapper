{
    "title": "C. Painting the Fence",
    "timeLimit": {
        "value": 2.0,
        "unit": "seconds"
    },
    "memoryLimit": {
        "value": 256.0,
        "unit": "megabytes"
    },
    "statement": "<p>You have a long fence which consists of $$$n$$$ sections. Unfortunately, it is not painted, so you decided to hire $$$q$$$ painters to paint it. $$$i$$$-th painter will paint all sections $$$x$$$ such that $$$l_i \\le x \\le r_i$$$.</p><p>Unfortunately, you are on a tight budget, so you may hire only $$$q - 2$$$ painters. Obviously, only painters you hire will do their work.</p><p>You want to maximize the number of painted sections if you choose $$$q - 2$$$ painters optimally. A section is considered painted if at least one painter paints it.</p>",
    "inputSpecification": "<p>The first line contains two integers $$$n$$$ and $$$q$$$ ($$$3 \\le n, q \\le 5000$$$) \u2014 the number of sections and the number of painters availible for hire, respectively.</p><p>Then $$$q$$$ lines follow, each describing one of the painters: $$$i$$$-th line contains two integers $$$l_i$$$ and $$$r_i$$$ ($$$1 \\le l_i \\le r_i \\le n$$$).</p>",
    "outputSpecification": "<p>Print one integer \u2014 maximum number of painted sections if you hire $$$q - 2$$$ painters.</p>",
    "samples": [
        {
            "input": "\n7 5\n1 4\n4 5\n5 6\n6 7\n3 5\n",
            "output": "\n7\n"
        },
        {
            "input": "\n4 3\n1 1\n2 2\n3 4\n",
            "output": "\n2\n"
        },
        {
            "input": "\n4 4\n1 1\n2 2\n2 3\n3 4\n",
            "output": "\n3\n"
        }
    ],
    "note": null,
    "contestId": 1132,
    "index": "C",
    "name": "Painting the Fence",
    "type": "PROGRAMMING",
    "tags": [
        "brute force"
    ],
    "solvedCount": 5351
}