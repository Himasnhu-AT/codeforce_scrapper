{
    "title": "E. Removing Graph",
    "timeLimit": {
        "value": 2.0,
        "unit": "seconds"
    },
    "memoryLimit": {
        "value": 256.0,
        "unit": "megabytes"
    },
    "statement": "<p>Alice and Bob are playing a game on a graph. They have an undirected graph without self-loops and multiple edges. All vertices of the graph have <span class=\"tex-font-style-bf\">degree equal to $$$2$$$</span>. The graph may consist of several components. Note that if such graph has $$$n$$$ vertices, it will have exactly $$$n$$$ edges.</p><p>Alice and Bob take turn. Alice goes first. In each turn, the player can choose $$$k$$$ ($$$l \\le k \\le r$$$; $$$l &lt; r$$$) vertices that form <span class=\"tex-font-style-bf\">a connected subgraph</span> and erase these vertices from the graph, including all incident edges.</p><p>The player who can't make a step loses.</p><p>For example, suppose they are playing on the given graph with given $$$l = 2$$$ and $$$r = 3$$$:</p><center> <img class=\"tex-graphics\" src=\"https://espresso.codeforces.com/f875bcaf87a1f81c770d9a24d25b0984d9b9f042.png\" style=\"max-width: 100.0%;max-height: 100.0%;\"/> </center><p>A valid vertex set for Alice to choose at the first move is one of the following: </p><ul> <li> $$$\\{1, 2\\}$$$ </li><li> $$$\\{1, 3\\}$$$ </li><li> $$$\\{2, 3\\}$$$ </li><li> $$$\\{4, 5\\}$$$ </li><li> $$$\\{4, 6\\}$$$ </li><li> $$$\\{5, 6\\}$$$ </li><li> $$$\\{1, 2, 3\\}$$$ </li><li> $$$\\{4, 5, 6\\}$$$ </li></ul> Suppose, Alice chooses subgraph $$$\\{4, 6\\}$$$.<p>Then a valid vertex set for Bob to choose at the first move is one of the following: </p><ul> <li> $$$\\{1, 2\\}$$$ </li><li> $$$\\{1, 3\\}$$$ </li><li> $$$\\{2, 3\\}$$$ </li><li> $$$\\{1, 2, 3\\}$$$ </li></ul> Suppose, Bob chooses subgraph $$$\\{1, 2, 3\\}$$$.<p>Alice can't make a move, so she loses.</p><p>You are given a graph of size $$$n$$$ and integers $$$l$$$ and $$$r$$$. Who will win if both Alice and Bob play optimally.</p>",
    "inputSpecification": "<p>The first line contains three integers $$$n$$$, $$$l$$$ and $$$r$$$ ($$$3 \\le n \\le 2 \\cdot 10^5$$$; $$$1 \\le l &lt; r \\le n$$$)\u00a0\u2014 the number of vertices in the graph, and the constraints on the number of vertices Alice or Bob can choose in one move.</p><p>Next $$$n$$$ lines contains edges of the graph: one edge per line. The $$$i$$$-th line contains two integers $$$u_i$$$ and $$$v_i$$$ ($$$1 \\le u_i, v_i \\le n$$$; $$$u_i \\neq v_i$$$)\u00a0\u2014 description of the $$$i$$$-th edge.</p><p>It's guaranteed that the degree of each vertex of the given graph is equal to $$$2$$$.</p>",
    "outputSpecification": "<p>Print <span class=\"tex-font-style-tt\">Alice</span> (case-insensitive) if Alice wins, or <span class=\"tex-font-style-tt\">Bob</span> otherwise.</p>",
    "samples": [
        {
            "input": "\n6 2 3\n1 2\n2 3\n3 1\n4 5\n5 6\n6 4\n",
            "output": "\nBob\n"
        },
        {
            "input": "\n6 1 2\n1 2\n2 3\n3 1\n4 5\n5 6\n6 4\n",
            "output": "\nBob\n"
        },
        {
            "input": "\n12 1 3\n1 2\n2 3\n3 1\n4 5\n5 6\n6 7\n7 4\n8 9\n9 10\n10 11\n11 12\n12 8\n",
            "output": "\nAlice\n"
        }
    ],
    "note": "<p>In the first test the same input as in legend is shown.</p><p>In the second test the same graph as in legend is shown, but with $$$l = 1$$$ and $$$r = 2$$$.</p>",
    "contestId": 1823,
    "index": "E",
    "name": "Removing Graph",
    "type": "PROGRAMMING",
    "tags": [
        "brute force",
        "dp",
        "games",
        "graphs",
        "math"
    ],
    "solvedCount": 1203
}