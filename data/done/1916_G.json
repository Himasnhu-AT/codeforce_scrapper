{
    "title": "G. Optimizations From Chelsu",
    "timeLimit": {
        "value": 2.0,
        "unit": "seconds"
    },
    "memoryLimit": {
        "value": 256.0,
        "unit": "megabytes"
    },
    "statement": "<p>You are given a tree with $$$n$$$ vertices, whose vertices are numbered from $$$1$$$ to $$$n$$$. Each edge is labeled with some integer $$$w_i$$$.</p><p>Define $$$len(u, v)$$$ as the number of edges in the simple path between vertices $$$u$$$ and $$$v$$$, and $$$gcd(u, v)$$$ as the Greatest Common Divisor of all numbers written on the edges of the simple path between vertices $$$u$$$ and $$$v$$$. For example, $$$len(u, u) = 0$$$ and $$$gcd(u, u) = 0$$$ for any $$$1 \\leq u \\leq n$$$.</p><p>You need to find the maximum value of $$$len(u, v) \\cdot gcd(u, v)$$$ over all pairs of vertices in the tree.</p>",
    "inputSpecification": "<p>Each test consists of multiple test cases. The first line contains a single integer $$$t$$$ ($$$1 \\leq t \\leq 10^4$$$)\u00a0\u2014 the number of test cases. This is followed by their description.</p><p>The first line of each test case contains the number $$$n$$$ ($$$2 \\leq n \\leq 10^5$$$)\u00a0\u2014 the number of vertices in the tree.</p><p>The next $$$n-1$$$ lines specify the edges in the format $$$u$$$, $$$v$$$, $$$w$$$ ($$$1 \\leq u, v \\leq n$$$, $$$1 \\leq w \\leq 10^{12}$$$).</p><p>It is guaranteed that the sum of $$$n$$$ over all test cases does not exceed $$$10^5$$$.</p>",
    "outputSpecification": "<p>For each test case, output a single number equal to the maximum value of $$$len(u, v) \\cdot gcd(u, v)$$$ over all pairs of vertices in the tree.</p>",
    "samples": [
        {
            "input": "\n<div class=\"test-example-line test-example-line-even test-example-line-0\">4</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">2</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">1 2 1000000000000</div><div class=\"test-example-line test-example-line-even test-example-line-2\">4</div><div class=\"test-example-line test-example-line-even test-example-line-2\">3 2 6</div><div class=\"test-example-line test-example-line-even test-example-line-2\">2 1 10</div><div class=\"test-example-line test-example-line-even test-example-line-2\">2 4 6</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">8</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">1 2 12</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">2 3 9</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">3 4 9</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">4 5 6</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">5 6 12</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">6 7 4</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">7 8 9</div><div class=\"test-example-line test-example-line-even test-example-line-4\">12</div><div class=\"test-example-line test-example-line-even test-example-line-4\">1 2 12</div><div class=\"test-example-line test-example-line-even test-example-line-4\">2 3 12</div><div class=\"test-example-line test-example-line-even test-example-line-4\">2 4 6</div><div class=\"test-example-line test-example-line-even test-example-line-4\">2 5 9</div><div class=\"test-example-line test-example-line-even test-example-line-4\">5 6 6</div><div class=\"test-example-line test-example-line-even test-example-line-4\">1 7 4</div><div class=\"test-example-line test-example-line-even test-example-line-4\">4 8 12</div><div class=\"test-example-line test-example-line-even test-example-line-4\">8 9 4</div><div class=\"test-example-line test-example-line-even test-example-line-4\">8 10 12</div><div class=\"test-example-line test-example-line-even test-example-line-4\">2 11 9</div><div class=\"test-example-line test-example-line-even test-example-line-4\">7 12 9</div>",
            "output": "\n1000000000000\n12\n18\n24\n"
        }
    ],
    "note": null,
    "contestId": 1916,
    "index": "G",
    "name": "Optimizations From Chelsu",
    "type": "PROGRAMMING",
    "tags": [
        "divide and conquer",
        "dp",
        "number theory",
        "trees"
    ],
    "solvedCount": 139
}