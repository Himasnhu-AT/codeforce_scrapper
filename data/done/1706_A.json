{
    "title": "A. Another String Minimization Problem",
    "timeLimit": {
        "value": 1.0,
        "unit": "second"
    },
    "memoryLimit": {
        "value": 256.0,
        "unit": "megabytes"
    },
    "statement": "<p>You have a sequence $$$a_1, a_2, \\ldots, a_n$$$ of length $$$n$$$, consisting of integers between $$$1$$$ and $$$m$$$. You also have a string $$$s$$$, consisting of $$$m$$$ characters <span class=\"tex-font-style-tt\">B</span>.</p><p>You are going to perform the following $$$n$$$ operations. </p><ul> <li> At the $$$i$$$-th ($$$1 \\le i \\le n$$$) operation, you replace either the $$$a_i$$$-th <span class=\"tex-font-style-bf\">or</span> the $$$(m + 1 - a_i)$$$-th character of $$$s$$$ with <span class=\"tex-font-style-tt\">A</span>. You can replace the character at any position multiple times through the operations. </li></ul><p>Find the lexicographically smallest string you can get after these operations.</p><p>A string $$$x$$$ is lexicographically smaller than a string $$$y$$$ of the same length if and only if in the first position where $$$x$$$ and $$$y$$$ differ, the string $$$x$$$ has a letter that appears earlier in the alphabet than the corresponding letter in $$$y$$$.</p>",
    "inputSpecification": "<p>The first line contains the number of test cases $$$t$$$ ($$$1 \\le t \\le 2000$$$).</p><p>The first line of each test case contains two integers $$$n$$$ and $$$m$$$ ($$$1 \\le n, m \\le 50$$$)\u00a0\u2014 the length of the sequence $$$a$$$ and the length of the string $$$s$$$ respectively.</p><p>The second line contains $$$n$$$ integers $$$a_1, a_2, \\ldots, a_n$$$ ($$$1 \\le a_i \\le m$$$)\u00a0\u2014 the sequence $$$a$$$.</p>",
    "outputSpecification": "<p>For each test case, print a string of length $$$m$$$\u00a0\u2014 the lexicographically smallest string you can get. Each character of the string should be either capital English letter <span class=\"tex-font-style-tt\">A</span> or capital English letter <span class=\"tex-font-style-tt\">B</span>.</p>",
    "samples": [
        {
            "input": "\n<div class=\"test-example-line test-example-line-even test-example-line-0\">6</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">4 5</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">1 1 3 1</div><div class=\"test-example-line test-example-line-even test-example-line-2\">1 5</div><div class=\"test-example-line test-example-line-even test-example-line-2\">2</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">4 1</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">1 1 1 1</div><div class=\"test-example-line test-example-line-even test-example-line-4\">2 4</div><div class=\"test-example-line test-example-line-even test-example-line-4\">1 3</div><div class=\"test-example-line test-example-line-odd test-example-line-5\">2 7</div><div class=\"test-example-line test-example-line-odd test-example-line-5\">7 5</div><div class=\"test-example-line test-example-line-even test-example-line-6\">4 5</div><div class=\"test-example-line test-example-line-even test-example-line-6\">5 5 3 5</div>",
            "output": "\nABABA\nBABBB\nA\nAABB\nABABBBB\nABABA\n"
        }
    ],
    "note": "<p>In the first test case, the sequence $$$a = [1, 1, 3, 1]$$$. One of the possible solutions is the following. </p><ul> <li> At the $$$1$$$-st operation, you can replace the $$$1$$$-st character of $$$s$$$ with <span class=\"tex-font-style-tt\">A</span>. After it, $$$s$$$ becomes <span class=\"tex-font-style-tt\"><span class=\"tex-font-style-underline\">A</span>BBBB</span>. </li><li> At the $$$2$$$-nd operation, you can replace the $$$5$$$-th character of $$$s$$$ with <span class=\"tex-font-style-tt\">A</span> (since $$$m+1-a_2=5$$$). After it, $$$s$$$ becomes <span class=\"tex-font-style-tt\">ABBB<span class=\"tex-font-style-underline\">A</span></span>. </li><li> At the $$$3$$$-rd operation, you can replace the $$$3$$$-rd character of $$$s$$$ with <span class=\"tex-font-style-tt\">A</span>. After it, $$$s$$$ becomes <span class=\"tex-font-style-tt\">AB<span class=\"tex-font-style-underline\">A</span>BA</span>. </li><li> At the $$$4$$$-th operation, you can replace the $$$1$$$-st character of $$$s$$$ with <span class=\"tex-font-style-tt\">A</span>. After it, $$$s$$$ remains equal to <span class=\"tex-font-style-tt\">ABABA</span>. </li></ul> The resulting string is <span class=\"tex-font-style-tt\">ABABA</span>. It is impossible to produce a lexicographically smaller string.<p>In the second test case, you are going to perform only one operation. You can replace either the $$$2$$$-nd character or $$$4$$$-th character of $$$s$$$ with <span class=\"tex-font-style-tt\">A</span>. You can get strings <span class=\"tex-font-style-tt\">BABBB</span> and <span class=\"tex-font-style-tt\">BBBAB</span> after the operation. The string <span class=\"tex-font-style-tt\">BABBB</span> is the lexicographically smallest among these strings.</p><p>In the third test case, the only string you can get is <span class=\"tex-font-style-tt\">A</span>.</p><p>In the fourth test case, you can replace the $$$1$$$-st and $$$2$$$-nd characters of $$$s$$$ with <span class=\"tex-font-style-tt\">A</span> to get <span class=\"tex-font-style-tt\">AABB</span>.</p><p>In the fifth test case, you can replace the $$$1$$$-st and $$$3$$$-rd characters of $$$s$$$ with <span class=\"tex-font-style-tt\">A</span> to get <span class=\"tex-font-style-tt\">ABABBBB</span>.</p>",
    "contestId": 1706,
    "index": "A",
    "name": "Another String Minimization Problem",
    "type": "PROGRAMMING",
    "tags": [
        "2-sat",
        "constructive algorithms",
        "greedy",
        "string suffix structures",
        "strings"
    ],
    "solvedCount": 22639
}