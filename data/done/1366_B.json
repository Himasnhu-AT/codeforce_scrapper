{
    "title": "B. Shuffle",
    "timeLimit": {
        "value": 1.0,
        "unit": "second"
    },
    "memoryLimit": {
        "value": 256.0,
        "unit": "megabytes"
    },
    "statement": "<p>You are given an array consisting of $$$n$$$ integers $$$a_1$$$, $$$a_2$$$, ..., $$$a_n$$$. Initially $$$a_x = 1$$$, all other elements are equal to $$$0$$$.</p><p>You have to perform $$$m$$$ operations. During the $$$i$$$-th operation, you choose two indices $$$c$$$ and $$$d$$$ such that $$$l_i \\le c, d \\le r_i$$$, and swap $$$a_c$$$ and $$$a_d$$$.</p><p>Calculate the number of indices $$$k$$$ such that it is possible to choose the operations so that $$$a_k = 1$$$ in the end.</p>",
    "inputSpecification": "<p>The first line contains a single integer $$$t$$$ ($$$1 \\le t \\le 100$$$)\u00a0\u2014 the number of test cases. Then the description of $$$t$$$ testcases follow.</p><p>The first line of each test case contains three integers $$$n$$$, $$$x$$$ and $$$m$$$ ($$$1 \\le n \\le 10^9$$$; $$$1 \\le m \\le 100$$$; $$$1 \\le x \\le n$$$).</p><p>Each of next $$$m$$$ lines contains the descriptions of the operations; the $$$i$$$-th line contains two integers $$$l_i$$$ and $$$r_i$$$ ($$$1 \\le l_i \\le r_i \\le n$$$).</p>",
    "outputSpecification": "<p>For each test case print one integer \u2014 the number of indices $$$k$$$ such that it is possible to choose the operations so that $$$a_k = 1$$$ in the end.</p>",
    "samples": [
        {
            "input": "\n3\n6 4 3\n1 6\n2 3\n5 5\n4 1 2\n2 4\n1 2\n3 3 2\n2 3\n1 2\n",
            "output": "\n6\n2\n3\n"
        }
    ],
    "note": "<p>In the first test case, it is possible to achieve $$$a_k = 1$$$ for every $$$k$$$. To do so, you may use the following operations:</p><ol> <li> swap $$$a_k$$$ and $$$a_4$$$; </li><li> swap $$$a_2$$$ and $$$a_2$$$; </li><li> swap $$$a_5$$$ and $$$a_5$$$. </li></ol><p>In the second test case, only $$$k = 1$$$ and $$$k = 2$$$ are possible answers. To achieve $$$a_1 = 1$$$, you have to swap $$$a_1$$$ and $$$a_1$$$ during the second operation. To achieve $$$a_2 = 1$$$, you have to swap $$$a_1$$$ and $$$a_2$$$ during the second operation.</p>",
    "contestId": 1366,
    "index": "B",
    "name": "Shuffle",
    "type": "PROGRAMMING",
    "tags": [
        "math",
        "two pointers"
    ],
    "solvedCount": 19812
}