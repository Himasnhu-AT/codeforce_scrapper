{
    "title": "B. Decode String",
    "timeLimit": {
        "value": 1.0,
        "unit": "second"
    },
    "memoryLimit": {
        "value": 256.0,
        "unit": "megabytes"
    },
    "statement": "<p>Polycarp has a string $$$s$$$ consisting of lowercase Latin letters.</p><p>He encodes it using the following algorithm.</p><p>He goes through the letters of the string $$$s$$$ from left to right and for each letter Polycarp considers its number in the alphabet:</p><ul> <li> if the letter number is single-digit number (less than $$$10$$$), then just writes it out; </li><li> if the letter number is a two-digit number (greater than or equal to $$$10$$$), then it writes it out and adds the number <span class=\"tex-font-style-tt\">0</span> after. </li></ul><p>For example, if the string $$$s$$$ is <span class=\"tex-font-style-tt\">code</span>, then Polycarp will encode this string as follows:</p><ul> <li> '<span class=\"tex-font-style-tt\">c</span>'\u00a0\u2014 is the $$$3$$$-rd letter of the alphabet. Consequently, Polycarp adds <span class=\"tex-font-style-tt\">3</span> to the code (the code becomes equal to <span class=\"tex-font-style-tt\">3</span>); </li><li> '<span class=\"tex-font-style-tt\">o</span>'\u00a0\u2014 is the $$$15$$$-th letter of the alphabet. Consequently, Polycarp adds <span class=\"tex-font-style-tt\">15</span> to the code and also <span class=\"tex-font-style-tt\">0</span> (the code becomes <span class=\"tex-font-style-tt\">3150</span>); </li><li> '<span class=\"tex-font-style-tt\">d</span>'\u00a0\u2014 is the $$$4$$$-th letter of the alphabet. Consequently, Polycarp adds <span class=\"tex-font-style-tt\">4</span> to the code (the code becomes <span class=\"tex-font-style-tt\">31504</span>); </li><li> '<span class=\"tex-font-style-tt\">e</span>'\u00a0\u2014 is the $$$5$$$-th letter of the alphabet. Therefore, Polycarp adds <span class=\"tex-font-style-tt\">5</span> to the code (the code becomes <span class=\"tex-font-style-tt\">315045</span>). </li></ul><p>Thus, code of string <span class=\"tex-font-style-tt\">code</span> is <span class=\"tex-font-style-tt\">315045</span>.</p><p>You are given a string $$$t$$$ resulting from encoding the string $$$s$$$. Your task is to decode it (get the original string $$$s$$$ by $$$t$$$).</p>",
    "inputSpecification": "<p>The first line of the input contains an integer $$$q$$$ ($$$1 \\le q \\le 10^4$$$) \u2014 the number of test cases in the input.</p><p>The descriptions of the test cases follow.</p><p>The first line of description of each test case contains one integer $$$n$$$ ($$$1 \\le n \\le 50$$$) \u2014 the length of the given code.</p><p>The second line of the description of each test case contains a string $$$t$$$ of length $$$n$$$ \u2014 the given code. It is guaranteed that there exists such a string of lowercase Latin letters, as a result of encoding which the string $$$t$$$ is obtained.</p>",
    "outputSpecification": "<p>For each test case output the required string $$$s$$$ \u2014 the string that gives string $$$t$$$ as the result of encoding. It is guaranteed that such a string always exists. It can be shown that such a string is always unique.</p>",
    "samples": [
        {
            "input": "\n<div class=\"test-example-line test-example-line-even test-example-line-0\">9</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">6</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">315045</div><div class=\"test-example-line test-example-line-even test-example-line-2\">4</div><div class=\"test-example-line test-example-line-even test-example-line-2\">1100</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">7</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">1213121</div><div class=\"test-example-line test-example-line-even test-example-line-4\">6</div><div class=\"test-example-line test-example-line-even test-example-line-4\">120120</div><div class=\"test-example-line test-example-line-odd test-example-line-5\">18</div><div class=\"test-example-line test-example-line-odd test-example-line-5\">315045615018035190</div><div class=\"test-example-line test-example-line-even test-example-line-6\">7</div><div class=\"test-example-line test-example-line-even test-example-line-6\">1111110</div><div class=\"test-example-line test-example-line-odd test-example-line-7\">7</div><div class=\"test-example-line test-example-line-odd test-example-line-7\">1111100</div><div class=\"test-example-line test-example-line-even test-example-line-8\">5</div><div class=\"test-example-line test-example-line-even test-example-line-8\">11111</div><div class=\"test-example-line test-example-line-odd test-example-line-9\">4</div><div class=\"test-example-line test-example-line-odd test-example-line-9\">2606</div>",
            "output": "\ncode\naj\nabacaba\nll\ncodeforces\naaaak\naaaaj\naaaaa\nzf\n"
        }
    ],
    "note": "<p>The first test case is explained above.</p><p>In the second test case, the answer is <span class=\"tex-font-style-tt\">aj</span>. Indeed, the number of the letter <span class=\"tex-font-style-tt\">a</span> is equal to $$$1$$$, so <span class=\"tex-font-style-tt\">1</span> will be appended to the code. The number of the letter <span class=\"tex-font-style-tt\">j</span> is $$$10$$$, so <span class=\"tex-font-style-tt\">100</span> will be appended to the code. The resulting code is <span class=\"tex-font-style-tt\">1100</span>.</p><p>There are no zeros in the third test case, which means that the numbers of all letters are less than $$$10$$$ and are encoded as one digit. The original string is <span class=\"tex-font-style-tt\">abacaba</span>.</p><p>In the fourth test case, the string $$$s$$$ is equal to <span class=\"tex-font-style-tt\">ll</span>. The letter <span class=\"tex-font-style-tt\">l</span> has the number $$$12$$$ and is encoded as <span class=\"tex-font-style-tt\">120</span>. So <span class=\"tex-font-style-tt\">ll</span> is indeed <span class=\"tex-font-style-tt\">120120</span>.</p>",
    "contestId": 1729,
    "index": "B",
    "name": "Decode String",
    "type": "PROGRAMMING",
    "tags": [
        "greedy",
        "strings"
    ],
    "solvedCount": 29564
}