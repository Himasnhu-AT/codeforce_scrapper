{
    "title": "G. Olympiad Training",
    "timeLimit": {
        "value": 1.0,
        "unit": "second"
    },
    "memoryLimit": {
        "value": 256.0,
        "unit": "megabytes"
    },
    "statement": "<p>Anton decided to get ready for an Olympiad in Informatics. Ilya prepared $$$n$$$ tasks for him to solve. It is possible to submit the solution for the $$$i$$$-th task in the first $$$d_{i}$$$ days only. Anton <span class=\"tex-font-style-bf\">cannot</span> solve more than one task a day. Ilya estimated the usefulness of the $$$i$$$-th tasks as $$$r_{i}$$$ and divided the tasks into three topics, the topic of the $$$i$$$-th task is $$$type_{i}$$$.</p><p>Anton wants to solve exactly $$$a$$$ tasks on the first topic, $$$b$$$ tasks on the second topic and $$$c$$$ tasks on the third topic. Tell Anton if it is possible to do so, and if it is, calculate the maximum total usefulness of the tasks he may solve.</p>",
    "inputSpecification": "<p>The first line of input contains a single integer $$$t$$$ ($$$1 \\le t \\le 10^4$$$)\u00a0\u2014 the number of test cases.</p><p>The first line of each test case contains four integers $$$n, a, b, c$$$ ($$$1 \\le n \\le 10^5$$$, $$$0 \\le a, b, c \\le n$$$).</p><p>The following $$$n$$$ lines contain three integers each\u00a0\u2014 $$$r_i, type_i, d_i$$$ ($$$0 \\le r_i \\le 10^{9}$$$, $$$1 \\le type_i \\le 3$$$, $$$1 \\le d_i \\le n$$$).</p><p>The sum of $$$n$$$ over all test cases does not exceed $$$10^5$$$.</p>",
    "outputSpecification": "<p>For each test case print $$$-1$$$ if Anton cannot reach his goal; otherwise, print the maximum usefulness of the tasks he will solve.</p>",
    "samples": [
        {
            "input": "\n<div class=\"test-example-line test-example-line-even test-example-line-0\">4</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">4 1 1 0</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">1 2 1</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">1 1 1</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">0 1 2</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">1 2 2</div><div class=\"test-example-line test-example-line-even test-example-line-2\">3 1 1 1</div><div class=\"test-example-line test-example-line-even test-example-line-2\">1 1 2</div><div class=\"test-example-line test-example-line-even test-example-line-2\">7 2 1</div><div class=\"test-example-line test-example-line-even test-example-line-2\">9 3 2</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">4 2 1 0</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">100 2 1</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">5 2 3</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">7 1 2</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">5 1 2</div><div class=\"test-example-line test-example-line-even test-example-line-4\">5 1 1 1</div><div class=\"test-example-line test-example-line-even test-example-line-4\">10 3 1</div><div class=\"test-example-line test-example-line-even test-example-line-4\">9 2 3</div><div class=\"test-example-line test-example-line-even test-example-line-4\">20 1 1</div><div class=\"test-example-line test-example-line-even test-example-line-4\">16 1 4</div><div class=\"test-example-line test-example-line-even test-example-line-4\">1 3 4</div>",
            "output": "\n2\n-1\n17\n35\n"
        }
    ],
    "note": "<p>In the first test case from the sample test Anton can solve tasks $$$2$$$ and $$$4$$$.</p><p>In the second test case from the sample test it is impossible to fulfill Anton's wish.</p><p>In the third test case from the sample test it is optimal to solve tasks $$$2$$$, $$$3$$$ and $$$4$$$.</p><p>In the last test case from the sample test it is optimal to solve tasks $$$1$$$, $$$2$$$ and $$$4$$$.</p>",
    "contestId": 1746,
    "index": "G",
    "name": "Olympiad Training",
    "type": "PROGRAMMING",
    "tags": [
        "binary search",
        "data structures",
        "dp",
        "flows",
        "geometry",
        "implementation",
        "sortings"
    ],
    "solvedCount": 90
}