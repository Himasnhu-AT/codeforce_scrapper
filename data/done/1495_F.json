{
    "title": "F. Squares",
    "timeLimit": {
        "value": 2.0,
        "unit": "seconds"
    },
    "memoryLimit": {
        "value": 256.0,
        "unit": "megabytes"
    },
    "statement": "<p>There are $$$n$$$ squares drawn from left to right on the floor. The $$$i$$$-th square has three integers $$$p_i,a_i,b_i$$$, written on it. The sequence $$$p_1,p_2,\\dots,p_n$$$ forms a permutation.</p><p>Each round you will start from the leftmost square $$$1$$$ and jump to the right. If you are now on the $$$i$$$-th square, you can do one of the following two operations:</p><ol> <li> Jump to the $$$i+1$$$-th square and pay the cost $$$a_i$$$. If $$$i=n$$$, then you can end the round and pay the cost $$$a_i$$$. </li><li> Jump to the $$$j$$$-th square and pay the cost $$$b_i$$$, where $$$j$$$ is the leftmost square that satisfies $$$j &gt; i, p_j &gt; p_i$$$. If there is no such $$$j$$$ then you can end the round and pay the cost $$$b_i$$$. </li></ol><p>There are $$$q$$$ rounds in the game. To make the game more difficult, you need to maintain a square set $$$S$$$ (initially it is empty). You <span class=\"tex-font-style-bf\">must</span> pass through these squares during the round (other squares can also be passed through). The square set $$$S$$$ for the $$$i$$$-th round is obtained by adding or removing a square from the square set for the $$$(i-1)$$$-th round. </p><p>For each round find the minimum cost you should pay to end it.</p>",
    "inputSpecification": "<p>The first line contains two integers $$$n$$$, $$$q$$$ ($$$1\\le n,q\\le 2 \\cdot 10^5$$$) \u00a0\u2014 the number of squares and the number of rounds.</p><p>The second line contains $$$n$$$ distinct integers $$$p_1,p_2,\\dots,p_n$$$ ($$$1\\le p_i\\le n$$$). It is guaranteed that the sequence $$$p_1,p_2,\\dots,p_n$$$ forms a permutation.</p><p>The third line contains $$$n$$$ integers $$$a_1,a_2,\\ldots,a_n$$$ ($$$-10^9\\le a_i\\le 10^9$$$).</p><p>The fourth line contains $$$n$$$ integers $$$b_1,b_2,\\dots,b_n$$$ ($$$-10^9\\le b_i\\le 10^9$$$).</p><p>Then $$$q$$$ lines follow, $$$i$$$-th of them contains a single integer $$$x_i$$$ ($$$1\\le x_i\\le n$$$). If $$$x_i$$$ was in the set $$$S$$$ on the $$$(i-1)$$$-th round you should remove it, otherwise, you should add it.</p>",
    "outputSpecification": "<p>Print $$$q$$$ lines, each of them should contain a single integer \u00a0\u2014 the minimum cost you should pay to end the corresponding round.</p>",
    "samples": [
        {
            "input": "\n3 2\n2 1 3\n10 -5 4\n3 -2 3\n1\n2\n",
            "output": "\n6\n8\n"
        },
        {
            "input": "\n5 4\n2 1 5 3 4\n6 -5 3 -10 -1\n0 3 2 7 2\n1\n2\n3\n2\n",
            "output": "\n-8\n-7\n-7\n-8\n"
        }
    ],
    "note": "<p>Let's consider the character $$$T$$$ as the end of a round. Then we can draw two graphs for the first and the second test.</p><center> <img class=\"tex-graphics\" src=\"https://espresso.codeforces.com/49d77053fa9b533819aac71d56620e7383e050d9.png\" style=\"max-width: 100.0%;max-height: 100.0%;\"/> <img class=\"tex-graphics\" src=\"https://espresso.codeforces.com/1e0aab0ce61b43a9127fb22e8dd7255a712ca54e.png\" style=\"max-width: 100.0%;max-height: 100.0%;\"/> </center><p>In the first round of the first test, the set that you must pass through is $$$\\{1\\}$$$. The path you can use is $$$1\\to 3\\to T$$$ and its cost is $$$6$$$.</p><p>In the second round of the first test, the set that you must pass through is $$$\\{1,2\\}$$$. The path you can use is $$$1\\to 2\\to 3\\to T$$$ and its cost is $$$8$$$.</p>",
    "contestId": 1495,
    "index": "F",
    "name": "Squares",
    "type": "PROGRAMMING",
    "tags": [
        "constructive algorithms",
        "data structures",
        "dp",
        "graphs",
        "trees"
    ],
    "solvedCount": 283
}