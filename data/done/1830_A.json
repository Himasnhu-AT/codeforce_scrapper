{
    "title": "A. Copil Copac Draws Trees",
    "timeLimit": {
        "value": 3.0,
        "unit": "seconds"
    },
    "memoryLimit": {
        "value": 256.0,
        "unit": "megabytes"
    },
    "statement": "<p>Copil Copac is given a list of $$$n-1$$$ edges describing a tree of $$$n$$$ vertices. He decides to draw it using the following algorithm:</p><ul> <li> Step $$$0$$$: Draws the first vertex (vertex $$$1$$$). Go to step $$$1$$$. </li><li> Step $$$1$$$: For every edge in the input, in order: if the edge connects an already drawn vertex $$$u$$$ to an undrawn vertex $$$v$$$, he will draw the undrawn vertex $$$v$$$ and the edge. After checking every edge, go to step $$$2$$$. </li><li> Step $$$2$$$: If all the vertices are drawn, terminate the algorithm. Else, go to step $$$1$$$. </li></ul><p>The number of readings is defined as the number of times Copil Copac performs step $$$1$$$.</p><p>Find the number of readings needed by Copil Copac to draw the tree.</p>",
    "inputSpecification": "<p>Each test contains multiple test cases. The first line of input contains a single integer $$$t$$$ ($$$1 \\leq t \\leq 10^4$$$)\u00a0\u2014 the number of test cases. The description of test cases follows.</p><p>The first line of each test case contains a single integer $$$n$$$ ($$$2 \\le n \\le 2 \\cdot 10^5$$$)\u00a0\u2014 the number of vertices of the tree.</p><p>The following $$$n - 1$$$ lines of each test case contain two integers $$$u_i$$$ and $$$v_i$$$ ($$$1 \\le u_i, v_i \\le n$$$, $$$u_i \\neq v_i$$$)\u00a0\u2014 indicating that $$$(u_i,v_i)$$$ is the $$$i$$$-th edge in the list. It is guaranteed that the given edges form a tree.</p><p>It is guaranteed that the sum of $$$n$$$ over all test cases does not exceed $$$2 \\cdot 10^5$$$.</p>",
    "outputSpecification": "<p>For each test case, output the number of readings Copil Copac needs to draw the tree.</p>",
    "samples": [
        {
            "input": "\n<div class=\"test-example-line test-example-line-even test-example-line-0\">2</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">6</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">4 5</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">1 3</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">1 2</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">3 4</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">1 6</div><div class=\"test-example-line test-example-line-even test-example-line-2\">7</div><div class=\"test-example-line test-example-line-even test-example-line-2\">5 6</div><div class=\"test-example-line test-example-line-even test-example-line-2\">2 4</div><div class=\"test-example-line test-example-line-even test-example-line-2\">2 7</div><div class=\"test-example-line test-example-line-even test-example-line-2\">1 3</div><div class=\"test-example-line test-example-line-even test-example-line-2\">1 2</div><div class=\"test-example-line test-example-line-even test-example-line-2\">4 5</div>",
            "output": "\n2\n3\n"
        }
    ],
    "note": "<p>In the first test case:</p><p>After the first reading, the tree will look like this:</p><center> <img class=\"tex-graphics\" src=\"https://espresso.codeforces.com/ace2c0a6c05924fc17e6bb70c39711fd2fbc0cb2.png\" style=\"max-width: 100.0%;max-height: 100.0%;\"/> </center><p>After the second reading:</p><center> <img class=\"tex-graphics\" src=\"https://espresso.codeforces.com/0bc7aaeadd9535c2a6fb738f971a44352d30c06c.png\" style=\"max-width: 100.0%;max-height: 100.0%;\"/> </center><p>Therefore, Copil Copac needs $$$2$$$ readings to draw the tree.</p>",
    "contestId": 1830,
    "index": "A",
    "name": "Copil Copac Draws Trees",
    "type": "PROGRAMMING",
    "tags": [
        "dfs and similar",
        "dp",
        "graphs",
        "trees"
    ],
    "solvedCount": 12675
}