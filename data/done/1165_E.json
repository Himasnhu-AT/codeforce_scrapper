{
    "title": "E. Two Arrays and Sum of Functions",
    "timeLimit": {
        "value": 2.0,
        "unit": "seconds"
    },
    "memoryLimit": {
        "value": 256.0,
        "unit": "megabytes"
    },
    "statement": "<p>You are given two arrays $$$a$$$ and $$$b$$$, both of length $$$n$$$.</p><p>Let's define a function $$$f(l, r) = \\sum\\limits_{l \\le i \\le r} a_i \\cdot b_i$$$.</p><p>Your task is to reorder the elements (choose an arbitrary order of elements) of the array $$$b$$$ to minimize the value of $$$\\sum\\limits_{1 \\le l \\le r \\le n} f(l, r)$$$. Since the answer can be very large, you have to print it modulo $$$998244353$$$. Note that you should <span class=\"tex-font-style-bf\">minimize the answer but not its remainder</span>.</p>",
    "inputSpecification": "<p>The first line of the input contains one integer $$$n$$$ ($$$1 \\le n \\le 2 \\cdot 10^5$$$) \u2014 the number of elements in $$$a$$$ and $$$b$$$.</p><p>The second line of the input contains $$$n$$$ integers $$$a_1, a_2, \\dots, a_n$$$ ($$$1 \\le a_i \\le 10^6$$$), where $$$a_i$$$ is the $$$i$$$-th element of $$$a$$$.</p><p>The third line of the input contains $$$n$$$ integers $$$b_1, b_2, \\dots, b_n$$$ ($$$1 \\le b_j \\le 10^6$$$), where $$$b_j$$$ is the $$$j$$$-th element of $$$b$$$.</p>",
    "outputSpecification": "<p>Print one integer \u2014 the minimum possible value of $$$\\sum\\limits_{1 \\le l \\le r \\le n} f(l, r)$$$ after rearranging elements of $$$b$$$, taken modulo $$$998244353$$$. Note that you should <span class=\"tex-font-style-bf\">minimize the answer but not its remainder</span>.</p>",
    "samples": [
        {
            "input": "\n5\n1 8 7 2 4\n9 7 2 9 3\n",
            "output": "\n646\n"
        },
        {
            "input": "\n1\n1000000\n1000000\n",
            "output": "\n757402647\n"
        },
        {
            "input": "\n2\n1 3\n4 2\n",
            "output": "\n20\n"
        }
    ],
    "note": null,
    "contestId": 1165,
    "index": "E",
    "name": "Two Arrays and Sum of Functions",
    "type": "PROGRAMMING",
    "tags": [
        "greedy",
        "math",
        "sortings"
    ],
    "solvedCount": 8028
}