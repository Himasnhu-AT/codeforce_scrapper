{
    "title": "C. Sasha and Array",
    "timeLimit": {
        "value": 5.0,
        "unit": "seconds"
    },
    "memoryLimit": {
        "value": 256.0,
        "unit": "megabytes"
    },
    "statement": "<p>Sasha has an array of integers <span class=\"tex-span\"><i>a</i><sub class=\"lower-index\">1</sub>,\u2009<i>a</i><sub class=\"lower-index\">2</sub>,\u2009...,\u2009<i>a</i><sub class=\"lower-index\"><i>n</i></sub></span>. You have to perform <span class=\"tex-span\"><i>m</i></span> queries. There might be queries of two types:</p><ol> <li> <span class=\"tex-font-style-tt\">1 l r x</span>\u00a0\u2014 increase all integers on the segment from <span class=\"tex-span\"><i>l</i></span> to <span class=\"tex-span\"><i>r</i></span> by values <span class=\"tex-span\"><i>x</i></span>; </li><li> <span class=\"tex-font-style-tt\">2 l r</span>\u00a0\u2014 find <img align=\"middle\" class=\"tex-formula\" src=\"https://espresso.codeforces.com/ee0d345d55c139544cd6fc126b63aa5ece538eee.png\" style=\"max-width: 100.0%;max-height: 100.0%;\"/>, where <span class=\"tex-span\"><i>f</i>(<i>x</i>)</span> is the <span class=\"tex-span\"><i>x</i></span>-th Fibonacci number. As this number may be large, you only have to find it modulo <span class=\"tex-span\">10<sup class=\"upper-index\">9</sup>\u2009+\u20097</span>. </li></ol><p>In this problem we define Fibonacci numbers as follows: <span class=\"tex-span\"><i>f</i>(1)\u2009=\u20091</span>, <span class=\"tex-span\"><i>f</i>(2)\u2009=\u20091</span>, <span class=\"tex-span\"><i>f</i>(<i>x</i>)\u2009=\u2009<i>f</i>(<i>x</i>\u2009-\u20091)\u2009+\u2009<i>f</i>(<i>x</i>\u2009-\u20092)</span> for all <span class=\"tex-span\"><i>x</i>\u2009&gt;\u20092</span>.</p><p>Sasha is a very talented boy and he managed to perform all queries in five seconds. Will you be able to write the program that performs as well as Sasha?</p>",
    "inputSpecification": "<p>The first line of the input contains two integers <span class=\"tex-span\"><i>n</i></span> and <span class=\"tex-span\"><i>m</i></span> (<span class=\"tex-span\">1\u2009\u2264\u2009<i>n</i>\u2009\u2264\u2009100\u2009000</span>, <span class=\"tex-span\">1\u2009\u2264\u2009<i>m</i>\u2009\u2264\u2009100\u2009000</span>)\u00a0\u2014 the number of elements in the array and the number of queries respectively.</p><p>The next line contains <span class=\"tex-span\"><i>n</i></span> integers <span class=\"tex-span\"><i>a</i><sub class=\"lower-index\">1</sub>,\u2009<i>a</i><sub class=\"lower-index\">2</sub>,\u2009...,\u2009<i>a</i><sub class=\"lower-index\"><i>n</i></sub></span> (<span class=\"tex-span\">1\u2009\u2264\u2009<i>a</i><sub class=\"lower-index\"><i>i</i></sub>\u2009\u2264\u200910<sup class=\"upper-index\">9</sup></span>).</p><p>Then follow <span class=\"tex-span\"><i>m</i></span> lines with queries descriptions. Each of them contains integers <span class=\"tex-span\"><i>tp</i><sub class=\"lower-index\"><i>i</i></sub></span>, <span class=\"tex-span\"><i>l</i><sub class=\"lower-index\"><i>i</i></sub></span>, <span class=\"tex-span\"><i>r</i><sub class=\"lower-index\"><i>i</i></sub></span> and may be <span class=\"tex-span\"><i>x</i><sub class=\"lower-index\"><i>i</i></sub></span> (<span class=\"tex-span\">1\u2009\u2264\u2009<i>tp</i><sub class=\"lower-index\"><i>i</i></sub>\u2009\u2264\u20092</span>, <span class=\"tex-span\">1\u2009\u2264\u2009<i>l</i><sub class=\"lower-index\"><i>i</i></sub>\u2009\u2264\u2009<i>r</i><sub class=\"lower-index\"><i>i</i></sub>\u2009\u2264\u2009<i>n</i></span>, <span class=\"tex-span\">1\u2009\u2264\u2009<i>x</i><sub class=\"lower-index\"><i>i</i></sub>\u2009\u2264\u200910<sup class=\"upper-index\">9</sup></span>). Here <span class=\"tex-span\"><i>tp</i><sub class=\"lower-index\"><i>i</i></sub>\u2009=\u20091</span> corresponds to the queries of the first type and <span class=\"tex-span\"><i>tp</i><sub class=\"lower-index\"><i>i</i></sub></span> corresponds to the queries of the second type.</p><p>It's guaranteed that the input will contains at least one query of the second type.</p>",
    "outputSpecification": "<p>For each query of the second type print the answer modulo <span class=\"tex-span\">10<sup class=\"upper-index\">9</sup>\u2009+\u20097</span>.</p>",
    "samples": [
        {
            "input": "5 4<br/>1 1 2 1 1<br/>2 1 5<br/>1 2 4 2<br/>2 2 4<br/>2 1 5<br/>",
            "output": "5<br/>7<br/>9<br/>"
        }
    ],
    "note": "<p>Initially, array <span class=\"tex-span\"><i>a</i></span> is equal to <span class=\"tex-span\">1</span>, <span class=\"tex-span\">1</span>, <span class=\"tex-span\">2</span>, <span class=\"tex-span\">1</span>, <span class=\"tex-span\">1</span>.</p><p>The answer for the first query of the second type is <span class=\"tex-span\"><i>f</i>(1)\u2009+\u2009<i>f</i>(1)\u2009+\u2009<i>f</i>(2)\u2009+\u2009<i>f</i>(1)\u2009+\u2009<i>f</i>(1)\u2009=\u20091\u2009+\u20091\u2009+\u20091\u2009+\u20091\u2009+\u20091\u2009=\u20095</span>. </p><p>After the query <span class=\"tex-font-style-tt\">1 2 4 2</span> array <span class=\"tex-span\"><i>a</i></span> is equal to <span class=\"tex-span\">1</span>, <span class=\"tex-span\">3</span>, <span class=\"tex-span\">4</span>, <span class=\"tex-span\">3</span>, <span class=\"tex-span\">1</span>.</p><p>The answer for the second query of the second type is <span class=\"tex-span\"><i>f</i>(3)\u2009+\u2009<i>f</i>(4)\u2009+\u2009<i>f</i>(3)\u2009=\u20092\u2009+\u20093\u2009+\u20092\u2009=\u20097</span>.</p><p>The answer for the third query of the second type is <span class=\"tex-span\"><i>f</i>(1)\u2009+\u2009<i>f</i>(3)\u2009+\u2009<i>f</i>(4)\u2009+\u2009<i>f</i>(3)\u2009+\u2009<i>f</i>(1)\u2009=\u20091\u2009+\u20092\u2009+\u20093\u2009+\u20092\u2009+\u20091\u2009=\u20099</span>.</p>",
    "contestId": 718,
    "index": "C",
    "name": "Sasha and Array",
    "type": "PROGRAMMING",
    "tags": [
        "data structures",
        "math",
        "matrices"
    ],
    "solvedCount": 3416
}