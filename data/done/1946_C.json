{
    "title": "C. Tree Cutting",
    "timeLimit": {
        "value": 3.0,
        "unit": "seconds"
    },
    "memoryLimit": {
        "value": 512.0,
        "unit": "megabytes"
    },
    "statement": "<p>You are given a tree with $$$n$$$ vertices.</p><p>Your task is to find the maximum number $$$x$$$ such that it is possible to remove exactly $$$k$$$ edges from this tree in such a way that the size of each remaining connected component$$$^{\\dagger}$$$ is at least $$$x$$$.</p><p>$$$^{\\dagger}$$$ Two vertices $$$v$$$ and $$$u$$$ are in the same connected component if there exists a sequence of numbers $$$t_1, t_2, \\ldots, t_k$$$ of arbitrary length $$$k$$$, such that $$$t_1 = v$$$, $$$t_k = u$$$, and for each $$$i$$$ from $$$1$$$ to $$$k - 1$$$, vertices $$$t_i$$$ and $$$t_{i+1}$$$ are connected by an edge.</p>",
    "inputSpecification": "<p>Each test consists of several sets of input data. The first line contains a single integer $$$t$$$ ($$$1 \\le t \\le 10^4$$$)\u00a0\u2014 the number of sets of input data. This is followed by a description of the sets of input data.</p><p>The first line of each set of input data contains two integers $$$n$$$ and $$$k$$$ ($$$1 \\le k &lt; n \\le 10^5$$$)\u00a0\u2014 the number of vertices in the tree and the number of edges to be removed.</p><p>Each of the next $$$n - 1$$$ lines of each set of input data contains two integers $$$v$$$ and $$$u$$$ ($$$1 \\le v, u \\le n$$$)\u00a0\u2014 the next edge of the tree.</p><p>It is guaranteed that the sum of the values of $$$n$$$ for all sets of input data does not exceed $$$10^5$$$.</p>",
    "outputSpecification": "<p>For each set of input data, output a single line containing the maximum number $$$x$$$ such that it is possible to remove exactly $$$k$$$ edges from the tree in such a way that the size of each remaining connected component is at least $$$x$$$.</p>",
    "samples": [
        {
            "input": "\n<div class=\"test-example-line test-example-line-even test-example-line-0\">6</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">5 1</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">1 2</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">1 3</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">3 4</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">3 5</div><div class=\"test-example-line test-example-line-even test-example-line-2\">2 1</div><div class=\"test-example-line test-example-line-even test-example-line-2\">1 2</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">6 1</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">1 2</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">2 3</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">3 4</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">4 5</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">5 6</div><div class=\"test-example-line test-example-line-even test-example-line-4\">3 1</div><div class=\"test-example-line test-example-line-even test-example-line-4\">1 2</div><div class=\"test-example-line test-example-line-even test-example-line-4\">1 3</div><div class=\"test-example-line test-example-line-odd test-example-line-5\">8 2</div><div class=\"test-example-line test-example-line-odd test-example-line-5\">1 2</div><div class=\"test-example-line test-example-line-odd test-example-line-5\">1 3</div><div class=\"test-example-line test-example-line-odd test-example-line-5\">2 4</div><div class=\"test-example-line test-example-line-odd test-example-line-5\">2 5</div><div class=\"test-example-line test-example-line-odd test-example-line-5\">3 6</div><div class=\"test-example-line test-example-line-odd test-example-line-5\">3 7</div><div class=\"test-example-line test-example-line-odd test-example-line-5\">3 8</div><div class=\"test-example-line test-example-line-even test-example-line-6\">6 2</div><div class=\"test-example-line test-example-line-even test-example-line-6\">1 2</div><div class=\"test-example-line test-example-line-even test-example-line-6\">2 3</div><div class=\"test-example-line test-example-line-even test-example-line-6\">1 4</div><div class=\"test-example-line test-example-line-even test-example-line-6\">4 5</div><div class=\"test-example-line test-example-line-even test-example-line-6\">5 6</div>",
            "output": "\n2\n1\n3\n1\n1\n2\n"
        }
    ],
    "note": "<p>The tree in the first set of input data:</p><center> <img class=\"tex-graphics\" src=\"https://espresso.codeforces.com/6267925127de4d26c592c2c57670592afafea67f.png\" style=\"max-width: 100.0%;max-height: 100.0%;\"/> </center><p>After removing the edge $$$1$$$\u00a0\u2014 $$$3$$$, the tree will look as follows:</p><center> <img class=\"tex-graphics\" src=\"https://espresso.codeforces.com/eff5a8cc21edcc08b4151404be9a4b84afd18bdd.png\" style=\"max-width: 100.0%;max-height: 100.0%;\"/> </center><p>The tree has split into two connected components. The first component consists of two vertices: $$$1$$$ and $$$2$$$. The second connected component consists of three vertices: $$$3, 4$$$ and $$$5$$$. In both connected components, there are at least two vertices. It can be shown that the answer $$$3$$$ is not achievable, so the answer is $$$2$$$.</p>",
    "contestId": 1946,
    "index": "C",
    "name": "Tree Cutting",
    "type": "PROGRAMMING",
    "tags": [
        "binary search",
        "dp",
        "greedy",
        "implementation",
        "trees"
    ],
    "solvedCount": 9547
}