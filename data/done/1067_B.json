{
    "title": "B. Multihedgehog",
    "timeLimit": {
        "value": 1.0,
        "unit": "second"
    },
    "memoryLimit": {
        "value": 256.0,
        "unit": "megabytes"
    },
    "statement": "<p>Someone give a strange birthday present to Ivan. It is hedgehog\u00a0\u2014 connected undirected graph in which one vertex has degree at least $$$3$$$ (we will call it center) and all other vertices has degree 1. Ivan thought that hedgehog is too boring and decided to make himself $$$k$$$-multihedgehog.</p><p>Let us define $$$k$$$-multihedgehog as follows:</p><ul><li> $$$1$$$-multihedgehog is hedgehog: it has one vertex of degree at least $$$3$$$ and some vertices of degree 1.</li><li> For all $$$k \\ge 2$$$, $$$k$$$-multihedgehog is $$$(k-1)$$$-multihedgehog in which the following changes has been made for each vertex $$$v$$$ with degree 1: let $$$u$$$ be its only neighbor; remove vertex $$$v$$$, create a new hedgehog with center at vertex $$$w$$$ and connect vertices $$$u$$$ and $$$w$$$ with an edge. New hedgehogs can differ from each other and the initial gift. </li></ul><p>Thereby $$$k$$$-multihedgehog is a tree. Ivan made $$$k$$$-multihedgehog but he is not sure that he did not make any mistakes. That is why he asked you to check if his tree is indeed $$$k$$$-multihedgehog.</p>",
    "inputSpecification": "<p>First line of input contains $$$2$$$ integers $$$n$$$, $$$k$$$ ($$$1 \\le n \\le 10^{5}$$$, $$$1 \\le k \\le 10^{9}$$$)\u00a0\u2014 number of vertices and hedgehog parameter.</p><p>Next $$$n-1$$$ lines contains two integers $$$u$$$ $$$v$$$ ($$$1 \\le u, \\,\\, v \\le n; \\,\\, u \\ne v$$$)\u00a0\u2014 indices of vertices connected by edge.</p><p>It is guaranteed that given graph is a tree.</p>",
    "outputSpecification": "<p>Print <span class=\"tex-font-style-tt\">\"Yes\"</span> (without quotes), if given graph is $$$k$$$-multihedgehog, and <span class=\"tex-font-style-tt\">\"No\"</span> (without quotes) otherwise.</p>",
    "samples": [
        {
            "input": "14 2<br/>1 4<br/>2 4<br/>3 4<br/>4 13<br/>10 5<br/>11 5<br/>12 5<br/>14 5<br/>5 13<br/>6 7<br/>8 6<br/>13 6<br/>9 6<br/>",
            "output": "Yes<br/>"
        },
        {
            "input": "3 1<br/>1 3<br/>2 3<br/>",
            "output": "No<br/>"
        }
    ],
    "note": "<p>2-multihedgehog from the first example looks like this:</p><p><img class=\"tex-graphics\" src=\"https://espresso.codeforces.com/eb97e0cdfc23392dd97429ddb201075dca861d9d.png\" style=\"max-width: 100.0%;max-height: 100.0%;\"/></p><p>Its center is vertex $$$13$$$. Hedgehogs created on last step are: [4 (center), 1, 2, 3], [6 (center), 7, 8, 9], [5 (center), 10, 11, 12, 13].</p><p>Tree from second example is not a hedgehog because degree of center should be at least $$$3$$$.</p>",
    "contestId": 1067,
    "index": "B",
    "name": "Multihedgehog",
    "type": "PROGRAMMING",
    "tags": [
        "dfs and similar",
        "graphs",
        "shortest paths"
    ],
    "solvedCount": 2613
}