{
    "title": "A. Bitwise Operation Wizard",
    "timeLimit": {
        "value": 2.0,
        "unit": "seconds"
    },
    "memoryLimit": {
        "value": 256.0,
        "unit": "megabytes"
    },
    "statement": "<p><span class=\"tex-font-style-bf\">This is an interactive problem.</span></p><p>There is a secret sequence $$$p_0, p_1, \\ldots, p_{n-1}$$$, which is a permutation of $$$\\{0,1,\\ldots,n-1\\}$$$.</p><p>You need to find any two indices $$$i$$$ and $$$j$$$ such that $$$p_i \\oplus p_j$$$ is maximized, where $$$\\oplus$$$ denotes the <a href=\"https://en.wikipedia.org/wiki/Bitwise_operation#XOR\">bitwise XOR operation</a>.</p><p>To do this, you can ask queries. Each query has the following form: you pick arbitrary indices $$$a$$$, $$$b$$$, $$$c$$$, and $$$d$$$ ($$$0 \\le a,b,c,d &lt; n$$$). Next, the jury calculates $$$x = (p_a \\mid p_b)$$$ and $$$y = (p_c \\mid p_d)$$$, where $$$|$$$ denotes the <a href=\"https://en.wikipedia.org/wiki/Bitwise_operation#OR\">bitwise OR operation</a>. Finally, you receive the result of comparison between $$$x$$$ and $$$y$$$. In other words, you are told if $$$x &lt; y$$$, $$$x &gt; y$$$, or $$$x = y$$$.</p><p>Please find any two indices $$$i$$$ and $$$j$$$ ($$$0 \\le i,j &lt; n$$$) such that $$$p_i \\oplus p_j$$$ is maximum among all such pairs, using at most $$$3n$$$ queries. If there are multiple pairs of indices satisfying the condition, you may output any one of them.</p>",
    "inputSpecification": "<p>Each test contains multiple test cases. The first line contains the number of test cases $$$t$$$ ($$$1 \\le t \\le 10^3$$$). The description of the test cases follows.</p>",
    "outputSpecification": null,
    "samples": [
        {
            "input": "\n2\n4\n\n<\n\n=\n\n>\n\n2\n",
            "output": "\n\n\n? 0 2 3 1\n\n? 1 1 2 3\n\n? 1 2 0 3\n\n! 3 2\n\n! 0 1\n"
        }
    ],
    "note": "<p>In the first test case, the hidden permutation is $$$p=[0,3,1,2]$$$.</p><p>For the query \"<span class=\"tex-font-style-tt\">? 0 2 3 1</span>\", the jury return \"<span class=\"tex-font-style-tt\">&lt;</span>\" because $$$(p_0 \\mid p_2) = (0 \\mid 1) =1 &lt; (p_3 \\mid p_1) = (2 \\mid 3) = 3$$$.</p><p>For the query \"<span class=\"tex-font-style-tt\">? 1 1 2 3</span>\", the jury return \"<span class=\"tex-font-style-tt\">=</span>\" because $$$(p_1 \\mid p_1) = (3\\mid 3)= 3 = (p_2 \\mid p_3) = (1 \\mid 2)=3$$$.</p><p>For the query \"<span class=\"tex-font-style-tt\">? 1 2 0 3</span>\", the jury return \"<span class=\"tex-font-style-tt\">&gt;</span>\" because $$$(p_1 \\mid p_2) = (3 \\mid 1) = 3 &gt; (p_0 \\mid p_3) = (0\\mid 2)=2$$$.</p><p>The answer $$$i = 3$$$ and $$$j = 2$$$ is valid: $$$(p_3 \\oplus p_2) = (2 \\oplus 1) = 3$$$ is indeed equal to the maximum possible value of $$$p_i \\oplus p_j$$$. Another valid answer would be $$$i=0$$$ and $$$j=1$$$. As the number of queries does not exceed $$$3n=12$$$, the answer is considered correct.</p><p>In the second test case, $$$n = 2$$$, so $$$p$$$ is either $$$[0, 1]$$$ or $$$[1, 0]$$$. In any case, $$$p_0 \\oplus p_1 = 1$$$ is maximum possible.</p>",
    "contestId": 1936,
    "index": "A",
    "name": "Bitwise Operation Wizard",
    "type": "PROGRAMMING",
    "tags": [
        "bitmasks",
        "constructive algorithms",
        "greedy",
        "interactive",
        "math"
    ],
    "solvedCount": 6752
}