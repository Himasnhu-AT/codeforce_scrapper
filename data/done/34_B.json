{
    "title": "B. Sale",
    "timeLimit": {
        "value": 2.0,
        "unit": "seconds"
    },
    "memoryLimit": {
        "value": 256.0,
        "unit": "megabytes"
    },
    "statement": "<p>Once Bob got to a sale of old TV sets. There were <span class=\"tex-span\"><i>n</i></span> TV sets at that sale. TV set with index <span class=\"tex-span\"><i>i</i></span> costs <span class=\"tex-span\"><i>a</i><sub class=\"lower-index\"><i>i</i></sub></span> bellars. Some TV sets have a negative price \u2014 their owners are ready to pay Bob if he buys their useless apparatus. Bob can \u00abbuy\u00bb any TV sets he wants. Though he's very strong, Bob can carry at most <span class=\"tex-span\"><i>m</i></span> TV sets, and he has no desire to go to the sale for the second time. Please, help Bob find out the maximum sum of money that he can earn.</p>",
    "inputSpecification": "<p>The first line contains two space-separated integers <span class=\"tex-span\"><i>n</i></span> and <span class=\"tex-span\"><i>m</i></span> (<span class=\"tex-span\">1\u2009\u2264\u2009<i>m</i>\u2009\u2264\u2009<i>n</i>\u2009\u2264\u2009100</span>) \u2014 amount of TV sets at the sale, and amount of TV sets that Bob can carry. The following line contains <span class=\"tex-span\"><i>n</i></span> space-separated integers <span class=\"tex-span\"><i>a</i><sub class=\"lower-index\"><i>i</i></sub></span> (<span class=\"tex-span\">\u2009-\u20091000\u2009\u2264\u2009<i>a</i><sub class=\"lower-index\"><i>i</i></sub>\u2009\u2264\u20091000</span>) \u2014 prices of the TV sets. </p>",
    "outputSpecification": "<p>Output the only number \u2014 the maximum sum of money that Bob can earn, given that he can carry at most <span class=\"tex-span\"><i>m</i></span> TV sets.</p>",
    "samples": [
        {
            "input": "5 3<br/>-6 0 35 -2 4<br/>",
            "output": "8<br/>"
        },
        {
            "input": "4 2<br/>7 0 0 -7<br/>",
            "output": "7<br/>"
        }
    ],
    "note": null,
    "contestId": 34,
    "index": "B",
    "name": "Sale",
    "type": "PROGRAMMING",
    "tags": [
        "greedy",
        "sortings"
    ],
    "solvedCount": 49453
}