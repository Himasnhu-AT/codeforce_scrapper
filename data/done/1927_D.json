{
    "title": "D. Find the Different Ones!",
    "timeLimit": {
        "value": 5.0,
        "unit": "seconds"
    },
    "memoryLimit": {
        "value": 256.0,
        "unit": "megabytes"
    },
    "statement": "<p>You are given an array $$$a$$$ of $$$n$$$ integers, and $$$q$$$ queries.</p><p>Each query is represented by two integers $$$l$$$ and $$$r$$$ ($$$1 \\le l \\le r \\le n$$$). Your task is to find, for each query, two indices $$$i$$$ and $$$j$$$ (or determine that they do not exist) such that:</p><ul> <li> $$$l \\le i \\le r$$$; </li><li> $$$l \\le j \\le r$$$; </li><li> $$$a_i \\ne a_j$$$. </li></ul><p>In other words, for each query, you need to find a pair of different elements among $$$a_l, a_{l+1}, \\dots, a_r$$$, or report that such a pair does not exist.</p>",
    "inputSpecification": "<p>The first line of the input contains a single integer $$$t$$$ ($$$1 \\le t \\le 10^4$$$)\u00a0\u2014 the number of test cases. The descriptions of the test cases follow.</p><p>The first line of each test case contains a single integer $$$n$$$ ($$$2 \\le n \\le 2 \\cdot 10^5$$$)\u00a0\u2014 the length of the array $$$a$$$.</p><p>The second line of each test case contains $$$n$$$ integers $$$a_1, a_2, \\dots, a_n$$$ ($$$1 \\le a_i \\le 10^6$$$)\u00a0\u2014 the elements of the array $$$a$$$.</p><p>The third line of each test case contains a single integer $$$q$$$ ($$$1 \\le q \\le 2 \\cdot 10^5$$$)\u00a0\u2014 the number of queries.</p><p>The next $$$q$$$ lines contain two integers each, $$$l$$$ and $$$r$$$ ($$$1 \\le l &lt; r \\le n$$$)\u00a0\u2014 the boundaries of the query.</p><p>It is guaranteed that the sum of the values of $$$n$$$ across all test cases does not exceed $$$2 \\cdot 10^5$$$. Similarly, it is guaranteed that the sum of the values of $$$q$$$ across all test cases does not exceed $$$2 \\cdot 10^5$$$.</p>",
    "outputSpecification": "<p>For each query, output two integers separated by space: $$$i$$$ and $$$j$$$ ($$$l \\le i, j \\le r$$$), for which $$$a_i \\ne a_j$$$. If such a pair does not exist, output $$$i=-1$$$ and $$$j=-1$$$.</p><p>You may separate the outputs for the test cases with empty lines. This is not a mandatory requirement.</p>",
    "samples": [
        {
            "input": "\n<div class=\"test-example-line test-example-line-even test-example-line-0\">5</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">5</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">1 1 2 1 1</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">3</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">1 5</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">1 2</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">1 3</div><div class=\"test-example-line test-example-line-even test-example-line-2\">6</div><div class=\"test-example-line test-example-line-even test-example-line-2\">30 20 20 10 10 20</div><div class=\"test-example-line test-example-line-even test-example-line-2\">5</div><div class=\"test-example-line test-example-line-even test-example-line-2\">1 2</div><div class=\"test-example-line test-example-line-even test-example-line-2\">2 3</div><div class=\"test-example-line test-example-line-even test-example-line-2\">2 4</div><div class=\"test-example-line test-example-line-even test-example-line-2\">2 6</div><div class=\"test-example-line test-example-line-even test-example-line-2\">3 5</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">4</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">5 2 3 4</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">4</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">1 2</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">1 4</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">2 3</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">2 4</div><div class=\"test-example-line test-example-line-even test-example-line-4\">5</div><div class=\"test-example-line test-example-line-even test-example-line-4\">1 4 3 2 4</div><div class=\"test-example-line test-example-line-even test-example-line-4\">5</div><div class=\"test-example-line test-example-line-even test-example-line-4\">1 5</div><div class=\"test-example-line test-example-line-even test-example-line-4\">2 4</div><div class=\"test-example-line test-example-line-even test-example-line-4\">3 4</div><div class=\"test-example-line test-example-line-even test-example-line-4\">3 5</div><div class=\"test-example-line test-example-line-even test-example-line-4\">4 5</div><div class=\"test-example-line test-example-line-odd test-example-line-5\">5</div><div class=\"test-example-line test-example-line-odd test-example-line-5\">2 3 1 4 2</div><div class=\"test-example-line test-example-line-odd test-example-line-5\">7</div><div class=\"test-example-line test-example-line-odd test-example-line-5\">1 2</div><div class=\"test-example-line test-example-line-odd test-example-line-5\">1 4</div><div class=\"test-example-line test-example-line-odd test-example-line-5\">1 5</div><div class=\"test-example-line test-example-line-odd test-example-line-5\">2 4</div><div class=\"test-example-line test-example-line-odd test-example-line-5\">2 5</div><div class=\"test-example-line test-example-line-odd test-example-line-5\">3 5</div><div class=\"test-example-line test-example-line-odd test-example-line-5\">4 5</div>",
            "output": "\n2 3\n-1 -1\n1 3\n\n2 1\n-1 -1\n4 2\n4 6\n5 3\n\n1 2\n1 2\n2 3\n3 2\n\n1 3\n2 4\n3 4\n5 3\n5 4\n\n1 2\n4 2\n1 3\n2 3\n3 2\n5 4\n5 4\n"
        }
    ],
    "note": null,
    "contestId": 1927,
    "index": "D",
    "name": "Find the Different Ones!",
    "type": "PROGRAMMING",
    "tags": [
        "binary search",
        "brute force",
        "data structures",
        "dp",
        "dsu",
        "greedy",
        "two pointers"
    ],
    "solvedCount": 18913
}