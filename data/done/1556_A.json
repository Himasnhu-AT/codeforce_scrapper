{
    "title": "A. A Variety of Operations",
    "timeLimit": {
        "value": 1.0,
        "unit": "second"
    },
    "memoryLimit": {
        "value": 256.0,
        "unit": "megabytes"
    },
    "statement": "<center> <img class=\"tex-graphics\" height=\"302px\" src=\"https://espresso.codeforces.com/5b8a1d6d800b08b662a0159b2cd73149e296946a.png\" style=\"max-width: 100.0%;max-height: 100.0%;\" width=\"454px\"/> </center><p>William has two numbers $$$a$$$ and $$$b$$$ initially both equal to <span class=\"tex-font-style-bf\">zero</span>. William mastered performing three different operations with them quickly. Before performing each operation some positive integer $$$k$$$ is picked, which is then used to perform one of the following operations: (note, that for each operation you can choose a <span class=\"tex-font-style-bf\">new</span> positive integer $$$k$$$)</p><ol> <li> add number $$$k$$$ to both $$$a$$$ and $$$b$$$, or </li><li> add number $$$k$$$ to $$$a$$$ and subtract $$$k$$$ from $$$b$$$, or </li><li> add number $$$k$$$ to $$$b$$$ and subtract $$$k$$$ from $$$a$$$. </li></ol><p>Note that after performing operations, numbers $$$a$$$ and $$$b$$$ may become negative as well.</p><p>William wants to find out the minimal number of operations he would have to perform to make $$$a$$$ equal to his favorite number $$$c$$$ and $$$b$$$ equal to his second favorite number $$$d$$$.</p>",
    "inputSpecification": "<p>Each test contains multiple test cases. The first line contains the number of test cases $$$t$$$ ($$$1 \\le t \\le 10^4$$$). Description of the test cases follows.</p><p>The only line of each test case contains two integers $$$c$$$ and $$$d$$$ $$$(0 \\le c, d \\le 10^9)$$$, which are William's favorite numbers and which he wants $$$a$$$ and $$$b$$$ to be transformed into.</p>",
    "outputSpecification": "<p>For each test case output a single number, which is the minimal number of operations which William would have to perform to make $$$a$$$ equal to $$$c$$$ and $$$b$$$ equal to $$$d$$$, or $$$-1$$$ if it is impossible to achieve this using the described operations.</p>",
    "samples": [
        {
            "input": "\n6\n1 2\n3 5\n5 3\n6 6\n8 0\n0 0\n",
            "output": "\n-1\n2\n2\n1\n2\n0\n"
        }
    ],
    "note": "<p>Let us demonstrate one of the suboptimal ways of getting a pair $$$(3, 5)$$$:</p><ul> <li> Using an operation of the first type with $$$k=1$$$, the current pair would be equal to $$$(1, 1)$$$. </li><li> Using an operation of the third type with $$$k=8$$$, the current pair would be equal to $$$(-7, 9)$$$. </li><li> Using an operation of the second type with $$$k=7$$$, the current pair would be equal to $$$(0, 2)$$$. </li><li> Using an operation of the first type with $$$k=3$$$, the current pair would be equal to $$$(3, 5)$$$. </li></ul>",
    "contestId": 1556,
    "index": "A",
    "name": "A Variety of Operations",
    "type": "PROGRAMMING",
    "tags": [
        "math"
    ],
    "solvedCount": 17931
}