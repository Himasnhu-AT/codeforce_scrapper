{
    "title": "E. Shortest Path",
    "timeLimit": {
        "value": 3.0,
        "unit": "seconds"
    },
    "memoryLimit": {
        "value": 256.0,
        "unit": "megabytes"
    },
    "statement": "<p>In Ancient Berland there were <span class=\"tex-span\"><i>n</i></span> cities and <span class=\"tex-span\"><i>m</i></span> two-way roads of equal length. The cities are numbered with integers from <span class=\"tex-span\">1</span> to <span class=\"tex-span\"><i>n</i></span> inclusively. According to an ancient superstition, if a traveller visits three cities <span class=\"tex-span\"><i>a</i><sub class=\"lower-index\"><i>i</i></sub></span>, <span class=\"tex-span\"><i>b</i><sub class=\"lower-index\"><i>i</i></sub></span>, <span class=\"tex-span\"><i>c</i><sub class=\"lower-index\"><i>i</i></sub></span> in row, without visiting other cities between them, a great disaster awaits him. Overall there are <span class=\"tex-span\"><i>k</i></span> such city triplets. Each triplet is ordered, which means that, for example, you are allowed to visit the cities in the following order: <span class=\"tex-span\"><i>a</i><sub class=\"lower-index\"><i>i</i></sub></span>, <span class=\"tex-span\"><i>c</i><sub class=\"lower-index\"><i>i</i></sub></span>, <span class=\"tex-span\"><i>b</i><sub class=\"lower-index\"><i>i</i></sub></span>. Vasya wants to get from the city <span class=\"tex-span\">1</span> to the city <span class=\"tex-span\"><i>n</i></span> and not fulfil the superstition. Find out which minimal number of roads he should take. Also you are required to find one of his possible path routes.</p>",
    "inputSpecification": "<p>The first line contains three integers <span class=\"tex-span\"><i>n</i></span>, <span class=\"tex-span\"><i>m</i></span>, <span class=\"tex-span\"><i>k</i></span> (<span class=\"tex-span\">2\u2009\u2264\u2009<i>n</i>\u2009\u2264\u20093000,\u20091\u2009\u2264\u2009<i>m</i>\u2009\u2264\u200920000,\u20090\u2009\u2264\u2009<i>k</i>\u2009\u2264\u200910<sup class=\"upper-index\">5</sup></span>) which are the number of cities, the number of roads and the number of the forbidden triplets correspondingly. </p><p>Then follow <span class=\"tex-span\"><i>m</i></span> lines each containing two integers <span class=\"tex-span\"><i>x</i><sub class=\"lower-index\"><i>i</i></sub></span>, <span class=\"tex-span\"><i>y</i><sub class=\"lower-index\"><i>i</i></sub></span> (<span class=\"tex-span\">1\u2009\u2264\u2009<i>x</i><sub class=\"lower-index\"><i>i</i></sub>,\u2009<i>y</i><sub class=\"lower-index\"><i>i</i></sub>\u2009\u2264\u2009<i>n</i></span>) which are the road descriptions. The road is described by the numbers of the cities it joins. No road joins a city with itself, there cannot be more than one road between a pair of cities. </p><p>Then follow <span class=\"tex-span\"><i>k</i></span> lines each containing three integers <span class=\"tex-span\"><i>a</i><sub class=\"lower-index\"><i>i</i></sub></span>, <span class=\"tex-span\"><i>b</i><sub class=\"lower-index\"><i>i</i></sub></span>, <span class=\"tex-span\"><i>c</i><sub class=\"lower-index\"><i>i</i></sub></span> (<span class=\"tex-span\">1\u2009\u2264\u2009<i>a</i><sub class=\"lower-index\"><i>i</i></sub>,\u2009<i>b</i><sub class=\"lower-index\"><i>i</i></sub>,\u2009<i>c</i><sub class=\"lower-index\"><i>i</i></sub>\u2009\u2264\u2009<i>n</i></span>) which are the forbidden triplets. Each ordered triplet is listed mo more than one time. All three cities in each triplet are distinct.</p><p>City <span class=\"tex-span\"><i>n</i></span> can be unreachable from city <span class=\"tex-span\">1</span> by roads.</p>",
    "outputSpecification": "<p>If there are no path from <span class=\"tex-span\">1</span> to <span class=\"tex-span\"><i>n</i></span> print <span class=\"tex-font-style-tt\">-1</span>. Otherwise on the first line print the number of roads <span class=\"tex-span\"><i>d</i></span> along the shortest path from the city <span class=\"tex-span\">1</span> to the city <span class=\"tex-span\"><i>n</i></span>. On the second line print <span class=\"tex-span\"><i>d</i>\u2009+\u20091</span> numbers \u2014 any of the possible shortest paths for Vasya. The path should start in the city <span class=\"tex-span\">1</span> and end in the city <span class=\"tex-span\"><i>n</i></span>.</p>",
    "samples": [
        {
            "input": "4 4 1<br/>1 2<br/>2 3<br/>3 4<br/>1 3<br/>1 4 3<br/>",
            "output": "2<br/>1 3 4<br/>"
        },
        {
            "input": "3 1 0<br/>1 2<br/>",
            "output": "-1<br/>"
        },
        {
            "input": "4 4 2<br/>1 2<br/>2 3<br/>3 4<br/>1 3<br/>1 2 3<br/>1 3 4<br/>",
            "output": "4<br/>1 3 2 3 4<br/>"
        }
    ],
    "note": null,
    "contestId": 59,
    "index": "E",
    "name": "Shortest Path",
    "type": "PROGRAMMING",
    "tags": [
        "graphs",
        "shortest paths"
    ],
    "solvedCount": 3170
}