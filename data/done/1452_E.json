{
    "title": "E. Two Editorials",
    "timeLimit": {
        "value": 2.0,
        "unit": "seconds"
    },
    "memoryLimit": {
        "value": 256.0,
        "unit": "megabytes"
    },
    "statement": "<p>Berland regional ICPC contest has just ended. There were $$$m$$$ participants numbered from $$$1$$$ to $$$m$$$, who competed on a problemset of $$$n$$$ problems numbered from $$$1$$$ to $$$n$$$.</p><p>Now the editorial is about to take place. There are two problem authors, each of them is going to tell the tutorial to <span class=\"tex-font-style-bf\">exactly $$$k$$$ consecutive tasks</span> of the problemset. The authors choose the segment of $$$k$$$ consecutive tasks for themselves independently of each other. The segments can coincide, intersect or not intersect at all.</p><p>The $$$i$$$-th participant is interested in listening to the tutorial of all consecutive tasks from $$$l_i$$$ to $$$r_i$$$. Each participant always chooses to listen to only the problem author that tells the tutorials to the maximum number of tasks he is interested in. Let this maximum number be $$$a_i$$$. No participant can listen to both of the authors, even if their segments don't intersect.</p><p>The authors want to choose the segments of $$$k$$$ consecutive tasks for themselves in such a way that the sum of $$$a_i$$$ over all participants is maximized.</p>",
    "inputSpecification": "<p>The first line contains three integers $$$n, m$$$ and $$$k$$$ ($$$1 \\le n, m \\le 2000$$$, $$$1 \\le k \\le n$$$)\u00a0\u2014 the number of problems, the number of participants and the length of the segment of tasks each of the problem authors plans to tell the tutorial to.</p><p>The $$$i$$$-th of the next $$$m$$$ lines contains two integers $$$l_i$$$ and $$$r_i$$$ ($$$1 \\le l_i \\le r_i \\le n$$$)\u00a0\u2014 the segment of tasks the $$$i$$$-th participant is interested in listening to the tutorial to.</p>",
    "outputSpecification": "<p>Print a single integer\u00a0\u2014 the maximum sum of $$$a_i$$$ over all participants.</p>",
    "samples": [
        {
            "input": "\n10 5 3\n1 3\n2 4\n6 9\n6 9\n1 8\n",
            "output": "\n14\n"
        },
        {
            "input": "\n10 3 3\n2 4\n4 6\n3 5\n",
            "output": "\n8\n"
        },
        {
            "input": "\n4 4 1\n3 3\n1 1\n2 2\n4 4\n",
            "output": "\n2\n"
        },
        {
            "input": "\n5 4 5\n1 2\n2 3\n3 4\n4 5\n",
            "output": "\n8\n"
        }
    ],
    "note": "<p>In the first example the first author can tell the tutorial to problems from $$$1$$$ to $$$3$$$ and the second one\u00a0\u2014 from $$$6$$$ to $$$8$$$. That way the sequence of $$$a_i$$$ will be $$$[3, 2, 3, 3, 3]$$$. Notice that the last participant can't listen to both author, he only chooses the one that tells the maximum number of problems he's interested in.</p><p>In the second example the first one can tell problems $$$2$$$ to $$$4$$$, the second one\u00a0\u2014 $$$4$$$ to $$$6$$$.</p><p>In the third example the first one can tell problems $$$1$$$ to $$$1$$$, the second one\u00a0\u2014 $$$2$$$ to $$$2$$$. Or $$$4$$$ to $$$4$$$ and $$$3$$$ to $$$3$$$. Every pair of different problems will get the same sum of $$$2$$$.</p><p>In the fourth example the first one can tell problems $$$1$$$ to $$$5$$$, the second one\u00a0\u2014 $$$1$$$ to $$$5$$$ as well.</p>",
    "contestId": 1452,
    "index": "E",
    "name": "Two Editorials",
    "type": "PROGRAMMING",
    "tags": [
        "brute force",
        "dp",
        "greedy",
        "sortings",
        "two pointers"
    ],
    "solvedCount": 1489
}