{
    "title": "C. Ladder",
    "timeLimit": {
        "value": 2.0,
        "unit": "seconds"
    },
    "memoryLimit": {
        "value": 256.0,
        "unit": "megabytes"
    },
    "statement": "<p>You've got an array, consisting of <span class=\"tex-span\"><i>n</i></span> integers <span class=\"tex-span\"><i>a</i><sub class=\"lower-index\">1</sub>,\u2009<i>a</i><sub class=\"lower-index\">2</sub>,\u2009...,\u2009<i>a</i><sub class=\"lower-index\"><i>n</i></sub></span>. Also, you've got <span class=\"tex-span\"><i>m</i></span> queries, the <span class=\"tex-span\"><i>i</i></span>-th query is described by two integers <span class=\"tex-span\"><i>l</i><sub class=\"lower-index\"><i>i</i></sub>,\u2009<i>r</i><sub class=\"lower-index\"><i>i</i></sub></span>. Numbers <span class=\"tex-span\"><i>l</i><sub class=\"lower-index\"><i>i</i></sub>,\u2009<i>r</i><sub class=\"lower-index\"><i>i</i></sub></span> define a subsegment of the original array, that is, the sequence of numbers <span class=\"tex-span\"><i>a</i><sub class=\"lower-index\"><i>l</i><sub class=\"lower-index\"><i>i</i></sub></sub>,\u2009<i>a</i><sub class=\"lower-index\"><i>l</i><sub class=\"lower-index\"><i>i</i></sub>\u2009+\u20091</sub>,\u2009<i>a</i><sub class=\"lower-index\"><i>l</i><sub class=\"lower-index\"><i>i</i></sub>\u2009+\u20092</sub>,\u2009...,\u2009<i>a</i><sub class=\"lower-index\"><i>r</i><sub class=\"lower-index\"><i>i</i></sub></sub></span>. For each query you should check whether the corresponding segment is a ladder. </p><p>A <span class=\"tex-font-style-it\">ladder</span> is a sequence of integers <span class=\"tex-span\"><i>b</i><sub class=\"lower-index\">1</sub>,\u2009<i>b</i><sub class=\"lower-index\">2</sub>,\u2009...,\u2009<i>b</i><sub class=\"lower-index\"><i>k</i></sub></span>, such that it first doesn't decrease, then doesn't increase. In other words, there is such integer <span class=\"tex-span\"><i>x</i></span> <span class=\"tex-span\">(1\u2009\u2264\u2009<i>x</i>\u2009\u2264\u2009<i>k</i>)</span>, that the following inequation fulfills: <span class=\"tex-span\"><i>b</i><sub class=\"lower-index\">1</sub>\u2009\u2264\u2009<i>b</i><sub class=\"lower-index\">2</sub>\u2009\u2264\u2009...\u2009\u2264\u2009<i>b</i><sub class=\"lower-index\"><i>x</i></sub>\u2009\u2265\u2009<i>b</i><sub class=\"lower-index\"><i>x</i>\u2009+\u20091</sub>\u2009\u2265\u2009<i>b</i><sub class=\"lower-index\"><i>x</i>\u2009+\u20092</sub>...\u2009\u2265\u2009<i>b</i><sub class=\"lower-index\"><i>k</i></sub></span>. Note that the non-decreasing and the non-increasing sequences are also considered ladders.</p>",
    "inputSpecification": "<p>The first line contains two integers <span class=\"tex-span\"><i>n</i></span> and <span class=\"tex-span\"><i>m</i></span> <span class=\"tex-span\">(1\u2009\u2264\u2009<i>n</i>,\u2009<i>m</i>\u2009\u2264\u200910<sup class=\"upper-index\">5</sup>)</span> \u2014 the number of array elements and the number of queries. The second line contains the sequence of integers <span class=\"tex-span\"><i>a</i><sub class=\"lower-index\">1</sub>,\u2009<i>a</i><sub class=\"lower-index\">2</sub>,\u2009...,\u2009<i>a</i><sub class=\"lower-index\"><i>n</i></sub></span> <span class=\"tex-span\">(1\u2009\u2264\u2009<i>a</i><sub class=\"lower-index\"><i>i</i></sub>\u2009\u2264\u200910<sup class=\"upper-index\">9</sup></span>), where number <span class=\"tex-span\"><i>a</i><sub class=\"lower-index\"><i>i</i></sub></span> stands for the <span class=\"tex-span\"><i>i</i></span>-th array element.</p><p>The following <span class=\"tex-span\"><i>m</i></span> lines contain the description of the queries. The <span class=\"tex-span\"><i>i</i></span>-th line contains the description of the <span class=\"tex-span\"><i>i</i></span>-th query, consisting of two integers <span class=\"tex-span\"><i>l</i><sub class=\"lower-index\"><i>i</i></sub></span>, <span class=\"tex-span\"><i>r</i><sub class=\"lower-index\"><i>i</i></sub></span> <span class=\"tex-span\">(1\u2009\u2264\u2009<i>l</i><sub class=\"lower-index\"><i>i</i></sub>\u2009\u2264\u2009<i>r</i><sub class=\"lower-index\"><i>i</i></sub>\u2009\u2264\u2009<i>n</i>)</span> \u2014 the boundaries of the subsegment of the initial array.</p><p>The numbers in the lines are separated by single spaces.</p>",
    "outputSpecification": "<p>Print <span class=\"tex-span\"><i>m</i></span> lines, in the <span class=\"tex-span\"><i>i</i></span>-th line print word \"<span class=\"tex-font-style-tt\">Yes</span>\" (without the quotes), if the subsegment that corresponds to the <span class=\"tex-span\"><i>i</i></span>-th query is the ladder, or word \"<span class=\"tex-font-style-tt\">No</span>\" (without the quotes) otherwise. </p>",
    "samples": [
        {
            "input": "8 6<br/>1 2 1 3 3 5 2 1<br/>1 3<br/>2 3<br/>2 4<br/>8 8<br/>1 4<br/>5 8<br/>",
            "output": "Yes<br/>Yes<br/>No<br/>Yes<br/>No<br/>Yes<br/>"
        }
    ],
    "note": null,
    "contestId": 279,
    "index": "C",
    "name": "Ladder",
    "type": "PROGRAMMING",
    "tags": [
        "dp",
        "implementation",
        "two pointers"
    ],
    "solvedCount": 8097
}