{
    "title": "D. Vika and Bonuses",
    "timeLimit": {
        "value": 3.0,
        "unit": "seconds"
    },
    "memoryLimit": {
        "value": 256.0,
        "unit": "megabytes"
    },
    "statement": "<p>A new bonus system has been introduced at Vika's favorite cosmetics store, \"Golden Pear\"!</p><p>The system works as follows: suppose a customer has $$$b$$$ bonuses. Before paying for the purchase, the customer can choose one of two options: </p><ul> <li> Get a discount equal to the current number of bonuses, while the bonuses are not deducted. </li><li> Accumulate an additional $$$x$$$ bonuses, where $$$x$$$ is the last digit of the number $$$b$$$. As a result, the customer's account will have $$$b+x$$$ bonuses. </li></ul><p>For example, if a customer had $$$24$$$ bonuses, he can either get a discount of $$$24$$$ or accumulate an additional $$$4$$$ bonuses, after which his account will have $$$28$$$ bonuses.</p><p>At the moment, Vika has already accumulated $$$s$$$ bonuses.</p><p>The girl knows that during the remaining time of the bonus system, she will make $$$k$$$ more purchases at the \"Golden Pear\" store network.</p><p>After familiarizing herself with the rules of the bonus system, Vika became interested in the maximum total discount she can get.</p><p>Help the girl answer this question.</p>",
    "inputSpecification": "<p>Each test consists of multiple test cases. The first line contains a single integer $$$t$$$ ($$$1 \\le t \\le 10^5$$$)\u00a0\u2014 the number of test cases. The description of the test cases follows.</p><p>The test case consists of a single line containing two integers $$$s$$$ and $$$k$$$ ($$$0 \\le s \\le 10^9$$$, $$$1 \\le k \\le 10^9$$$)\u00a0\u2014 the current number of bonuses in Vika's account and how many more purchases the girl will make.</p>",
    "outputSpecification": "<p>For each test case, output a single integer \u2014 the maximum total discount that can be obtained through the bonus system.</p>",
    "samples": [
        {
            "input": "\n<div class=\"test-example-line test-example-line-even test-example-line-0\">6</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">1 3</div><div class=\"test-example-line test-example-line-even test-example-line-2\">11 3</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">0 179</div><div class=\"test-example-line test-example-line-even test-example-line-4\">5 1000000000</div><div class=\"test-example-line test-example-line-odd test-example-line-5\">723252212 856168102</div><div class=\"test-example-line test-example-line-even test-example-line-6\">728598293 145725253</div>",
            "output": "\n4\n33\n0\n9999999990\n1252047198518668448\n106175170582793129\n"
        }
    ],
    "note": "<p>In the first test case, Vika can accumulate bonuses after the first and second purchases, after which she can get a discount of $$$4$$$.</p><p>In the second test case, Vika can get a discount of $$$11$$$ three times, and the total discount will be $$$33$$$.</p><p>In the third example, regardless of Vika's actions, she will always get a total discount of $$$0$$$.</p>",
    "contestId": 1848,
    "index": "D",
    "name": "Vika and Bonuses",
    "type": "PROGRAMMING",
    "tags": [
        "binary search",
        "brute force",
        "math",
        "ternary search"
    ],
    "solvedCount": 2533
}