{
    "title": "F. Range Diameter Sum",
    "timeLimit": {
        "value": 7.0,
        "unit": "seconds"
    },
    "memoryLimit": {
        "value": 512.0,
        "unit": "megabytes"
    },
    "statement": "<p>You are given a tree with $$$n$$$ vertices numbered $$$1, \\ldots, n$$$. A tree is a connected simple graph without cycles.</p><p>Let $$$\\mathrm{dist}(u, v)$$$ be the number of edges in the unique simple path connecting vertices $$$u$$$ and $$$v$$$.</p><p>Let $$$\\mathrm{diam}(l, r) = \\max \\mathrm{dist}(u, v)$$$ over all pairs $$$u, v$$$ such that $$$l \\leq u, v \\leq r$$$.</p><p>Compute $$$\\sum_{1 \\leq l \\leq r \\leq n} \\mathrm{diam}(l, r)$$$.</p>",
    "inputSpecification": "<p>The first line contains a single integer $$$n$$$ ($$$1 \\leq n \\leq 10^5$$$)\u00a0\u2014 the number of vertices in the tree.</p><p>The next $$$n - 1$$$ lines describe the tree edges. Each of these lines contains two integers $$$u, v$$$ ($$$1 \\leq u, v \\leq n$$$)\u00a0\u2014 endpoint indices of the respective tree edge. It is guaranteed that the edge list indeed describes a tree.</p>",
    "outputSpecification": "<p>Print a single integer\u00a0\u2014 $$$\\sum_{1 \\leq l \\leq r \\leq n} \\mathrm{diam}(l, r)$$$.</p>",
    "samples": [
        {
            "input": "\n4\n1 2\n2 4\n3 2\n",
            "output": "\n10\n"
        },
        {
            "input": "\n10\n1 8\n2 9\n5 6\n4 8\n4 2\n7 9\n3 6\n10 4\n3 9\n",
            "output": "\n224\n"
        }
    ],
    "note": null,
    "contestId": 1458,
    "index": "F",
    "name": "Range Diameter Sum",
    "type": "PROGRAMMING",
    "tags": [
        "data structures",
        "trees"
    ],
    "solvedCount": 260
}