{
    "title": "B. Team Composition: Programmers and Mathematicians",
    "timeLimit": {
        "value": 1.0,
        "unit": "second"
    },
    "memoryLimit": {
        "value": 256.0,
        "unit": "megabytes"
    },
    "statement": "<p>The All-Berland Team Programming Contest will take place very soon. This year, teams of four are allowed to participate.</p><p>There are $$$a$$$ programmers and $$$b$$$ mathematicians at Berland State University. How many maximum teams can be made if:</p><ul> <li> each team must consist of exactly $$$4$$$ students, </li><li> teams of $$$4$$$ mathematicians or $$$4$$$ programmers are unlikely to perform well, so the decision was made not to compose such teams. </li></ul><p>Thus, each team must have at least one programmer <span class=\"tex-font-style-bf\">and</span> at least one mathematician.</p><p>Print the required maximum number of teams. Each person can be a member of no more than one team.</p>",
    "inputSpecification": "<p>The first line contains an integer $$$t$$$ ($$$1 \\le t \\le 10^4$$$)\u00a0\u2014the number of test cases.</p><p>This is followed by descriptions of $$$t$$$ sets, one per line. Each set is given by two integers $$$a$$$ and $$$b$$$ ($$$0 \\le a,b \\le 10^9$$$).</p>",
    "outputSpecification": "<p>Print $$$t$$$ lines. Each line must contain the answer to the corresponding set of input data\u00a0\u2014 the required maximum number of teams.</p>",
    "samples": [
        {
            "input": "\n6\n5 5\n10 1\n2 3\n0 0\n17 2\n1000000000 1000000000\n",
            "output": "\n2\n1\n1\n0\n2\n500000000\n"
        }
    ],
    "note": "<p>In the first test case of the example, two teams can be composed. One way to compose two teams is to compose two teams of $$$2$$$ programmers and $$$2$$$ mathematicians.</p><p>In the second test case of the example, only one team can be composed: $$$3$$$ programmers and $$$1$$$ mathematician in the team.</p>",
    "contestId": 1611,
    "index": "B",
    "name": "Team Composition: Programmers and Mathematicians",
    "type": "PROGRAMMING",
    "tags": [
        "binary search",
        "constructive algorithms",
        "math"
    ],
    "solvedCount": 28774
}