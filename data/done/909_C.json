{
    "title": "C. Python Indentation",
    "timeLimit": {
        "value": 2.0,
        "unit": "seconds"
    },
    "memoryLimit": {
        "value": 256.0,
        "unit": "megabytes"
    },
    "statement": "<p>In Python, code blocks don't have explicit begin/end or curly braces to mark beginning and end of the block. Instead, code blocks are defined by indentation.</p><p>We will consider an extremely simplified subset of Python with only two types of statements.</p><p><span class=\"tex-font-style-bf\">Simple statements</span> are written in a single line, one per line. An example of a simple statement is assignment.</p><p><span class=\"tex-font-style-bf\">For statements</span> are compound statements: they contain one or several other statements. For statement consists of a header written in a separate line which starts with \"for\" prefix, and loop body. Loop body is a block of statements indented one level further than the header of the loop. Loop body can contain both types of statements. Loop body can't be empty.</p><p>You are given a sequence of statements without indentation. Find the number of ways in which the statements can be indented to form a valid Python program.</p>",
    "inputSpecification": "<p>The first line contains a single integer <span class=\"tex-span\"><i>N</i></span> (<span class=\"tex-span\">1\u2009\u2264\u2009<i>N</i>\u2009\u2264\u20095000</span>)\u00a0\u2014 the number of commands in the program. <span class=\"tex-span\"><i>N</i></span> lines of the program follow, each line describing a single command. Each command is either \"f\" (denoting \"for statement\") or \"s\" (\"simple statement\"). It is guaranteed that the last line is a simple statement.</p>",
    "outputSpecification": "<p>Output one line containing an integer - the number of ways the given sequence of statements can be indented modulo <span class=\"tex-span\">10<sup class=\"upper-index\">9</sup>\u2009+\u20097</span>. </p>",
    "samples": [
        {
            "input": "4<br/>s<br/>f<br/>f<br/>s<br/>",
            "output": "1<br/>"
        },
        {
            "input": "4<br/>f<br/>s<br/>f<br/>s<br/>",
            "output": "2<br/>"
        },
        {
            "input": "<br/>simple statement<br/>for statement<br/>    for statement<br/>        simple statement<br/>",
            "output": "<br/>for statement<br/>    simple statement<br/>    for statement<br/>        simple statement<br/>"
        }
    ],
    "note": "<p>In the first test case, there is only one way to indent the program: the second for statement must be part of the body of the first one.</p><pre class=\"verbatim\"><br/>simple statement<br/>for statement<br/>    for statement<br/>        simple statement<br/></pre><p>In the second test case, there are two ways to indent the program: the second for statement can either be part of the first one's body or a separate statement following the first one.</p><pre class=\"verbatim\"><br/>for statement<br/>    simple statement<br/>    for statement<br/>        simple statement<br/></pre><p>or</p><pre class=\"verbatim\"><br/>for statement<br/>    simple statement<br/>for statement<br/>    simple statement<br/></pre>",
    "contestId": 909,
    "index": "C",
    "name": "Python Indentation",
    "type": "PROGRAMMING",
    "tags": [
        "dp"
    ],
    "solvedCount": 4786
}