{
    "title": "F. Zombies",
    "timeLimit": {
        "value": 4.0,
        "unit": "seconds"
    },
    "memoryLimit": {
        "value": 256.0,
        "unit": "megabytes"
    },
    "statement": "<p>Polycarp plays a computer game in a post-apocalyptic setting. The zombies have taken over the world, and Polycarp with a small team of survivors is defending against hordes trying to invade their base. The zombies are invading for $$$x$$$ minutes starting from minute $$$0$$$. There are $$$n$$$ entrances to the base, and every minute one zombie attempts to enter through every entrance.</p><p>The survivors can defend the entrances against the zombies. There are two options: </p><ul> <li> manually\u00a0\u2014 shoot the zombies coming through a certain entrance; </li><li> automatically\u00a0\u2014 set up an electric fence on a certain entrance to fry the zombies. </li></ul><p>If an entrance is defended either or both ways during some minute, no zombie goes through.</p><p>Every entrance is defended by a single dedicated survivor. The $$$i$$$-th entrance is defended manually from minute $$$l_i$$$ until minute $$$r_i$$$, non-inclusive\u00a0\u2014 $$$[l_i, r_i)$$$.</p><p>There are $$$k$$$ generators that can be used to defend the entrances automatically. Every entrance should be connected to exactly one generator, but a generator can be connected to multiple entrances (or even none of them). Each generator will work for exactly $$$m$$$ <span class=\"tex-font-style-bf\">consecutive</span> minutes. Polycarp can choose when to power on each generator independently of each other, the $$$m$$$ minute long interval should be fully inside the $$$[0, x)$$$ time interval.</p><p>Polycarp is a weird gamer. He wants the game to be as difficult as possible for him. So he wants to connect each entrance to a generator and choose the time for each generator in such a way that as many zombies as possible enter the base. Please, help him to achieve that!</p>",
    "inputSpecification": "<p>The first line contains four integers $$$n, k, x$$$ and $$$m$$$ ($$$1 \\le k \\le n \\le 2000$$$; $$$1 \\le m \\le x \\le 10^9$$$)\u00a0\u2014 the number of entrances, the number of generators, the duration of the zombie invasion and the duration of all generators.</p><p>The $$$i$$$-th of the next $$$n$$$ lines contains two integers $$$l_i$$$ and $$$r_i$$$ ($$$0 \\le l_i &lt; r_i \\le x$$$)\u00a0\u2014 the time interval the $$$i$$$-th entrance is defended manually.</p>",
    "outputSpecification": "<p>Print a single integer\u00a0\u2014 the largest number of zombies that can enter the base after Polycarp connects each entrance to some generator and chooses the time for each generator.</p>",
    "samples": [
        {
            "input": "\n3 3 10 3\n0 2\n1 7\n4 7\n",
            "output": "\n18\n"
        },
        {
            "input": "\n3 2 10 3\n0 2\n1 7\n4 7\n",
            "output": "\n18\n"
        },
        {
            "input": "\n3 1 10 3\n0 2\n1 7\n4 7\n",
            "output": "\n16\n"
        },
        {
            "input": "\n2 1 20 6\n11 13\n2 14\n",
            "output": "\n22\n"
        },
        {
            "input": "\n5 3 7 4\n4 6\n0 3\n4 7\n1 5\n2 7\n",
            "output": "\n14\n"
        },
        {
            "input": "\n6 3 9 4\n3 9\n4 9\n2 5\n0 5\n6 9\n2 3\n",
            "output": "\n26\n"
        }
    ],
    "note": null,
    "contestId": 1832,
    "index": "F",
    "name": "Zombies",
    "type": "PROGRAMMING",
    "tags": [
        "binary search",
        "dp"
    ],
    "solvedCount": 257
}