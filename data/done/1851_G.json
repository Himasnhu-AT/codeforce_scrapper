{
    "title": "G. Vlad and the Mountains",
    "timeLimit": {
        "value": 5.0,
        "unit": "seconds"
    },
    "memoryLimit": {
        "value": 256.0,
        "unit": "megabytes"
    },
    "statement": "<p>Vlad decided to go on a trip to the mountains. He plans to move between $$$n$$$ mountains, some of which are connected by roads. The $$$i$$$-th mountain has a height of $$$h_i$$$.</p><p>If there is a road between mountains $$$i$$$ and $$$j$$$, Vlad can move from mountain $$$i$$$ to mountain $$$j$$$ by spending $$$h_j - h_i$$$ units of energy. If his energy drops below zero during the transition, he will not be able to move from mountain $$$i$$$ to mountain $$$j$$$. Note that $$$h_j - h_i$$$ can be negative and then the energy will be restored.</p><p>Vlad wants to consider different route options, so he asks you to answer the following queries: is it possible to construct some route starting at mountain $$$a$$$ and ending at mountain $$$b$$$, given that he initially has $$$e$$$ units of energy?</p>",
    "inputSpecification": "<p>The first line of the input contains an integer $$$t$$$ ($$$1 \\le t \\le 10^4$$$)\u00a0\u2014 the number of test cases.</p><p>The descriptions of the test cases follow.</p><p>The first line of each test case contains two numbers $$$n$$$ and $$$m$$$ ($$$2 \\le n \\le 2 \\cdot 10^5$$$, $$$1 \\le m \\le \\min(\\frac{n\\cdot(n - 1)}{2}, 2 \\cdot 10^5)$$$)\u00a0\u2014 the number of mountains and the number of roads between them, respectively.</p><p>The second line contains $$$n$$$ integers $$$h_1, h_2, h_3, \\dots, h_n$$$ ($$$1 \\le h_i \\le 10^9$$$)\u00a0\u2014 the heights of the mountains.</p><p>The next $$$m$$$ lines contain two integers $$$u$$$ and $$$v$$$ ($$$1 \\le u, v \\le n$$$, $$$u \\ne v$$$)\u00a0\u2014 the numbers of the mountains connected by a road. It is guaranteed that no road appears twice.</p><p>The next line contains an integer $$$q$$$ ($$$1 \\le q \\le 2 \\cdot 10^5$$$)\u00a0\u2014 the number of queries.</p><p>The following $$$q$$$ lines contain three numbers $$$a$$$, $$$b$$$, and $$$e$$$ ($$$1 \\le a, b \\le n$$$, $$$0 \\le e \\le 10^9$$$)\u00a0\u2014 the initial and final mountains of the route, and the amount of energy, respectively.</p><p>It is guaranteed that the sum of $$$n$$$ over all test cases does not exceed $$$2 \\cdot 10^5$$$. The same guarantee applies to $$$m$$$ and $$$q$$$.</p>",
    "outputSpecification": "<p>For each query, output \"<span class=\"tex-font-style-tt\">YES</span>\" if Vlad can construct a route from mountain $$$a$$$ to mountain $$$b$$$, and \"<span class=\"tex-font-style-tt\">NO</span>\" otherwise.</p><p>You can output the answer in any case (for example, the strings \"<span class=\"tex-font-style-tt\">yEs</span>\", \"<span class=\"tex-font-style-tt\">yes</span>\", \"<span class=\"tex-font-style-tt\">Yes</span>\", and \"<span class=\"tex-font-style-tt\">YES</span>\" will be recognized as a positive answer).</p><p>In the examples below, the answers for different test cases are separated by an empty line, which you do not need to output.</p>",
    "samples": [
        {
            "input": "\n<div class=\"test-example-line test-example-line-even test-example-line-0\">2</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">7 7</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">1 5 3 4 2 4 1</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">1 4</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">4 3</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">3 6</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">3 2</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">2 5</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">5 6</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">5 7</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">5</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">1 1 3</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">6 2 0</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">4 7 0</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">1 7 4</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">1 7 2</div><div class=\"test-example-line test-example-line-even test-example-line-2\">6 5</div><div class=\"test-example-line test-example-line-even test-example-line-2\">4 7 6 2 5 1</div><div class=\"test-example-line test-example-line-even test-example-line-2\">1 3</div><div class=\"test-example-line test-example-line-even test-example-line-2\">5 3</div><div class=\"test-example-line test-example-line-even test-example-line-2\">1 5</div><div class=\"test-example-line test-example-line-even test-example-line-2\">2 4</div><div class=\"test-example-line test-example-line-even test-example-line-2\">6 2</div><div class=\"test-example-line test-example-line-even test-example-line-2\">5</div><div class=\"test-example-line test-example-line-even test-example-line-2\">1 5 1</div><div class=\"test-example-line test-example-line-even test-example-line-2\">1 3 1</div><div class=\"test-example-line test-example-line-even test-example-line-2\">1 2 1000</div><div class=\"test-example-line test-example-line-even test-example-line-2\">6 2 6</div><div class=\"test-example-line test-example-line-even test-example-line-2\">6 2 5</div>",
            "output": "\nYES\nNO\nYES\nYES\nNO\n\nYES\nNO\nNO\nYES\nNO\n"
        },
        {
            "input": "\n<div class=\"test-example-line test-example-line-even test-example-line-0\">2</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">3 2</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">1 3 9</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">1 2</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">2 3</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">5</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">1 1 1</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">3 2 2</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">1 1 2</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">3 3 0</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">1 2 1</div><div class=\"test-example-line test-example-line-even test-example-line-2\">3 3</div><div class=\"test-example-line test-example-line-even test-example-line-2\">1 4 1</div><div class=\"test-example-line test-example-line-even test-example-line-2\">1 2</div><div class=\"test-example-line test-example-line-even test-example-line-2\">2 3</div><div class=\"test-example-line test-example-line-even test-example-line-2\">1 3</div><div class=\"test-example-line test-example-line-even test-example-line-2\">5</div><div class=\"test-example-line test-example-line-even test-example-line-2\">3 3 9</div><div class=\"test-example-line test-example-line-even test-example-line-2\">1 3 6</div><div class=\"test-example-line test-example-line-even test-example-line-2\">1 1 2</div><div class=\"test-example-line test-example-line-even test-example-line-2\">3 3 6</div><div class=\"test-example-line test-example-line-even test-example-line-2\">3 3 4</div>",
            "output": "\nYES\nYES\nYES\nYES\nNO\n\nYES\nYES\nYES\nYES\nYES\n"
        },
        {
            "input": "\n<div class=\"test-example-line test-example-line-even test-example-line-0\">1</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">6 10</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">7 9 2 10 8 6</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">4 2</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">6 1</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">4 5</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">3 5</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">6 4</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">1 3</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">2 6</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">6 5</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">1 2</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">3 6</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">5</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">4 4 8</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">3 3 1</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">5 5 9</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">2 1 7</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">6 6 10</div>",
            "output": "\nYES\nYES\nYES\nYES\nYES\n"
        }
    ],
    "note": null,
    "contestId": 1851,
    "index": "G",
    "name": "Vlad and the Mountains",
    "type": "PROGRAMMING",
    "tags": [
        "binary search",
        "data structures",
        "dsu",
        "graphs",
        "implementation",
        "sortings",
        "trees",
        "two pointers"
    ],
    "solvedCount": 2983
}