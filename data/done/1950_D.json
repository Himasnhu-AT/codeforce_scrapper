{
    "title": "D. Product of Binary Decimals",
    "timeLimit": {
        "value": 3.0,
        "unit": "seconds"
    },
    "memoryLimit": {
        "value": 256.0,
        "unit": "megabytes"
    },
    "statement": "<p>Let's call a number a <span class=\"tex-font-style-it\">binary decimal</span> if it is a positive integer and all digits in its decimal notation are either $$$0$$$ or $$$1$$$. For example, $$$1\\,010\\,111$$$ is a binary decimal, while $$$10\\,201$$$ and $$$787\\,788$$$ are not.</p><p>Given a number $$$n$$$, you are asked whether or not it is possible to represent $$$n$$$ as a product of some (not necessarily distinct) binary decimals.</p>",
    "inputSpecification": "<p>The first line contains a single integer $$$t$$$ ($$$1 \\leq t \\leq 5 \\cdot 10^4$$$)\u00a0\u2014 the number of test cases.</p><p>The only line of each test case contains a single integer $$$n$$$ ($$$1 \\leq n \\leq 10^5$$$).</p>",
    "outputSpecification": "<p>For each test case, output \"<span class=\"tex-font-style-tt\">YES</span>\" (without quotes) if $$$n$$$ can be represented as a product of binary decimals, and \"<span class=\"tex-font-style-tt\">NO</span>\" (without quotes) otherwise.</p><p>You can output \"<span class=\"tex-font-style-tt\">YES</span>\" and \"<span class=\"tex-font-style-tt\">NO</span>\" in any case (for example, strings \"<span class=\"tex-font-style-tt\">yES</span>\", \"<span class=\"tex-font-style-tt\">yes</span>\", and \"<span class=\"tex-font-style-tt\">Yes</span>\" will be recognized as a positive response).</p>",
    "samples": [
        {
            "input": "\n<div class=\"test-example-line test-example-line-even test-example-line-0\">11</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">121</div><div class=\"test-example-line test-example-line-even test-example-line-2\">1</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">14641</div><div class=\"test-example-line test-example-line-even test-example-line-4\">12221</div><div class=\"test-example-line test-example-line-odd test-example-line-5\">10110</div><div class=\"test-example-line test-example-line-even test-example-line-6\">100000</div><div class=\"test-example-line test-example-line-odd test-example-line-7\">99</div><div class=\"test-example-line test-example-line-even test-example-line-8\">112</div><div class=\"test-example-line test-example-line-odd test-example-line-9\">2024</div><div class=\"test-example-line test-example-line-even test-example-line-10\">12421</div><div class=\"test-example-line test-example-line-odd test-example-line-11\">1001</div>",
            "output": "\nYES\nYES\nYES\nYES\nYES\nYES\nNO\nNO\nNO\nNO\nYES\n"
        }
    ],
    "note": "<p>The first five test cases can be represented as a product of binary decimals as follows: </p><ul> <li> $$$121 = 11 \\times 11$$$. </li><li> $$$1 = 1$$$ is already a binary decimal. </li><li> $$$14\\,641 = 11 \\times 11 \\times 11 \\times 11$$$. </li><li> $$$12\\,221 = 11 \\times 11 \\times 101$$$. </li><li> $$$10\\,110 = 10\\,110$$$ is already a binary decimal. </li></ul>",
    "contestId": 1950,
    "index": "D",
    "name": "Product of Binary Decimals",
    "type": "PROGRAMMING",
    "tags": [
        "brute force",
        "dp",
        "implementation",
        "number theory"
    ],
    "solvedCount": 21223
}