{
    "title": "E. Replace",
    "timeLimit": {
        "value": 1.5,
        "unit": "seconds"
    },
    "memoryLimit": {
        "value": 1024.0,
        "unit": "megabytes"
    },
    "statement": "<p>You are given an integer array $$$a_1,\\ldots, a_n$$$, where $$$1\\le a_i \\le n$$$ for all $$$i$$$.</p><p>There's a \"replace\" function $$$f$$$ which takes a pair of integers $$$(l, r)$$$, where $$$l \\le r$$$, as input and outputs the pair $$$$$$f\\big( (l, r) \\big)=\\left(\\min\\{a_l,a_{l+1},\\ldots,a_r\\},\\, \\max\\{a_l,a_{l+1},\\ldots,a_r\\}\\right).$$$$$$</p><p>Consider repeated calls of this function. That is, from a starting pair $$$(l, r)$$$ we get $$$f\\big((l, r)\\big)$$$, then $$$f\\big(f\\big((l, r)\\big)\\big)$$$, then $$$f\\big(f\\big(f\\big((l, r)\\big)\\big)\\big)$$$, and so on.</p><p>Now you need to answer $$$q$$$ queries. For the $$$i$$$-th query you have two integers $$$l_i$$$ and $$$r_i$$$ ($$$1\\le l_i\\le r_i\\le n$$$). You must answer the minimum number of times you must apply the \"replace\" function to the pair $$$(l_i,r_i)$$$ to get $$$(1, n)$$$, or report that it is impossible.</p>",
    "inputSpecification": "<p>The first line contains two positive integers $$$n$$$, $$$q$$$ ($$$1\\le n,q\\le 10^5$$$)\u00a0\u2014 the length of the sequence $$$a$$$ and the number of the queries.</p><p>The second line contains $$$n$$$ positive integers $$$a_1,a_2,\\ldots,a_n$$$ ($$$1\\le a_i\\le n$$$)\u00a0\u2014 the sequence $$$a$$$.</p><p>Each line of the following $$$q$$$ lines contains two integers $$$l_i$$$, $$$r_i$$$ ($$$1\\le l_i\\le r_i\\le n$$$)\u00a0\u2014 the queries.</p>",
    "outputSpecification": "<p>For each query, output the required number of times, or $$$-1$$$ if it is impossible.</p>",
    "samples": [
        {
            "input": "\n5 6\n2 5 4 1 3\n4 4\n1 5\n1 4\n3 5\n4 5\n2 3\n",
            "output": "\n-1\n0\n1\n2\n3\n4\n"
        },
        {
            "input": "\n6 3\n2 3 4 6 1 2\n5 6\n2 5\n2 3\n",
            "output": "\n5\n1\n3\n"
        },
        {
            "input": "\n5 3\n3 2 2 4 1\n2 5\n1 3\n1 5\n",
            "output": "\n-1\n-1\n0\n"
        }
    ],
    "note": "<p>In the first example, $$$n=5$$$ and $$$a=[2,5,4,1,3]$$$.</p><p>For the first query: $$$(4,4)\\to(1,1)\\to(2,2)\\to(5,5)\\to(3,3)\\to(4,4)\\to\\ldots$$$, so it's impossible to get $$$(1,5)$$$.</p><p>For the second query, you already have $$$(1,5)$$$.</p><p>For the third query: $$$(1,4)\\to(1,5)$$$.</p><p>For the fourth query: $$$(3,5)\\to(1,4)\\to(1,5)$$$.</p><p>For the fifth query: $$$(4,5)\\to(1,3)\\to(2,5)\\to(1,5)$$$.</p><p>For the sixth query: $$$(2,3)\\to(4,5)\\to(1,3)\\to(2,5)\\to(1,5)$$$.</p>",
    "contestId": 1707,
    "index": "E",
    "name": "Replace",
    "type": "PROGRAMMING",
    "tags": [
        "binary search",
        "data structures"
    ],
    "solvedCount": 568
}