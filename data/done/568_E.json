{
    "title": "E. Longest Increasing Subsequence",
    "timeLimit": {
        "value": 1.5,
        "unit": "seconds"
    },
    "memoryLimit": {
        "value": 128.0,
        "unit": "megabytes"
    },
    "statement": "<p><span class=\"tex-font-style-it\">Note that the memory limit in this problem is less than usual</span>.</p><p>Let's consider an array consisting of positive integers, some positions of which contain gaps.</p><p>We have a collection of numbers that can be used to fill the gaps. Each number from the given collection can be used at most once.</p><p>Your task is to determine such way of filling gaps that the longest increasing subsequence in the formed array has a maximum size.</p>",
    "inputSpecification": "<p>The first line contains a single integer <span class=\"tex-span\"><i>n</i></span>\u00a0\u2014 the length of the array (<span class=\"tex-span\">1\u2009\u2264\u2009<i>n</i>\u2009\u2264\u200910<sup class=\"upper-index\">5</sup></span>).</p><p>The second line contains <span class=\"tex-span\"><i>n</i></span> space-separated integers\u00a0\u2014 the elements of the sequence. A gap is marked as \"<span class=\"tex-font-style-tt\">-1</span>\". The elements that are not gaps are positive integers not exceeding <span class=\"tex-span\">10<sup class=\"upper-index\">9</sup></span>. It is guaranteed that the sequence contains <span class=\"tex-span\">0\u2009\u2264\u2009<i>k</i>\u2009\u2264\u20091000</span> gaps.</p><p>The third line contains a single positive integer <span class=\"tex-span\"><i>m</i></span>\u00a0\u2014 the number of elements to fill the gaps (<span class=\"tex-span\"><i>k</i>\u2009\u2264\u2009<i>m</i>\u2009\u2264\u200910<sup class=\"upper-index\">5</sup></span>).</p><p>The fourth line contains <span class=\"tex-span\"><i>m</i></span> positive integers\u00a0\u2014 the numbers to fill gaps. Each number is a positive integer not exceeding <span class=\"tex-span\">10<sup class=\"upper-index\">9</sup></span>. Some numbers may be equal. </p>",
    "outputSpecification": "<p>Print <span class=\"tex-span\"><i>n</i></span> space-separated numbers in a single line\u00a0\u2014 the resulting sequence. If there are multiple possible answers, print any of them.</p>",
    "samples": [
        {
            "input": "3<br/>1 2 3<br/>1<br/>10<br/>",
            "output": "1 2 3 <br/>"
        },
        {
            "input": "3<br/>1 -1 3<br/>3<br/>1 2 3<br/>",
            "output": "1 2 3 <br/>"
        },
        {
            "input": "2<br/>-1 2<br/>2<br/>2 4<br/>",
            "output": "2 2 <br/>"
        },
        {
            "input": "3<br/>-1 -1 -1<br/>5<br/>1 1 1 1 2<br/>",
            "output": "1 1 2 <br/>"
        },
        {
            "input": "4<br/>-1 -1 -1 2<br/>4<br/>1 1 2 2<br/>",
            "output": "1 2 1 2 <br/>"
        }
    ],
    "note": "<p>In the first sample there are no gaps, so the correct answer is the initial sequence.</p><p>In the second sample there is only one way to get an increasing subsequence of length <span class=\"tex-span\">3</span>.</p><p>In the third sample answer <span class=\"tex-font-style-tt\">\"4 2\"</span> would also be correct. Note that only strictly increasing subsequences are considered.</p><p>In the fifth sample the answer <span class=\"tex-font-style-tt\">\"1 1 1 2\"</span> is not considered correct, as number <span class=\"tex-span\">1</span> can be used in replacing only two times.</p>",
    "contestId": 568,
    "index": "E",
    "name": "Longest Increasing Subsequence",
    "type": "PROGRAMMING",
    "tags": [
        "data structures",
        "dp"
    ],
    "solvedCount": 578
}