{
    "title": "C. Little Girl and Maximum Sum",
    "timeLimit": {
        "value": 1.0,
        "unit": "second"
    },
    "memoryLimit": {
        "value": 256.0,
        "unit": "megabytes"
    },
    "statement": "<p>The little girl loves the problems on array queries very much.</p><p>One day she came across a rather well-known problem: you've got an array of $$$n$$$ elements (the elements of the array are indexed starting from 1); also, there are $$$q$$$ queries, each one is defined by a pair of integers $$$l_i$$$, $$$r_i$$$ $$$(1 \\le l_i \\le r_i \\le n)$$$. You need to find for each query the sum of elements of the array with indexes from $$$l_i$$$ to $$$r_i$$$, inclusive.</p><p>The little girl found the problem rather boring. She decided to reorder the array elements before replying to the queries in a way that makes the sum of query replies maximum possible. Your task is to find the value of this maximum sum.</p>",
    "inputSpecification": "<p>The first line contains two space-separated integers $$$n$$$ ($$$1 \\le n \\le 2\\cdot10^5$$$) and $$$q$$$ ($$$1 \\le q \\le 2\\cdot10^5$$$) \u2014 the number of elements in the array and the number of queries, correspondingly.</p><p>The next line contains $$$n$$$ space-separated integers $$$a_i$$$ ($$$1 \\le a_i \\le 2\\cdot10^5$$$) \u2014 the array elements.</p><p>Each of the following $$$q$$$ lines contains two space-separated integers $$$l_i$$$ and $$$r_i$$$ ($$$1 \\le l_i \\le r_i \\le n$$$) \u2014 the $$$i$$$-th query.</p>",
    "outputSpecification": "<p>In a single line print, a single integer \u2014 the maximum sum of query replies after the array elements are reordered.</p><p>Please, do not use the <span class=\"tex-font-style-tt\">%lld</span> specifier to read or write 64-bit integers in C++. It is preferred to use the <span class=\"tex-font-style-tt\">cin</span>, <span class=\"tex-font-style-tt\">cout</span> streams or the <span class=\"tex-font-style-tt\">%I64d</span> specifier.</p>",
    "samples": [
        {
            "input": "3 3<br/>5 3 2<br/>1 2<br/>2 3<br/>1 3<br/>",
            "output": "25<br/>"
        },
        {
            "input": "5 3<br/>5 2 4 1 3<br/>1 5<br/>2 3<br/>2 3<br/>",
            "output": "33<br/>"
        }
    ],
    "note": null,
    "contestId": 276,
    "index": "C",
    "name": "Little Girl and Maximum Sum",
    "type": "PROGRAMMING",
    "tags": [
        "data structures",
        "greedy",
        "implementation",
        "sortings"
    ],
    "solvedCount": 24520
}