{
    "title": "C2. k-LCM (hard version)",
    "timeLimit": {
        "value": 1.0,
        "unit": "second"
    },
    "memoryLimit": {
        "value": 256.0,
        "unit": "megabytes"
    },
    "statement": "<p><span class=\"tex-font-style-bf\">It is the hard version of the problem. The only difference is that in this version $$$3 \\le k \\le n$$$.</span></p><p>You are given a positive integer $$$n$$$. Find $$$k$$$ positive integers $$$a_1, a_2, \\ldots, a_k$$$, such that:</p><ul> <li> $$$a_1 + a_2 + \\ldots + a_k = n$$$ </li><li> $$$LCM(a_1, a_2, \\ldots, a_k) \\le \\frac{n}{2}$$$ </li></ul><p>Here $$$LCM$$$ is the <a href=\"https://en.wikipedia.org/wiki/Least_common_multiple\">least common multiple</a> of numbers $$$a_1, a_2, \\ldots, a_k$$$.</p><p>We can show that for given constraints the answer always exists.</p>",
    "inputSpecification": "<p>The first line contains a single integer $$$t$$$ $$$(1 \\le t \\le 10^4)$$$ \u00a0\u2014 the number of test cases.</p><p>The only line of each test case contains two integers $$$n$$$, $$$k$$$ ($$$3 \\le n \\le 10^9$$$, $$$3 \\le k \\le n$$$).</p><p>It is guaranteed that the sum of $$$k$$$ over all test cases does not exceed $$$10^5$$$.</p>",
    "outputSpecification": "<p>For each test case print $$$k$$$ positive integers $$$a_1, a_2, \\ldots, a_k$$$, for which all conditions are satisfied.</p>",
    "samples": [
        {
            "input": "\n2\n6 4\n9 5\n",
            "output": "\n1 2 2 1 \n1 3 3 1 1 \n"
        }
    ],
    "note": null,
    "contestId": 1497,
    "index": "C2",
    "name": "k-LCM (hard version)",
    "type": "PROGRAMMING",
    "tags": [
        "constructive algorithms",
        "math"
    ],
    "solvedCount": 16626
}