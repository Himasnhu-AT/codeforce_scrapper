{
    "title": "G. Colorful Tree Again",
    "timeLimit": {
        "value": 2.0,
        "unit": "seconds"
    },
    "memoryLimit": {
        "value": 512.0,
        "unit": "megabytes"
    },
    "statement": "<p>An edge-weighted tree of $$$n$$$ nodes is given with each edge colored in some color. Each node of this tree can be blocked or unblocked, all nodes are unblocked initially.</p><p>A <span class=\"tex-font-style-it\">simple path</span> is a path in a graph that does not have repeating nodes. The <span class=\"tex-font-style-it\">length</span> of a path is defined as the sum of weights of all edges on the path.</p><p>A path is <span class=\"tex-font-style-it\">good</span> when it is a <span class=\"tex-font-style-it\">simple path</span> consisting of edges of the same color $$$c$$$, all edges of color $$$c$$$ are on this path, and every node on the path is unblocked.</p><p>You need to operate $$$2$$$ kinds of queries: </p><ol> <li> block a node, </li><li> unblock a node. </li></ol><p>After each query, print the maximum <span class=\"tex-font-style-it\">length</span> among all <span class=\"tex-font-style-it\">good</span> paths. If there are no <span class=\"tex-font-style-it\">good</span> paths, print $$$0$$$.</p>",
    "inputSpecification": "<p>The first line contains two integers $$$n$$$, $$$q$$$ ($$$1 \\leq n,q \\leq 2\\cdot 10^5$$$) \u2014 the number of nodes and the number of queries.</p><p>Then $$$n-1$$$ lines follow, each containing four integers $$$u$$$, $$$v$$$, $$$w$$$ and $$$c$$$ ($$$1 \\leq u,v,w,c \\leq n$$$; $$$u \\not = v$$$), denoting a weighted edge connecting node $$$u$$$ and node $$$v$$$ with weight $$$w$$$ and color $$$c$$$. It is guaranteed that these edges form a tree.</p><p>Then $$$q$$$ lines follow, each containing two integers $$$p$$$ and $$$x$$$ ($$$p = 0$$$ or $$$p = 1$$$, $$$1\\leq x\\leq n$$$), denoting a query: </p><ol> <li> if $$$p = 0$$$, block the node $$$x$$$. It's guaranteed that it's not blocked at this time; </li><li> if $$$p = 1$$$, unblock the node $$$x$$$. It's guaranteed that it's blocked at this time. </li></ol>",
    "outputSpecification": "<p>For each query, print the maximum length of a <span class=\"tex-font-style-it\">good</span> path. If there are no <span class=\"tex-font-style-it\">good</span> paths, print $$$0$$$.</p>",
    "samples": [
        {
            "input": "\n5 4\n4 1 3 4\n5 2 4 4\n3 1 3 2\n1 2 5 1\n0 4\n0 3\n0 2\n1 3\n",
            "output": "\n5\n5\n0\n3\n"
        },
        {
            "input": "\n5 5\n4 1 4 4\n4 5 2 2\n3 1 2 4\n3 2 3 1\n0 3\n0 4\n1 3\n1 4\n0 1\n",
            "output": "\n2\n0\n3\n6\n3\n"
        },
        {
            "input": "\n6 9\n3 2 2 3\n2 4 4 2\n3 1 5 5\n6 4 3 2\n5 3 1 3\n0 2\n0 4\n0 5\n0 6\n1 2\n1 4\n1 5\n0 3\n1 6\n",
            "output": "\n5\n5\n5\n5\n5\n5\n5\n0\n7\n"
        },
        {
            "input": "\n1 2\n0 1\n1 1\n",
            "output": "\n0\n0\n"
        }
    ],
    "note": null,
    "contestId": 1787,
    "index": "G",
    "name": "Colorful Tree Again",
    "type": "PROGRAMMING",
    "tags": [
        "brute force",
        "data structures",
        "trees"
    ],
    "solvedCount": 401
}