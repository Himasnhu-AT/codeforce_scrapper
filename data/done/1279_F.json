{
    "title": "F. New Year and Handle Change",
    "timeLimit": {
        "value": 3.0,
        "unit": "seconds"
    },
    "memoryLimit": {
        "value": 256.0,
        "unit": "megabytes"
    },
    "statement": "<p>New Year is getting near. So it's time to change handles on codeforces. Mishka wants to change his handle but in such a way that people would not forget who he is.</p><p>To make it work, he only allowed to change letters case. More formally, during <span class=\"tex-font-style-bf\">one</span> handle change he can choose any segment of his handle $$$[i; i + l - 1]$$$ and apply <span class=\"tex-font-style-tt\">tolower</span> or <span class=\"tex-font-style-tt\">toupper</span> to all letters of his handle on this segment (more fomally, replace all uppercase letters with corresponding lowercase or vice versa). The length $$$l$$$ is fixed for all changes.</p><p>Because it is not allowed to change codeforces handle too often, Mishka can perform at most $$$k$$$ such operations. What is the <span class=\"tex-font-style-bf\">minimum</span> value of $$$min(lower, upper)$$$ (where $$$lower$$$ is the number of lowercase letters, and $$$upper$$$ is the number of uppercase letters) can be obtained after optimal sequence of changes?</p>",
    "inputSpecification": "<p>The first line of the input contains three integers $$$n, k$$$ and $$$l$$$ ($$$1 \\le n, k, l \\le 10^6, l \\le n)$$$ \u2014 the length of Mishka's handle, the number of changes and the length of the segment.</p><p>The second line of the input contains one string $$$s$$$, consisting of $$$n$$$ lowercase and uppercase Latin letters \u2014 Mishka's handle.</p>",
    "outputSpecification": "<p>Print one integer \u2014 the minimum value of $$$min(lower, upper)$$$ after that Mishka change his handle at most $$$k$$$ times in a way described in the problem statement.</p>",
    "samples": [
        {
            "input": "\n7 1 4\nPikMike\n",
            "output": "\n0\n"
        },
        {
            "input": "\n15 2 2\nAaAaAAaaAAAAaaA\n",
            "output": "\n2\n"
        },
        {
            "input": "\n14 2 6\naBcdEFGHIJklMn\n",
            "output": "\n0\n"
        },
        {
            "input": "\n9 2 2\naAaAAAaaA\n",
            "output": "\n1\n"
        }
    ],
    "note": null,
    "contestId": 1279,
    "index": "F",
    "name": "New Year and Handle Change",
    "type": "PROGRAMMING",
    "tags": [
        "binary search",
        "dp"
    ],
    "solvedCount": 844
}