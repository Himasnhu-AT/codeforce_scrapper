{
    "title": "D. Missing Subarray Sum",
    "timeLimit": {
        "value": 5.0,
        "unit": "seconds"
    },
    "memoryLimit": {
        "value": 256.0,
        "unit": "megabytes"
    },
    "statement": "<p>There is a hidden array $$$a$$$ of $$$n$$$ positive integers. You know that $$$a$$$ is a <span class=\"tex-font-style-bf\">palindrome</span>, or in other words, for all $$$1 \\le i \\le n$$$, $$$a_i = a_{n + 1 - i}$$$. You are given the sums of all but one of its distinct subarrays, in arbitrary order. The subarray whose sum is not given can be any of the $$$\\frac{n(n+1)}{2}$$$ distinct subarrays of $$$a$$$.</p><p>Recover any possible palindrome $$$a$$$. The input is chosen such that there is always at least one array $$$a$$$ that satisfies the conditions.</p><p>An array $$$b$$$ is a subarray of $$$a$$$ if $$$b$$$ can be obtained from $$$a$$$ by the deletion of several (possibly, zero or all) elements from the beginning and several (possibly, zero or all) elements from the end.</p>",
    "inputSpecification": "<p>The first line of the input contains a single integer $$$t$$$ ($$$1 \\le t \\le 200$$$)\u00a0\u2014 the number of test cases. The description of the test cases follows.</p><p>The first line of each test case contains a single integer $$$n$$$ ($$$3 \\le n \\le 1000$$$)\u00a0\u2014 the size of the array $$$a$$$.</p><p>The next line of each test case contains $$$\\frac{n(n+1)}{2} - 1$$$ integers $$$s_i$$$ ($$$1\\leq s_i \\leq 10^9$$$)\u00a0\u2014 all but one of the subarray sums of $$$a$$$.</p><p>It is guaranteed that the sum of $$$n$$$ over all test cases does not exceed $$$1000$$$.</p><p>Additional constraint on the input: There is always at least one valid solution.</p><p><span class=\"tex-font-style-bf\">Hacks are disabled for this problem.</span></p>",
    "outputSpecification": "<p>For each test case, print one line containing $$$n$$$ positive integers $$$a_1, a_2, \\cdots a_n$$$\u00a0\u2014 any valid array $$$a$$$. Note that $$$a$$$ must be a palindrome.</p><p>If there are multiple solutions, print any.</p>",
    "samples": [
        {
            "input": "\n<div class=\"test-example-line test-example-line-even test-example-line-0\">7</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">3</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">1 2 3 4 1</div><div class=\"test-example-line test-example-line-even test-example-line-2\">4</div><div class=\"test-example-line test-example-line-even test-example-line-2\">18 2 11 9 7 11 7 2 9</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">4</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">5 10 5 16 3 3 13 8 8</div><div class=\"test-example-line test-example-line-even test-example-line-4\">4</div><div class=\"test-example-line test-example-line-even test-example-line-4\">8 10 4 6 4 20 14 14 6</div><div class=\"test-example-line test-example-line-odd test-example-line-5\">5</div><div class=\"test-example-line test-example-line-odd test-example-line-5\">1 2 3 4 5 4 3 2 1 1 2 3 2 1</div><div class=\"test-example-line test-example-line-even test-example-line-6\">5</div><div class=\"test-example-line test-example-line-even test-example-line-6\">1 1 2 2 2 3 3 3 3 4 5 5 6 8</div><div class=\"test-example-line test-example-line-odd test-example-line-7\">3</div><div class=\"test-example-line test-example-line-odd test-example-line-7\">500000000 1000000000 500000000 500000000 1000000000</div>",
            "output": "\n1 2 1 \n7 2 2 7 \n3 5 5 3 \n6 4 4 6 \n1 1 1 1 1 \n2 1 2 1 2 \n500000000 500000000 500000000 \n"
        }
    ],
    "note": "<p>For the first example case, the subarrays of $$$a = [1, 2, 1]$$$ are: </p><ul> <li> $$$[1]$$$ with sum $$$1$$$, </li><li> $$$[2]$$$ with sum $$$2$$$, </li><li> $$$[1]$$$ with sum $$$1$$$, </li><li> $$$[1, 2]$$$ with sum $$$3$$$, </li><li> $$$[2, 1]$$$ with sum $$$3$$$, </li><li> $$$[1, 2, 1]$$$ with sum $$$4$$$. </li></ul> So the full list of subarray sums is $$$1, 1, 2, 3, 3, 4$$$, and the sum that is missing from the input list is $$$3$$$.<p>For the second example case, the missing subarray sum is $$$4$$$, for the subarray $$$[2, 2]$$$.</p><p>For the third example case, the missing subarray sum is $$$13$$$, because there are two subarrays with sum $$$13$$$ ($$$[3, 5, 5]$$$ and $$$[5, 5, 3]$$$) but $$$13$$$ only occurs once in the input.</p>",
    "contestId": 1965,
    "index": "D",
    "name": "Missing Subarray Sum",
    "type": "PROGRAMMING",
    "tags": [
        "constructive algorithms"
    ],
    "solvedCount": 304
}