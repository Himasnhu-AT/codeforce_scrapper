{
    "title": "G. Maximum Adjacent Pairs",
    "timeLimit": {
        "value": 3.0,
        "unit": "seconds"
    },
    "memoryLimit": {
        "value": 512.0,
        "unit": "megabytes"
    },
    "statement": "<p>You are given an array $$$a$$$ consisting of $$$n$$$ non-negative integers.</p><p>You have to replace each $$$0$$$ in $$$a$$$ with an integer from $$$1$$$ to $$$n$$$ (different elements equal to $$$0$$$ can be replaced by different integers).</p><p>The <span class=\"tex-font-style-it\">value</span> of the array you obtain is the number of integers $$$k$$$ from $$$1$$$ to $$$n$$$ such that the following condition holds: there exist a pair of adjacent elements equal to $$$k$$$ (i.\u2009e. there exists some $$$i \\in [1, n - 1]$$$ such that $$$a_i = a_{i + 1} = k$$$). If there are multiple such pairs for some integer $$$k$$$, this integer is counted in the <span class=\"tex-font-style-it\">value</span> only once.</p><p>Your task is to obtain the array with the maximum possible <span class=\"tex-font-style-it\">value</span>.</p>",
    "inputSpecification": "<p>The first line contains one integer $$$n$$$ ($$$2 \\le n \\le 3 \\cdot 10^5$$$)\u00a0\u2014 the number of elements in the array.</p><p>The second line contains $$$n$$$ integers $$$a_1, a_2, \\dots, a_n$$$ ($$$0 \\le a_i \\le \\min(n, 600)$$$)\u00a0\u2014 the elements of the array.</p>",
    "outputSpecification": "<p>Print $$$n$$$ integers not less than $$$1$$$ and not greater than $$$n$$$\u00a0\u2014 the array with the maximum possible <span class=\"tex-font-style-it\">value</span> you can obtain.</p><p>If there are multiple answers, print any of them.</p>",
    "samples": [
        {
            "input": "\n4\n1 1 0 2\n",
            "output": "\n1 1 2 2 \n"
        },
        {
            "input": "\n5\n0 0 0 0 0\n",
            "output": "\n3 1 1 3 3\n"
        },
        {
            "input": "\n5\n1 2 3 4 5\n",
            "output": "\n1 2 3 4 5 \n"
        },
        {
            "input": "\n6\n1 0 0 0 0 1\n",
            "output": "\n1 2 3 3 1 1\n"
        },
        {
            "input": "\n3\n3 0 2\n",
            "output": "\n3 2 2 \n"
        },
        {
            "input": "\n5\n1 0 2 0 1\n",
            "output": "\n1 2 2 1 1 \n"
        },
        {
            "input": "\n7\n1 0 2 3 1 0 2\n",
            "output": "\n1 2 2 3 1 1 2 \n"
        }
    ],
    "note": null,
    "contestId": 1615,
    "index": "G",
    "name": "Maximum Adjacent Pairs",
    "type": "PROGRAMMING",
    "tags": [
        "constructive algorithms",
        "graph matchings"
    ],
    "solvedCount": 148
}