{
    "title": "A. AquaMoon and Two Arrays",
    "timeLimit": {
        "value": 1.0,
        "unit": "second"
    },
    "memoryLimit": {
        "value": 256.0,
        "unit": "megabytes"
    },
    "statement": "<p>AquaMoon and Cirno are playing an interesting game with arrays. Cirno has prepared two arrays $$$a$$$ and $$$b$$$, both consist of $$$n$$$ non-negative integers. AquaMoon can perform the following operation an arbitrary number of times (possibly zero):</p><ul> <li> She chooses two indices $$$i$$$ and $$$j$$$ ($$$1 \\le i, j \\le n$$$), then decreases the $$$i$$$-th element of array $$$a$$$ by $$$1$$$, and increases the $$$j$$$-th element of array $$$a$$$ by $$$1$$$. The resulting values at $$$i$$$-th and $$$j$$$-th index of array $$$a$$$ are $$$a_i - 1$$$ and $$$a_j + 1$$$, respectively. Each element of array $$$a$$$ <span class=\"tex-font-style-bf\">must be non-negative after each operation</span>. If $$$i = j$$$ this operation doesn't change the array $$$a$$$. </li></ul><p>AquaMoon wants to make some operations to make arrays $$$a$$$ and $$$b$$$ equal. Two arrays $$$a$$$ and $$$b$$$ are considered equal if and only if $$$a_i = b_i$$$ for all $$$1 \\leq i \\leq n$$$.</p><p>Help AquaMoon to find a sequence of operations that will solve her problem or find, that it is impossible to make arrays $$$a$$$ and $$$b$$$ equal.</p><p>Please note, that you <span class=\"tex-font-style-bf\">don't have to minimize</span> the number of operations.</p>",
    "inputSpecification": "<p>The input consists of multiple test cases. The first line contains a single integer $$$t$$$ ($$$1 \\leq t \\leq 100$$$) \u2014 the number of test cases.</p><p>The first line of each test case contains a single integer $$$n$$$ ($$$1 \\leq n \\leq 100$$$).</p><p>The second line of each test case contains $$$n$$$ integers $$$a_1, a_2, \\dots, a_n$$$ ($$$0 \\leq a_i \\leq 100$$$). <span class=\"tex-font-style-bf\">The sum of all $$$a_i$$$ does not exceed $$$100$$$.</span></p><p>The third line of each test case contains $$$n$$$ integers $$$b_1, b_2, \\dots, b_n$$$ ($$$0 \\leq b_i \\leq 100$$$). <span class=\"tex-font-style-bf\">The sum of all $$$b_i$$$ does not exceed $$$100$$$.</span></p>",
    "outputSpecification": "<p>For each test case print \"<span class=\"tex-font-style-tt\">-1</span>\" on the only line if it is impossible to make two arrays equal with some sequence of operations.</p><p>Otherwise, print an integer $$$m$$$ ($$$0 \\leq m \\leq 100$$$) in the first line \u2014 the number of operations. Then print $$$m$$$ lines, each line consists of two integers $$$i$$$ and $$$j$$$ \u2014 the indices you choose for the operation.</p><p>It can be proven that if it is possible to make two arrays equal with some sequence of operations, there exists a sequence with $$$m \\leq 100$$$.</p><p>If there are multiple possible solutions, you can print any.</p>",
    "samples": [
        {
            "input": "\n4\n4\n1 2 3 4\n3 1 2 4\n2\n1 3\n2 1\n1\n0\n0\n5\n4 3 2 1 0\n0 1 2 3 4\n",
            "output": "\n2\n2 1\n3 1\n-1\n0\n6\n1 4\n1 4\n1 5\n1 5\n2 5\n2 5\n"
        }
    ],
    "note": "<p>In the first example, we do the following operations:</p><ul> <li> $$$i = 2$$$, $$$j = 1$$$: $$$[1, 2, 3, 4] \\rightarrow [2, 1, 3, 4]$$$; </li><li> $$$i = 3$$$, $$$j = 1$$$: $$$[2, 1, 3, 4] \\rightarrow [3, 1, 2, 4]$$$; </li></ul><p>In the second example, it's impossible to make two arrays equal.</p>",
    "contestId": 1546,
    "index": "A",
    "name": "AquaMoon and Two Arrays",
    "type": "PROGRAMMING",
    "tags": [
        "brute force",
        "greedy"
    ],
    "solvedCount": 18117
}