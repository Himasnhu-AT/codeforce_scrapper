{
    "title": "C. Constructing Tests",
    "timeLimit": {
        "value": 1.0,
        "unit": "second"
    },
    "memoryLimit": {
        "value": 256.0,
        "unit": "megabytes"
    },
    "statement": "<p>Let's denote a <span class=\"tex-span\"><i>m</i></span>-free matrix as a binary (that is, consisting of only <span class=\"tex-span\">1</span>'s and <span class=\"tex-span\">0</span>'s) matrix such that every square submatrix of size <span class=\"tex-span\"><i>m</i>\u2009\u00d7\u2009<i>m</i></span> of this matrix contains at least one zero. </p><p>Consider the following problem:</p><p><span class=\"tex-font-style-it\">You are given two integers <span class=\"tex-span\"><i>n</i></span> and <span class=\"tex-span\"><i>m</i></span>. You have to construct an <span class=\"tex-span\"><i>m</i></span>-free square matrix of size <span class=\"tex-span\"><i>n</i>\u2009\u00d7\u2009<i>n</i></span> such that <span class=\"tex-font-style-bf\">the number of <span class=\"tex-span\">1</span>'s in this matrix is maximum possible</span>. Print the maximum possible number of <span class=\"tex-span\">1</span>'s in such matrix.</span></p><p>You don't have to solve this problem. Instead, you have to construct a few tests for it.</p><p>You will be given <span class=\"tex-span\"><i>t</i></span> numbers <span class=\"tex-span\"><i>x</i><sub class=\"lower-index\">1</sub></span>, <span class=\"tex-span\"><i>x</i><sub class=\"lower-index\">2</sub></span>, ..., <span class=\"tex-span\"><i>x</i><sub class=\"lower-index\"><i>t</i></sub></span>. For every <img align=\"middle\" class=\"tex-formula\" src=\"https://espresso.codeforces.com/e34b50eea5851940a1361e23bd01aca86b7ce79a.png\" style=\"max-width: 100.0%;max-height: 100.0%;\"/>, find two integers <span class=\"tex-span\"><i>n</i><sub class=\"lower-index\"><i>i</i></sub></span> and <span class=\"tex-span\"><i>m</i><sub class=\"lower-index\"><i>i</i></sub></span> (<span class=\"tex-span\"><i>n</i><sub class=\"lower-index\"><i>i</i></sub>\u2009\u2265\u2009<i>m</i><sub class=\"lower-index\"><i>i</i></sub></span>) such that the answer for the aforementioned problem is exactly <span class=\"tex-span\"><i>x</i><sub class=\"lower-index\"><i>i</i></sub></span> if we set <span class=\"tex-span\"><i>n</i>\u2009=\u2009<i>n</i><sub class=\"lower-index\"><i>i</i></sub></span> and <span class=\"tex-span\"><i>m</i>\u2009=\u2009<i>m</i><sub class=\"lower-index\"><i>i</i></sub></span>.</p>",
    "inputSpecification": "<p>The first line contains one integer <span class=\"tex-span\"><i>t</i></span> (<span class=\"tex-span\">1\u2009\u2264\u2009<i>t</i>\u2009\u2264\u2009100</span>) \u2014 the number of tests you have to construct.</p><p>Then <span class=\"tex-span\"><i>t</i></span> lines follow, <span class=\"tex-span\"><i>i</i></span>-th line containing one integer <span class=\"tex-span\"><i>x</i><sub class=\"lower-index\"><i>i</i></sub></span> (<span class=\"tex-span\">0\u2009\u2264\u2009<i>x</i><sub class=\"lower-index\"><i>i</i></sub>\u2009\u2264\u200910<sup class=\"upper-index\">9</sup></span>).</p><p><span class=\"tex-font-style-bf\">Note that in hacks you have to set <span class=\"tex-span\"><i>t</i>\u2009=\u20091</span></span>.</p>",
    "outputSpecification": "<p>For each test you have to construct, output two positive numbers <span class=\"tex-span\"><i>n</i><sub class=\"lower-index\"><i>i</i></sub></span> and <span class=\"tex-span\"><i>m</i><sub class=\"lower-index\"><i>i</i></sub></span> (<span class=\"tex-span\">1\u2009\u2264\u2009<i>m</i><sub class=\"lower-index\"><i>i</i></sub>\u2009\u2264\u2009<i>n</i><sub class=\"lower-index\"><i>i</i></sub>\u2009\u2264\u200910<sup class=\"upper-index\">9</sup></span>) such that the maximum number of <span class=\"tex-span\">1</span>'s in a <span class=\"tex-span\"><i>m</i><sub class=\"lower-index\"><i>i</i></sub></span>-free <span class=\"tex-span\"><i>n</i><sub class=\"lower-index\"><i>i</i></sub>\u2009\u00d7\u2009<i>n</i><sub class=\"lower-index\"><i>i</i></sub></span> matrix is exactly <span class=\"tex-span\"><i>x</i><sub class=\"lower-index\"><i>i</i></sub></span>. If there are multiple solutions, you may output any of them; and if this is impossible to construct a test, output a single integer <span class=\"tex-span\">\u2009-\u20091</span>. </p>",
    "samples": [
        {
            "input": "3<br/>21<br/>0<br/>1<br/>",
            "output": "5 2<br/>1 1<br/>-1<br/>"
        }
    ],
    "note": null,
    "contestId": 938,
    "index": "C",
    "name": "Constructing Tests",
    "type": "PROGRAMMING",
    "tags": [
        "binary search",
        "brute force",
        "constructive algorithms"
    ],
    "solvedCount": 3284
}