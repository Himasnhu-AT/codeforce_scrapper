{
    "title": "B. Maximum Product",
    "timeLimit": {
        "value": 2.0,
        "unit": "seconds"
    },
    "memoryLimit": {
        "value": 512.0,
        "unit": "megabytes"
    },
    "statement": "<p>You are given an array of integers $$$a_1,a_2,\\ldots,a_n$$$. Find the maximum possible value of $$$a_ia_ja_ka_la_t$$$ among all five indices $$$(i, j, k, l, t)$$$ ($$$i&lt;j&lt;k&lt;l&lt;t$$$).</p>",
    "inputSpecification": "<p>The input consists of multiple test cases. The first line contains an integer $$$t$$$ ($$$1\\le t\\le 2 \\cdot 10^4$$$) \u2014 the number of test cases. The description of the test cases follows.</p><p>The first line of each test case contains a single integer $$$n$$$ ($$$5\\le n\\le 10^5$$$) \u2014 the size of the array.</p><p>The second line of each test case contains $$$n$$$ integers $$$a_1,a_2,\\ldots,a_n$$$ ($$$-3\\times 10^3\\le a_i\\le 3\\times 10^3$$$) \u2014 given array.</p><p>It's guaranteed that the sum of $$$n$$$ over all test cases does not exceed $$$2\\cdot 10^5$$$.</p>",
    "outputSpecification": "<p>For each test case, print one integer \u2014 the answer to the problem.</p>",
    "samples": [
        {
            "input": "\n4\n5\n-1 -2 -3 -4 -5\n6\n-1 -2 -3 1 2 -1\n6\n-1 0 0 0 -1 -1\n6\n-9 -7 -5 -3 -2 1\n",
            "output": "\n-120\n12\n0\n945\n"
        }
    ],
    "note": "<p>In the first test case, choosing $$$a_1,a_2,a_3,a_4,a_5$$$ is a best choice: $$$(-1)\\cdot (-2) \\cdot (-3)\\cdot (-4)\\cdot (-5)=-120$$$.</p><p>In the second test case, choosing $$$a_1,a_2,a_3,a_5,a_6$$$ is a best choice: $$$(-1)\\cdot (-2) \\cdot (-3)\\cdot 2\\cdot (-1)=12$$$.</p><p>In the third test case, choosing $$$a_1,a_2,a_3,a_4,a_5$$$ is a best choice: $$$(-1)\\cdot 0\\cdot 0\\cdot 0\\cdot (-1)=0$$$.</p><p>In the fourth test case, choosing $$$a_1,a_2,a_3,a_4,a_6$$$ is a best choice: $$$(-9)\\cdot (-7) \\cdot (-5)\\cdot (-3)\\cdot 1=945$$$.</p>",
    "contestId": 1406,
    "index": "B",
    "name": "Maximum Product",
    "type": "PROGRAMMING",
    "tags": [
        "brute force",
        "dp",
        "greedy",
        "implementation",
        "sortings"
    ],
    "solvedCount": 22150
}