{
    "title": "C. Sequence Transformation",
    "timeLimit": {
        "value": 1.0,
        "unit": "second"
    },
    "memoryLimit": {
        "value": 256.0,
        "unit": "megabytes"
    },
    "statement": "<p>You are given a sequence $$$a$$$, initially consisting of $$$n$$$ integers.</p><p>You want to transform this sequence so that all elements in it <span class=\"tex-font-style-it\">are equal</span> (i.\u00a0e. it contains several occurrences of the same element).</p><p>To achieve this, you choose some integer $$$x$$$ <span class=\"tex-font-style-bf\">that occurs at least once in $$$a$$$</span>, and then perform the following operation any number of times (possibly zero): choose some segment $$$[l, r]$$$ of the sequence and remove it. But there is one exception: <span class=\"tex-font-style-bf\">you are not allowed to choose a segment that contains $$$x$$$</span>. More formally, you choose some contiguous subsequence $$$[a_l, a_{l + 1}, \\dots, a_r]$$$ such that $$$a_i \\ne x$$$ if $$$l \\le i \\le r$$$, and remove it. After removal, the numbering of elements to the right of the removed segment changes: the element that was the $$$(r+1)$$$-th is now $$$l$$$-th, the element that was $$$(r+2)$$$-th is now $$$(l+1)$$$-th, and so on (i.\u00a0e. the remaining sequence just collapses).</p><p>Note that you <span class=\"tex-font-style-bf\">can not change</span> $$$x$$$ after you chose it.</p><p>For example, suppose $$$n = 6$$$, $$$a = [1, 3, 2, 4, 1, 2]$$$. Then one of the ways to transform it in two operations is to choose $$$x = 1$$$, then:</p><ol> <li> choose $$$l = 2$$$, $$$r = 4$$$, so the resulting sequence is $$$a = [1, 1, 2]$$$; </li><li> choose $$$l = 3$$$, $$$r = 3$$$, so the resulting sequence is $$$a = [1, 1]$$$. </li></ol><p>Note that choosing $$$x$$$ is not an operation. Also, note that you <span class=\"tex-font-style-bf\">can not</span> remove any occurrence of $$$x$$$.</p><p>Your task is to find the <span class=\"tex-font-style-bf\">minimum</span> number of operations required to transform the sequence in a way described above.</p><p>You have to answer $$$t$$$ independent test cases.</p>",
    "inputSpecification": "<p>The first line of the input contains one integer $$$t$$$ ($$$1 \\le t \\le 2 \\cdot 10^4$$$) \u2014 the number of test cases. Then $$$t$$$ test cases follow.</p><p>The first line of the test case contains one integer $$$n$$$ ($$$1 \\le n \\le 2 \\cdot 10^5$$$) \u2014 the number of elements in $$$a$$$. The second line of the test case contains $$$n$$$ integers $$$a_1, a_2, \\ldots, a_n$$$ ($$$1 \\le a_i \\le n$$$), where $$$a_i$$$ is the $$$i$$$-th element of $$$a$$$.</p><p>It is guaranteed that the sum of $$$n$$$ does not exceed $$$2 \\cdot 10^5$$$ ($$$\\sum n \\le 2 \\cdot 10^5$$$).</p>",
    "outputSpecification": "<p>For each test case, print the answer \u2014 the <span class=\"tex-font-style-bf\">minimum</span> number of operations required to transform the given sequence in a way described in the problem statement. It can be proven that it is always possible to perform a finite sequence of operations so the sequence is transformed in the required way.</p>",
    "samples": [
        {
            "input": "\n5\n3\n1 1 1\n5\n1 2 3 4 5\n5\n1 2 3 2 1\n7\n1 2 3 1 2 3 1\n11\n2 2 1 2 3 2 1 2 3 1 2\n",
            "output": "\n0\n1\n1\n2\n3\n"
        }
    ],
    "note": null,
    "contestId": 1454,
    "index": "C",
    "name": "Sequence Transformation",
    "type": "PROGRAMMING",
    "tags": [
        "greedy",
        "implementation"
    ],
    "solvedCount": 21070
}