{
    "title": "F. Build a Tree and That Is It",
    "timeLimit": {
        "value": 2.0,
        "unit": "seconds"
    },
    "memoryLimit": {
        "value": 256.0,
        "unit": "megabytes"
    },
    "statement": "<p>A tree is a connected undirected graph without cycles. Note that in this problem, we are talking about not rooted trees.</p><p>You are given four positive integers $$$n, d_{12}, d_{23}$$$ and $$$d_{31}$$$. Construct a tree such that:</p><ul> <li> it contains $$$n$$$ vertices numbered from $$$1$$$ to $$$n$$$, </li><li> the distance (length of the shortest path) from vertex $$$1$$$ to vertex $$$2$$$ is $$$d_{12}$$$, </li><li> distance from vertex $$$2$$$ to vertex $$$3$$$ is $$$d_{23}$$$, </li><li> the distance from vertex $$$3$$$ to vertex $$$1$$$ is $$$d_{31}$$$. </li></ul><p>Output any tree that satisfies all the requirements above, or determine that no such tree exists.</p>",
    "inputSpecification": "<p>The first line of the input contains an integer $$$t$$$ ($$$1 \\le t \\le 10^4$$$)\u00a0\u2014the number of test cases in the test.</p><p>This is followed by $$$t$$$ test cases, each written on a separate line.</p><p>Each test case consists of four positive integers $$$n, d_{12}, d_{23}$$$ and $$$d_{31}$$$ ($$$3 \\le n \\le 2\\cdot10^5; 1 \\le d_{12}, d_{23}, d_{31} \\le n-1$$$).</p><p>It is guaranteed that the sum of $$$n$$$ values for all test cases does not exceed $$$2\\cdot10^5$$$.</p>",
    "outputSpecification": "<p>For each test case, print <span class=\"tex-font-style-tt\">YES</span> if the suitable tree exists, and <span class=\"tex-font-style-tt\">NO</span> otherwise. </p><p>If the answer is positive, print another $$$n-1$$$ line each containing a description of an edge of the tree \u2014 a pair of positive integers $$$x_i, y_i$$$, which means that the $$$i$$$th edge connects vertices $$$x_i$$$ and $$$y_i$$$. </p><p>The edges and vertices of the edges can be printed in any order. If there are several suitable trees, output any of them.</p>",
    "samples": [
        {
            "input": "\n<div class=\"test-example-line test-example-line-even test-example-line-0\">9</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">5 1 2 1</div><div class=\"test-example-line test-example-line-even test-example-line-2\">5 2 2 2</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">5 2 2 3</div><div class=\"test-example-line test-example-line-even test-example-line-4\">5 2 2 4</div><div class=\"test-example-line test-example-line-odd test-example-line-5\">5 3 2 3</div><div class=\"test-example-line test-example-line-even test-example-line-6\">4 2 1 1</div><div class=\"test-example-line test-example-line-odd test-example-line-7\">4 3 1 1</div><div class=\"test-example-line test-example-line-even test-example-line-8\">4 1 2 3</div><div class=\"test-example-line test-example-line-odd test-example-line-9\">7 1 4 1</div>",
            "output": "\nYES\n1 2\n4 1\n3 1\n2 5\nYES\n4 3\n2 5\n1 5\n5 3\nNO\nYES\n2 4\n4 1\n2 5\n5 3\nYES\n5 4\n4 1\n2 5\n3 5\nYES\n2 3\n3 4\n1 3\nNO\nYES\n4 3\n1 2\n2 4\nNO\n"
        }
    ],
    "note": null,
    "contestId": 1714,
    "index": "F",
    "name": "Build a Tree and That Is It",
    "type": "PROGRAMMING",
    "tags": [
        "constructive algorithms",
        "implementation",
        "trees"
    ],
    "solvedCount": 3108
}