{
    "title": "D. Empty Graph",
    "timeLimit": {
        "value": 1.5,
        "unit": "seconds"
    },
    "memoryLimit": {
        "value": 256.0,
        "unit": "megabytes"
    },
    "statement": "<div class=\"epigraph\"><div class=\"epigraph-text\"><span class=\"tex-font-style-it\">\u00a0\u2014 Do you have a wish?</span></div></div> <div class=\"epigraph\"><div class=\"epigraph-text\"><span class=\"tex-font-style-it\">\u00a0\u2014 I want people to stop gifting each other arrays.</span></div><div class=\"epigraph-source\">O_o and Another Young Boy</div></div><p>An array of $$$n$$$ <span class=\"tex-font-style-bf\">positive</span> integers $$$a_1,a_2,\\ldots,a_n$$$ fell down on you from the skies, along with a positive integer $$$k \\le n$$$.</p><p>You can apply the following operation at most $$$k$$$ times: </p><ul> <li> Choose an index $$$1 \\le i \\le n$$$ and an integer $$$1 \\le x \\le 10^9$$$. Then do $$$a_i := x$$$ (assign $$$x$$$ to $$$a_i$$$). </li></ul><p>Then build a <a href=\"https://en.wikipedia.org/wiki/Complete_graph\">complete</a> undirected <span class=\"tex-font-style-bf\">weighted</span> graph with $$$n$$$ vertices numbered with integers from $$$1$$$ to $$$n$$$, where edge $$$(l, r)$$$ ($$$1 \\le l &lt; r \\le n$$$) has weight $$$\\min(a_{l},a_{l+1},\\ldots,a_{r})$$$.</p><p>You have to find the maximum possible <span class=\"tex-font-style-it\">diameter</span> of the resulting graph after performing at most $$$k$$$ operations.</p><p>The <span class=\"tex-font-style-it\">diameter</span> of a graph is equal to $$$\\max\\limits_{1 \\le u &lt; v \\le n}{\\operatorname{d}(u, v)}$$$, where $$$\\operatorname{d}(u, v)$$$ is the length of the shortest path between vertex $$$u$$$ and vertex $$$v$$$.</p>",
    "inputSpecification": "<p>Each test contains multiple test cases. The first line contains the number of test cases $$$t$$$ ($$$1 \\le t \\le 10^4$$$). Description of the test cases follows.</p><p>The first line of each test case contains two integers $$$n$$$ and $$$k$$$ ($$$2 \\le n \\le 10^5$$$, $$$1 \\le k \\le n$$$).</p><p>The second line of each test case contains $$$n$$$ <span class=\"tex-font-style-bf\">positive</span> integers $$$a_1,a_2,\\ldots,a_n$$$ ($$$1 \\le a_i \\le 10^9$$$).</p><p>It is guaranteed that the sum of $$$n$$$ over all test cases does not exceed $$$10^5$$$.</p>",
    "outputSpecification": "<p>For each test case print one integer\u00a0\u2014 the maximum possible diameter of the graph after performing at most $$$k$$$ operations.</p>",
    "samples": [
        {
            "input": "\n<div class=\"test-example-line test-example-line-even test-example-line-0\">6</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">3 1</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">2 4 1</div><div class=\"test-example-line test-example-line-even test-example-line-2\">3 2</div><div class=\"test-example-line test-example-line-even test-example-line-2\">1 9 84</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">3 1</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">10 2 6</div><div class=\"test-example-line test-example-line-even test-example-line-4\">3 2</div><div class=\"test-example-line test-example-line-even test-example-line-4\">179 17 1000000000</div><div class=\"test-example-line test-example-line-odd test-example-line-5\">2 1</div><div class=\"test-example-line test-example-line-odd test-example-line-5\">5 9</div><div class=\"test-example-line test-example-line-even test-example-line-6\">2 2</div><div class=\"test-example-line test-example-line-even test-example-line-6\">4 2</div>",
            "output": "\n4\n168\n10\n1000000000\n9\n1000000000\n"
        }
    ],
    "note": "<p>In the first test case, one of the optimal arrays is $$$[2,4,5]$$$.</p><p>The graph built on this array: </p><center> <img class=\"tex-graphics\" src=\"https://espresso.codeforces.com/6d2b47e301fce5a348018b4ad55654aef3ce6a90.png\" style=\"max-width: 100.0%;max-height: 100.0%;\"/> </center><p>$$$\\operatorname{d}(1, 2) = \\operatorname{d}(1, 3) = 2$$$ and $$$\\operatorname{d}(2, 3) = 4$$$, so the <span class=\"tex-font-style-it\">diameter</span> is equal to $$$\\max(2,2,4) = 4$$$.</p>",
    "contestId": 1712,
    "index": "D",
    "name": "Empty Graph",
    "type": "PROGRAMMING",
    "tags": [
        "binary search",
        "constructive algorithms",
        "data structures",
        "greedy",
        "shortest paths"
    ],
    "solvedCount": 4311
}