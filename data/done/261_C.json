{
    "title": "C. Maxim and Matrix",
    "timeLimit": {
        "value": 2.0,
        "unit": "seconds"
    },
    "memoryLimit": {
        "value": 256.0,
        "unit": "megabytes"
    },
    "statement": "<p>Maxim loves to fill in a matrix in a special manner. Here is a pseudocode of filling in a matrix of size <span class=\"tex-span\">(<i>m</i>\u2009+\u20091)\u2009\u00d7\u2009(<i>m</i>\u2009+\u20091)</span>:</p><p><img class=\"tex-graphics\" src=\"https://espresso.codeforces.com/d53e75cbc4d1cc0d99ce701f0f5f57692d8e2d0f.png\" style=\"max-width: 100.0%;max-height: 100.0%;\"/></p><p>Maxim asks you to count, how many numbers <span class=\"tex-span\"><i>m</i></span> <span class=\"tex-span\">(1\u2009\u2264\u2009<i>m</i>\u2009\u2264\u2009<i>n</i>)</span> are there, such that the sum of values in the cells in the row number <span class=\"tex-span\"><i>m</i>\u2009+\u20091</span> of the resulting matrix equals <span class=\"tex-span\"><i>t</i></span>.</p><p>Expression (<span class=\"tex-span\"><i>x</i></span> <span class=\"tex-span\"><i>xor</i></span> <span class=\"tex-span\"><i>y</i></span>) means applying the operation of bitwise excluding \"OR\" to numbers <span class=\"tex-span\"><i>x</i></span> and <span class=\"tex-span\"><i>y</i></span>. The given operation exists in all modern programming languages. For example, in languages <span class=\"tex-font-style-it\">C++</span> and <span class=\"tex-font-style-it\">Java</span> it is represented by character \"<span class=\"tex-font-style-tt\">^</span>\", in <span class=\"tex-font-style-it\">Pascal</span> \u2014 by \"<span class=\"tex-font-style-tt\">xor</span>\".</p>",
    "inputSpecification": "<p>A single line contains two integers <span class=\"tex-span\"><i>n</i></span> and <span class=\"tex-span\"><i>t</i></span> <span class=\"tex-span\">(1\u2009\u2264\u2009<i>n</i>,\u2009<i>t</i>\u2009\u2264\u200910<sup class=\"upper-index\">12</sup>,\u2009<i>t</i>\u2009\u2264\u2009<i>n</i>\u2009+\u20091)</span>.</p><p>Please, do not use the <span class=\"tex-font-style-tt\">%lld</span> specifier to read or write 64-bit integers in <span class=\"tex-font-style-it\">C++</span>. It is preferred to use the <span class=\"tex-font-style-tt\">cin</span>, <span class=\"tex-font-style-tt\">cout</span> streams or the <span class=\"tex-font-style-tt\">%I64d</span> specifier.</p>",
    "outputSpecification": "<p>In a single line print a single integer \u2014 the answer to the problem. </p>",
    "samples": [
        {
            "input": "1 1<br/>",
            "output": "1<br/>"
        },
        {
            "input": "3 2<br/>",
            "output": "1<br/>"
        },
        {
            "input": "3 3<br/>",
            "output": "0<br/>"
        },
        {
            "input": "1000000000000 1048576<br/>",
            "output": "118606527258<br/>"
        }
    ],
    "note": null,
    "contestId": 261,
    "index": "C",
    "name": "Maxim and Matrix",
    "type": "PROGRAMMING",
    "tags": [
        "constructive algorithms",
        "dp",
        "math"
    ],
    "solvedCount": 761
}