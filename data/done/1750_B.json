{
    "title": "B. Maximum Substring",
    "timeLimit": {
        "value": 1.0,
        "unit": "second"
    },
    "memoryLimit": {
        "value": 256.0,
        "unit": "megabytes"
    },
    "statement": "<p>A binary string is a string consisting only of the characters <span class=\"tex-font-style-tt\">0</span> and <span class=\"tex-font-style-tt\">1</span>. You are given a binary string $$$s$$$.</p><p>For some non-empty substring$$$^\\dagger$$$ $$$t$$$ of string $$$s$$$ containing $$$x$$$ characters <span class=\"tex-font-style-tt\">0</span> and $$$y$$$ characters <span class=\"tex-font-style-tt\">1</span>, define its <span class=\"tex-font-style-it\">cost</span> as:</p><ul> <li> $$$x \\cdot y$$$, if $$$x &gt; 0$$$ and $$$y &gt; 0$$$; </li><li> $$$x^2$$$, if $$$x &gt; 0$$$ and $$$y = 0$$$; </li><li> $$$y^2$$$, if $$$x = 0$$$ and $$$y &gt; 0$$$. </li></ul><p>Given a binary string $$$s$$$ of length $$$n$$$, find the maximum cost across all its non-empty substrings.</p><p>$$$^\\dagger$$$ A string $$$a$$$ is a substring of a string $$$b$$$ if $$$a$$$ can be obtained from $$$b$$$ by deletion of several (possibly, zero or all) characters from the beginning and several (possibly, zero or all) characters from the end.</p>",
    "inputSpecification": "<p>Each test consists of multiple test cases. The first line contains a single integer $$$t$$$ ($$$1 \\leq t \\leq 10^5$$$) \u2014 the number of test cases. The description of test cases follows.</p><p>The first line of each test case contains a single integer $$$n$$$ ($$$1 \\le n \\le 2 \\cdot 10^5$$$) \u2014 the length of the string $$$s$$$.</p><p>The second line of each test case contains a binary string $$$s$$$ of length $$$n$$$.</p><p>It is guaranteed that the sum of $$$n$$$ over all test cases does not exceed $$$2 \\cdot 10^5$$$.</p>",
    "outputSpecification": "<p>For each test case, print a single integer \u2014 the maximum cost across all substrings.</p>",
    "samples": [
        {
            "input": "\n<div class=\"test-example-line test-example-line-even test-example-line-0\">6</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">5</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">11100</div><div class=\"test-example-line test-example-line-even test-example-line-2\">7</div><div class=\"test-example-line test-example-line-even test-example-line-2\">1100110</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">6</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">011110</div><div class=\"test-example-line test-example-line-even test-example-line-4\">7</div><div class=\"test-example-line test-example-line-even test-example-line-4\">1001010</div><div class=\"test-example-line test-example-line-odd test-example-line-5\">4</div><div class=\"test-example-line test-example-line-odd test-example-line-5\">1000</div><div class=\"test-example-line test-example-line-even test-example-line-6\">1</div><div class=\"test-example-line test-example-line-even test-example-line-6\">0</div>",
            "output": "\n9\n12\n16\n12\n9\n1\n"
        }
    ],
    "note": "<p>In the first test case, we can take a substring $$$111$$$. It contains $$$3$$$ characters <span class=\"tex-font-style-tt\">1</span> and $$$0$$$ characters <span class=\"tex-font-style-tt\">0</span>. So $$$a = 3$$$, $$$b = 0$$$ and its cost is $$$3^2 = 9$$$.</p><p>In the second test case, we can take the whole string. It contains $$$4$$$ characters <span class=\"tex-font-style-tt\">1</span> and $$$3$$$ characters <span class=\"tex-font-style-tt\">0</span>. So $$$a = 4$$$, $$$b = 3$$$ and its cost is $$$4 \\cdot 3 = 12$$$.</p><p>In the third test case, we can can take a substring $$$1111$$$ and its cost is $$$4^2 = 16$$$.</p><p>In the fourth test case, we can take the whole string and cost is $$$4 \\cdot 3 = 12$$$.</p><p>In the fifth test case, we can take a substring $$$000$$$ and its cost is $$$3 \\cdot 3 = 9$$$.</p><p>In the sixth test case, we can only take the substring $$$0$$$ and its cost is $$$1 \\cdot 1 = 1$$$.</p>",
    "contestId": 1750,
    "index": "B",
    "name": "Maximum Substring",
    "type": "PROGRAMMING",
    "tags": [
        "brute force",
        "greedy",
        "implementation"
    ],
    "solvedCount": 16046
}