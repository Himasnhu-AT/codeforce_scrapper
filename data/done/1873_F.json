{
    "title": "F. Money Trees",
    "timeLimit": {
        "value": 2.0,
        "unit": "seconds"
    },
    "memoryLimit": {
        "value": 256.0,
        "unit": "megabytes"
    },
    "statement": "<p>Luca is in front of a row of $$$n$$$ trees. The $$$i$$$-th tree has $$$a_i$$$ fruit and height $$$h_i$$$.</p><p>He wants to choose a contiguous subarray of the array $$$[h_l, h_{l+1}, \\dots, h_r]$$$ such that for each $$$i$$$ ($$$l \\leq i &lt; r$$$), <span class=\"tex-font-style-bf\">$$$h_i$$$ is divisible$$$^{\\dagger}$$$ by $$$h_{i+1}$$$</span>. He will collect all the fruit from each of the trees in the subarray (that is, he will collect $$$a_l + a_{l+1} + \\dots + a_r$$$ fruits). However, if he collects more than $$$k$$$ fruits in total, he will get caught. </p><p>What is the maximum length of a subarray Luca can choose so he doesn't get caught?</p><p>$$$^{\\dagger}$$$ $$$x$$$ is <span class=\"tex-font-style-it\">divisible</span> by $$$y$$$ if the ratio $$$\\frac{x}{y}$$$ is an integer.</p>",
    "inputSpecification": "<p>The first line contains a single integer $$$t$$$ ($$$1 \\leq t \\leq 1000$$$)\u00a0\u2014 the number of test cases.</p><p>The first of each test case line contains two space-separated integers $$$n$$$ and $$$k$$$ ($$$1 \\leq n \\leq 2 \\cdot 10^5$$$; $$$1 \\leq k \\leq 10^9$$$)\u00a0\u2014 the number of trees and the maximum amount of fruits Luca can collect without getting caught.</p><p>The second line of each test case contains $$$n$$$ space-separated integers $$$a_i$$$ ($$$1 \\leq a_i \\leq 10^4$$$)\u00a0\u2014 the number of fruits in the $$$i$$$-th tree.</p><p>The third line of each test case contains $$$n$$$ space-separated integers $$$h_i$$$ ($$$1 \\leq h_i \\leq 10^9$$$)\u00a0\u2014 the height of the $$$i$$$-th tree.</p><p>The sum of $$$n$$$ over all test cases does not exceed $$$2 \\cdot 10^5$$$. </p>",
    "outputSpecification": "<p>For each test case output a single integer, the length of the maximum length contiguous subarray satisfying the conditions, or $$$0$$$ if there is no such subarray.</p>",
    "samples": [
        {
            "input": "\n<div class=\"test-example-line test-example-line-even test-example-line-0\">5</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">5 12</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">3 2 4 1 8</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">4 4 2 4 1</div><div class=\"test-example-line test-example-line-even test-example-line-2\">4 8</div><div class=\"test-example-line test-example-line-even test-example-line-2\">5 4 1 2</div><div class=\"test-example-line test-example-line-even test-example-line-2\">6 2 3 1</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">3 12</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">7 9 10</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">2 2 4</div><div class=\"test-example-line test-example-line-even test-example-line-4\">1 10</div><div class=\"test-example-line test-example-line-even test-example-line-4\">11</div><div class=\"test-example-line test-example-line-even test-example-line-4\">1</div><div class=\"test-example-line test-example-line-odd test-example-line-5\">7 10</div><div class=\"test-example-line test-example-line-odd test-example-line-5\">2 6 3 1 5 10 6</div><div class=\"test-example-line test-example-line-odd test-example-line-5\">72 24 24 12 4 4 2</div>",
            "output": "\n3\n2\n1\n0\n3\n"
        }
    ],
    "note": "<p>In the first test case, Luca can select the subarray with $$$l=1$$$ and $$$r=3$$$.</p><p>In the second test case, Luca can select the subarray with $$$l=3$$$ and $$$r=4$$$.</p><p>In the third test case, Luca can select the subarray with $$$l=2$$$ and $$$r=2$$$.</p>",
    "contestId": 1873,
    "index": "F",
    "name": "Money Trees",
    "type": "PROGRAMMING",
    "tags": [
        "binary search",
        "greedy",
        "math",
        "two pointers"
    ],
    "solvedCount": 14367
}