{
    "title": "L. Longest Array Deconstruction",
    "timeLimit": {
        "value": 2.0,
        "unit": "seconds"
    },
    "memoryLimit": {
        "value": 512.0,
        "unit": "megabytes"
    },
    "statement": "<p>Mr. Chanek gives you a sequence $$$a$$$ indexed from $$$1$$$ to $$$n$$$. Define $$$f(a)$$$ as the number of indices where $$$a_i = i$$$. </p><p>You can pick an element from the current sequence and remove it, then concatenate the remaining elements together. For example, if you remove the $$$3$$$-rd element from the sequence $$$[4, 2, 3, 1]$$$, the resulting sequence will be $$$[4, 2, 1]$$$. </p><p>You want to remove some elements from $$$a$$$ in order to maximize $$$f(a)$$$, using zero or more operations. Find the largest possible $$$f(a)$$$.</p>",
    "inputSpecification": "<p>The first line contains one integer $$$n$$$ ($$$1 \\leq n \\leq 2 \\cdot 10^5$$$) \u2014 the initial length of the sequence.</p><p>The second line contains $$$n$$$ integers $$$a_1, a_2, \\ldots, a_n$$$ ($$$1 \\leq a_i \\leq 2 \\cdot 10^5$$$) \u2014 the initial sequence $$$a$$$.</p>",
    "outputSpecification": "<p>Output an integer denoting the largest $$$f(a)$$$ that can be obtained by doing zero or more operations.</p>",
    "samples": [
        {
            "input": "\n7\n2 1 4 2 5 3 7\n",
            "output": "\n3\n"
        },
        {
            "input": "\n4\n4 2 3 1\n",
            "output": "\n2\n"
        }
    ],
    "note": "<p>In the first example, $$$f(A) = 3$$$ by doing the following operations.</p><p>$$$[2,1,\\textbf{4},2,5,3,7] \\rightarrow [\\textbf{2},1,2,5,3,7] \\rightarrow [1,2,5,3,\\textbf{7}] \\rightarrow [1,2,\\textbf{5},3] \\rightarrow [1,2,3]$$$</p><p>In the second example, $$$f(A) = 2$$$ and no additional operation is needed.</p>",
    "contestId": 1575,
    "index": "L",
    "name": "Longest Array Deconstruction",
    "type": "PROGRAMMING",
    "tags": [
        "data structures",
        "divide and conquer",
        "dp",
        "sortings"
    ],
    "solvedCount": 1300
}