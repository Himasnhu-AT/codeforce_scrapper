{
    "title": "H. Triple",
    "timeLimit": {
        "value": 1.5,
        "unit": "seconds"
    },
    "memoryLimit": {
        "value": 256.0,
        "unit": "megabytes"
    },
    "statement": "<p>You have received your birthday gifts \u2014 $$$n$$$ triples of integers! The $$$i$$$-th of them is $$$\\lbrace a_{i}, b_{i}, c_{i} \\rbrace$$$. All numbers are greater than or equal to $$$0$$$, and strictly smaller than $$$2^{k}$$$, where $$$k$$$ is a fixed integer.</p><p>One day, you felt tired playing with triples. So you came up with three new integers $$$x$$$, $$$y$$$, $$$z$$$, and then formed $$$n$$$ arrays. The $$$i$$$-th array consists of $$$a_i$$$ repeated $$$x$$$ times, $$$b_i$$$ repeated $$$y$$$ times and $$$c_i$$$ repeated $$$z$$$ times. Thus, each array has length $$$(x + y + z)$$$.</p><p>You want to choose exactly one integer from each array such that the XOR (bitwise exclusive or) of them is equal to $$$t$$$. Output the number of ways to choose the numbers for each $$$t$$$ between $$$0$$$ and $$$2^{k} - 1$$$, inclusive, modulo $$$998244353$$$.</p>",
    "inputSpecification": "<p>The first line contains two integers $$$n$$$ and $$$k$$$ ($$$1 \\leq n \\leq 10^{5}$$$, $$$1 \\leq k \\leq 17$$$)\u00a0\u2014 the number of arrays and the binary length of all numbers.</p><p>The second line contains three integers $$$x$$$, $$$y$$$, $$$z$$$ ($$$0 \\leq x,y,z \\leq 10^{9}$$$)\u00a0\u2014 the integers you chose.</p><p>Then $$$n$$$ lines follow. The $$$i$$$-th of them contains three integers $$$a_{i}$$$, $$$b_{i}$$$ and $$$c_{i}$$$ ($$$0 \\leq a_{i} , b_{i} , c_{i} \\leq 2^{k} - 1$$$)\u00a0\u2014 the integers forming the $$$i$$$-th array.</p>",
    "outputSpecification": "<p>Print a single line containing $$$2^{k}$$$ integers. The $$$i$$$-th of them should be the number of ways to choose exactly one integer from each array so that their XOR is equal to $$$t = i-1$$$ modulo $$$998244353$$$.</p>",
    "samples": [
        {
            "input": "\n1 1\n1 2 3\n1 0 1\n",
            "output": "\n2 4 \n"
        },
        {
            "input": "\n2 2\n1 2 1\n0 1 2\n1 2 3\n",
            "output": "\n4 2 4 6 \n"
        },
        {
            "input": "\n4 3\n1 2 3\n1 3 7\n0 2 5\n1 0 6\n3 3 2\n",
            "output": "\n198 198 126 126 126 126 198 198 \n"
        }
    ],
    "note": "<p>In the first example, the array we formed is $$$(1, 0, 0, 1, 1, 1)$$$, we have two choices to get $$$0$$$ as the XOR and four choices to get $$$1$$$.</p><p>In the second example, two arrays are $$$(0, 1, 1, 2)$$$ and $$$(1, 2, 2, 3)$$$. There are sixteen $$$(4 \\cdot 4)$$$ choices in total, $$$4$$$ of them ($$$1 \\oplus 1$$$ and $$$2 \\oplus 2$$$, two options for each) give $$$0$$$, $$$2$$$ of them ($$$0 \\oplus 1$$$ and $$$2 \\oplus 3$$$) give $$$1$$$, $$$4$$$ of them ($$$0 \\oplus 2$$$ and $$$1 \\oplus 3$$$, two options for each) give $$$2$$$, and finally $$$6$$$ of them ($$$0 \\oplus 3$$$, $$$2 \\oplus 1$$$ and four options for $$$1 \\oplus 2$$$) give $$$3$$$.</p>",
    "contestId": 1119,
    "index": "H",
    "name": "Triple",
    "type": "PROGRAMMING",
    "tags": [
        "fft",
        "math"
    ],
    "solvedCount": 522
}