{
    "title": "F. Cutting Game",
    "timeLimit": {
        "value": 3.0,
        "unit": "seconds"
    },
    "memoryLimit": {
        "value": 256.0,
        "unit": "megabytes"
    },
    "statement": "<p>Alice and Bob were playing a game again. They have a grid of size $$$a \\times b$$$ ($$$1 \\le a, b \\le 10^9$$$), on which there are $$$n$$$ chips, with at most one chip in each cell. The cell at the intersection of the $$$x$$$-th row and the $$$y$$$-th column has coordinates $$$(x, y)$$$.</p><p>Alice made the first move, and the players took turns. On each move, a player could cut several (but not all) rows or columns from the beginning or end of the remaining grid and earn a point for each chip that was on the cut part of the grid. Each move can be described by the character '<span class=\"tex-font-style-tt\">U</span>', '<span class=\"tex-font-style-tt\">D</span>', '<span class=\"tex-font-style-tt\">L</span>', or '<span class=\"tex-font-style-tt\">R</span>' and an integer $$$k$$$:</p><ul> <li> If the character is '<span class=\"tex-font-style-tt\">U</span>', then the first $$$k$$$ remaining rows will be cut; </li><li> If the character is '<span class=\"tex-font-style-tt\">D</span>', then the last $$$k$$$ remaining rows will be cut; </li><li> If the character is '<span class=\"tex-font-style-tt\">L</span>', then the first $$$k$$$ remaining columns will be cut; </li><li> If the character is '<span class=\"tex-font-style-tt\">R</span>', then the last $$$k$$$ remaining columns will be cut. </li></ul><p>Based on the initial state of the grid and the players' moves, determine the number of points earned by Alice and Bob, respectively.</p>",
    "inputSpecification": "<p>The first line contains a single integer $$$t$$$ ($$$1 \\le t \\le 10^4$$$)\u00a0\u2014 the number of test cases.</p><p>The first line of each test case contains four integers $$$a$$$, $$$b$$$, $$$n$$$, and $$$m$$$ ($$$2 \\le a, b \\le 10^9$$$, $$$1 \\le n, m \\le 2 \\cdot 10^5$$$)\u00a0\u2014 the dimensions of the grid, the number of chips, and the number of moves.</p><p>Each of the next $$$n$$$ lines contain two integers $$$x_i$$$ and $$$y_i$$$ ($$$1 \\le x_i \\le a$$$, $$$1 \\le y_i \\le b$$$)\u00a0\u2014 the coordinates of the chips. All pairs of coordinates are distinct.</p><p>Each of the next $$$m$$$ lines contain a character $$$c_j$$$ and an integer $$$k_j$$$\u00a0\u2014 the description of the $$$j$$$-th move. It is guaranteed that $$$k$$$ is <span class=\"tex-font-style-bf\">less than</span> the number of rows/columns in the current grid. In other words, a player cannot cut the entire remaining grid on their move.</p><p>It is guaranteed that the sum of the values of $$$n$$$ across all test cases in the test does not exceed $$$2 \\cdot 10^5$$$. It is guaranteed that the sum of the values of $$$m$$$ across all test cases in the test does not exceed $$$2 \\cdot 10^5$$$.</p>",
    "outputSpecification": "<p>For each test case, output two integers\u00a0\u2014 the number of points earned by Alice and Bob, respectively.</p>",
    "samples": [
        {
            "input": "\n<div class=\"test-example-line test-example-line-even test-example-line-0\">6</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">4 4 3 2</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">4 1</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">3 3</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">2 4</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">D 2</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">R 1</div><div class=\"test-example-line test-example-line-even test-example-line-2\">4 4 3 3</div><div class=\"test-example-line test-example-line-even test-example-line-2\">4 1</div><div class=\"test-example-line test-example-line-even test-example-line-2\">3 2</div><div class=\"test-example-line test-example-line-even test-example-line-2\">2 3</div><div class=\"test-example-line test-example-line-even test-example-line-2\">D 1</div><div class=\"test-example-line test-example-line-even test-example-line-2\">L 1</div><div class=\"test-example-line test-example-line-even test-example-line-2\">U 2</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">3 5 3 2</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">1 3</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">2 2</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">3 3</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">R 2</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">R 2</div><div class=\"test-example-line test-example-line-even test-example-line-4\">6 4 4 2</div><div class=\"test-example-line test-example-line-even test-example-line-4\">1 4</div><div class=\"test-example-line test-example-line-even test-example-line-4\">2 3</div><div class=\"test-example-line test-example-line-even test-example-line-4\">5 3</div><div class=\"test-example-line test-example-line-even test-example-line-4\">1 1</div><div class=\"test-example-line test-example-line-even test-example-line-4\">R 1</div><div class=\"test-example-line test-example-line-even test-example-line-4\">U 1</div><div class=\"test-example-line test-example-line-odd test-example-line-5\">9 3 2 1</div><div class=\"test-example-line test-example-line-odd test-example-line-5\">6 1</div><div class=\"test-example-line test-example-line-odd test-example-line-5\">3 3</div><div class=\"test-example-line test-example-line-odd test-example-line-5\">D 8</div><div class=\"test-example-line test-example-line-even test-example-line-6\">10 10 2 5</div><div class=\"test-example-line test-example-line-even test-example-line-6\">7 5</div><div class=\"test-example-line test-example-line-even test-example-line-6\">9 1</div><div class=\"test-example-line test-example-line-even test-example-line-6\">R 1</div><div class=\"test-example-line test-example-line-even test-example-line-6\">L 2</div><div class=\"test-example-line test-example-line-even test-example-line-6\">D 1</div><div class=\"test-example-line test-example-line-even test-example-line-6\">U 4</div><div class=\"test-example-line test-example-line-even test-example-line-6\">D 1</div>",
            "output": "\n2 1\n2 0\n0 3\n1 1\n2 0\n0 1\n"
        }
    ],
    "note": "<p>Below is the game from the first example:</p><center> <img class=\"tex-graphics\" src=\"https://espresso.codeforces.com/f34437738326699a3c4dcfdfddb435b9a4dbc606.png\" style=\"max-width: 100.0%;max-height: 100.0%;\"/> </center><p>On her turn, Alice cut $$$2$$$ rows from the bottom and scored $$$2$$$ points, then Bob cut $$$1$$$ column from the right and scored one point. Note that if Bob had cut $$$1$$$ row from the bottom, he would have also scored $$$1$$$ point.</p>",
    "contestId": 1974,
    "index": "F",
    "name": "Cutting Game",
    "type": "PROGRAMMING",
    "tags": [
        "binary search",
        "brute force",
        "data structures",
        "implementation",
        "sortings",
        "two pointers"
    ],
    "solvedCount": 2866
}