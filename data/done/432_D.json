{
    "title": "D. Prefixes and Suffixes",
    "timeLimit": {
        "value": 1.0,
        "unit": "second"
    },
    "memoryLimit": {
        "value": 256.0,
        "unit": "megabytes"
    },
    "statement": "<p>You have a string <span class=\"tex-span\"><i>s</i>\u2009=\u2009<i>s</i><sub class=\"lower-index\">1</sub><i>s</i><sub class=\"lower-index\">2</sub>...<i>s</i><sub class=\"lower-index\">|<i>s</i>|</sub></span>, where <span class=\"tex-span\">|<i>s</i>|</span> is the length of string <span class=\"tex-span\"><i>s</i></span>, and <span class=\"tex-span\"><i>s</i><sub class=\"lower-index\"><i>i</i></sub></span> its <span class=\"tex-span\"><i>i</i></span>-th character. </p><p>Let's introduce several definitions:</p><ul> <li> A substring <span class=\"tex-span\"><i>s</i>[<i>i</i>..<i>j</i>]</span> <span class=\"tex-span\">(1\u2009\u2264\u2009<i>i</i>\u2009\u2264\u2009<i>j</i>\u2009\u2264\u2009|<i>s</i>|)</span> of string <span class=\"tex-span\"><i>s</i></span> is string <span class=\"tex-span\"><i>s</i><sub class=\"lower-index\"><i>i</i></sub><i>s</i><sub class=\"lower-index\"><i>i</i>\u2009+\u20091</sub>...<i>s</i><sub class=\"lower-index\"><i>j</i></sub></span>. </li><li> The prefix of string <span class=\"tex-span\"><i>s</i></span> of length <span class=\"tex-span\"><i>l</i></span> <span class=\"tex-span\">(1\u2009\u2264\u2009<i>l</i>\u2009\u2264\u2009|<i>s</i>|)</span> is string <span class=\"tex-span\"><i>s</i>[1..<i>l</i>]</span>. </li><li> The suffix of string <span class=\"tex-span\"><i>s</i></span> of length <span class=\"tex-span\"><i>l</i></span> <span class=\"tex-span\">(1\u2009\u2264\u2009<i>l</i>\u2009\u2264\u2009|<i>s</i>|)</span> is string <span class=\"tex-span\"><i>s</i>[|<i>s</i>|\u2009-\u2009<i>l</i>\u2009+\u20091..|<i>s</i>|]</span>. </li></ul><p>Your task is, for any prefix of string <span class=\"tex-span\"><i>s</i></span> which matches a suffix of string <span class=\"tex-span\"><i>s</i></span>, print the number of times it occurs in string <span class=\"tex-span\"><i>s</i></span> as a substring.</p>",
    "inputSpecification": "<p>The single line contains a sequence of characters <span class=\"tex-span\"><i>s</i><sub class=\"lower-index\">1</sub><i>s</i><sub class=\"lower-index\">2</sub>...<i>s</i><sub class=\"lower-index\">|<i>s</i>|</sub></span> <span class=\"tex-span\">(1\u2009\u2264\u2009|<i>s</i>|\u2009\u2264\u200910<sup class=\"upper-index\">5</sup>)</span> \u2014 string <span class=\"tex-span\"><i>s</i></span>. The string only consists of uppercase English letters.</p>",
    "outputSpecification": "<p>In the first line, print integer <span class=\"tex-span\"><i>k</i></span> <span class=\"tex-span\">(0\u2009\u2264\u2009<i>k</i>\u2009\u2264\u2009|<i>s</i>|)</span> \u2014 the number of prefixes that match a suffix of string <span class=\"tex-span\"><i>s</i></span>. Next print <span class=\"tex-span\"><i>k</i></span> lines, in each line print two integers <span class=\"tex-span\"><i>l</i><sub class=\"lower-index\"><i>i</i></sub></span> <span class=\"tex-span\"><i>c</i><sub class=\"lower-index\"><i>i</i></sub></span>. Numbers <span class=\"tex-span\"><i>l</i><sub class=\"lower-index\"><i>i</i></sub></span> <span class=\"tex-span\"><i>c</i><sub class=\"lower-index\"><i>i</i></sub></span> mean that the prefix of the length <span class=\"tex-span\"><i>l</i><sub class=\"lower-index\"><i>i</i></sub></span> matches the suffix of length <span class=\"tex-span\"><i>l</i><sub class=\"lower-index\"><i>i</i></sub></span> and occurs in string <span class=\"tex-span\"><i>s</i></span> as a substring <span class=\"tex-span\"><i>c</i><sub class=\"lower-index\"><i>i</i></sub></span> times. Print pairs <span class=\"tex-span\"><i>l</i><sub class=\"lower-index\"><i>i</i></sub></span> <span class=\"tex-span\"><i>c</i><sub class=\"lower-index\"><i>i</i></sub></span> <span class=\"tex-font-style-bf\">in the order of increasing</span> <span class=\"tex-span\"><i>l</i><sub class=\"lower-index\"><i>i</i></sub></span>.</p>",
    "samples": [
        {
            "input": "ABACABA<br/>",
            "output": "3<br/>1 4<br/>3 2<br/>7 1<br/>"
        },
        {
            "input": "AAA<br/>",
            "output": "3<br/>1 3<br/>2 2<br/>3 1<br/>"
        }
    ],
    "note": null,
    "contestId": 432,
    "index": "D",
    "name": "Prefixes and Suffixes",
    "type": "PROGRAMMING",
    "tags": [
        "dp",
        "string suffix structures",
        "strings",
        "two pointers"
    ],
    "solvedCount": 8437
}