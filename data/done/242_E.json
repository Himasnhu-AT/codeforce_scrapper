{
    "title": "E. XOR on Segment",
    "timeLimit": {
        "value": 4.0,
        "unit": "seconds"
    },
    "memoryLimit": {
        "value": 256.0,
        "unit": "megabytes"
    },
    "statement": "<p>You've got an array <span class=\"tex-span\"><i>a</i></span>, consisting of <span class=\"tex-span\"><i>n</i></span> integers <span class=\"tex-span\"><i>a</i><sub class=\"lower-index\">1</sub>,\u2009<i>a</i><sub class=\"lower-index\">2</sub>,\u2009...,\u2009<i>a</i><sub class=\"lower-index\"><i>n</i></sub></span>. You are allowed to perform two operations on this array:</p><ol> <li> Calculate the sum of current array elements on the segment <span class=\"tex-span\">[<i>l</i>,\u2009<i>r</i>]</span>, that is, count value <span class=\"tex-span\"><i>a</i><sub class=\"lower-index\"><i>l</i></sub>\u2009+\u2009<i>a</i><sub class=\"lower-index\"><i>l</i>\u2009+\u20091</sub>\u2009+\u2009...\u2009+\u2009<i>a</i><sub class=\"lower-index\"><i>r</i></sub></span>. </li><li> Apply the xor operation with a given number <span class=\"tex-span\"><i>x</i></span> to each array element on the segment <span class=\"tex-span\">[<i>l</i>,\u2009<i>r</i>]</span>, that is, execute <img align=\"middle\" class=\"tex-formula\" src=\"https://espresso.codeforces.com/2ef04d094daf2dcff9a998a558bd9cab93bbd012.png\" style=\"max-width: 100.0%;max-height: 100.0%;\"/>. This operation changes exactly <span class=\"tex-span\"><i>r</i>\u2009-\u2009<i>l</i>\u2009+\u20091</span> array elements. </li></ol><p>Expression <img align=\"middle\" class=\"tex-formula\" src=\"https://espresso.codeforces.com/b364f2e04c665b78b924ec10666327a4ef4635bc.png\" style=\"max-width: 100.0%;max-height: 100.0%;\"/> means applying bitwise xor operation to numbers <span class=\"tex-span\"><i>x</i></span> and <span class=\"tex-span\"><i>y</i></span>. The given operation exists in all modern programming languages, for example in language <span class=\"tex-font-style-it\">C++</span> and <span class=\"tex-font-style-it\">Java</span> it is marked as \"<span class=\"tex-font-style-tt\">^</span>\", in <span class=\"tex-font-style-it\">Pascal</span> \u2014 as \"<span class=\"tex-font-style-tt\">xor</span>\".</p><p>You've got a list of <span class=\"tex-span\"><i>m</i></span> operations of the indicated type. Your task is to perform all given operations, for each sum query you should print the result you get.</p>",
    "inputSpecification": "<p>The first line contains integer <span class=\"tex-span\"><i>n</i></span> (<span class=\"tex-span\">1\u2009\u2264\u2009<i>n</i>\u2009\u2264\u200910<sup class=\"upper-index\">5</sup></span>) \u2014 the size of the array. The second line contains space-separated integers <span class=\"tex-span\"><i>a</i><sub class=\"lower-index\">1</sub>,\u2009<i>a</i><sub class=\"lower-index\">2</sub>,\u2009...,\u2009<i>a</i><sub class=\"lower-index\"><i>n</i></sub></span> (<span class=\"tex-span\">0\u2009\u2264\u2009<i>a</i><sub class=\"lower-index\"><i>i</i></sub>\u2009\u2264\u200910<sup class=\"upper-index\">6</sup></span>) \u2014 the original array.</p><p>The third line contains integer <span class=\"tex-span\"><i>m</i></span> (<span class=\"tex-span\">1\u2009\u2264\u2009<i>m</i>\u2009\u2264\u20095\u00b710<sup class=\"upper-index\">4</sup></span>) \u2014 the number of operations with the array. The <span class=\"tex-span\"><i>i</i></span>-th of the following <span class=\"tex-span\"><i>m</i></span> lines first contains an integer <span class=\"tex-span\"><i>t</i><sub class=\"lower-index\"><i>i</i></sub></span> (<span class=\"tex-span\">1\u2009\u2264\u2009<i>t</i><sub class=\"lower-index\"><i>i</i></sub>\u2009\u2264\u20092</span>) \u2014 the type of the <span class=\"tex-span\"><i>i</i></span>-th query. If <span class=\"tex-span\"><i>t</i><sub class=\"lower-index\"><i>i</i></sub>\u2009=\u20091</span>, then this is the query of the sum, if <span class=\"tex-span\"><i>t</i><sub class=\"lower-index\"><i>i</i></sub>\u2009=\u20092</span>, then this is the query to change array elements. If the <span class=\"tex-span\"><i>i</i></span>-th operation is of type <span class=\"tex-span\">1</span>, then next follow two integers <span class=\"tex-span\"><i>l</i><sub class=\"lower-index\"><i>i</i></sub>,\u2009<i>r</i><sub class=\"lower-index\"><i>i</i></sub></span> (<span class=\"tex-span\">1\u2009\u2264\u2009<i>l</i><sub class=\"lower-index\"><i>i</i></sub>\u2009\u2264\u2009<i>r</i><sub class=\"lower-index\"><i>i</i></sub>\u2009\u2264\u2009<i>n</i></span>). If the <span class=\"tex-span\"><i>i</i></span>-th operation is of type <span class=\"tex-span\">2</span>, then next follow three integers <span class=\"tex-span\"><i>l</i><sub class=\"lower-index\"><i>i</i></sub>,\u2009<i>r</i><sub class=\"lower-index\"><i>i</i></sub>,\u2009<i>x</i><sub class=\"lower-index\"><i>i</i></sub></span> (<span class=\"tex-span\">1\u2009\u2264\u2009<i>l</i><sub class=\"lower-index\"><i>i</i></sub>\u2009\u2264\u2009<i>r</i><sub class=\"lower-index\"><i>i</i></sub>\u2009\u2264\u2009<i>n</i>,\u20091\u2009\u2264\u2009<i>x</i><sub class=\"lower-index\"><i>i</i></sub>\u2009\u2264\u200910<sup class=\"upper-index\">6</sup></span>). The numbers on the lines are separated by single spaces.</p>",
    "outputSpecification": "<p>For each query of type <span class=\"tex-span\">1</span> print in a single line the sum of numbers on the given segment. Print the answers to the queries in the order in which the queries go in the input.</p><p>Please, do not use the <span class=\"tex-font-style-tt\">%lld</span> specifier to read or write 64-bit integers in \u0421++. It is preferred to use the <span class=\"tex-font-style-tt\">cin</span>, <span class=\"tex-font-style-tt\">cout</span> streams, or the <span class=\"tex-font-style-tt\">%I64d</span> specifier.</p>",
    "samples": [
        {
            "input": "5<br/>4 10 3 13 7<br/>8<br/>1 2 4<br/>2 1 3 3<br/>1 2 4<br/>1 3 3<br/>2 2 5 5<br/>1 1 5<br/>2 1 2 10<br/>1 2 3<br/>",
            "output": "26<br/>22<br/>0<br/>34<br/>11<br/>"
        },
        {
            "input": "6<br/>4 7 4 0 7 3<br/>5<br/>2 2 3 8<br/>1 1 5<br/>2 3 5 1<br/>2 4 5 6<br/>1 2 3<br/>",
            "output": "38<br/>28<br/>"
        }
    ],
    "note": null,
    "contestId": 242,
    "index": "E",
    "name": "XOR on Segment",
    "type": "PROGRAMMING",
    "tags": [
        "bitmasks",
        "data structures"
    ],
    "solvedCount": 8574
}