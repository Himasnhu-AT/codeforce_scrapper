{
    "title": "C. Hexadecimal's Numbers",
    "timeLimit": {
        "value": 1.0,
        "unit": "second"
    },
    "memoryLimit": {
        "value": 64.0,
        "unit": "megabytes"
    },
    "statement": "<p>One beautiful July morning a terrible thing happened in Mainframe: a mean virus Megabyte somehow got access to the memory of his not less mean sister Hexadecimal. He loaded there a huge amount of <span class=\"tex-span\"><i>n</i></span> different natural numbers from 1 to <span class=\"tex-span\"><i>n</i></span> to obtain total control over her energy.</p><p>But his plan failed. The reason for this was very simple: Hexadecimal didn't perceive any information, apart from numbers written in binary format. This means that if a number in a decimal representation contained characters apart from 0 and 1, it was not stored in the memory. Now Megabyte wants to know, how many numbers were loaded successfully.</p>",
    "inputSpecification": "<p>Input data contains the only number <span class=\"tex-span\"><i>n</i></span> (<span class=\"tex-span\">1\u2009\u2264\u2009<i>n</i>\u2009\u2264\u200910<sup class=\"upper-index\">9</sup></span>).</p>",
    "outputSpecification": "<p>Output the only number \u2014 answer to the problem.</p>",
    "samples": [
        {
            "input": "10<br/>",
            "output": "2"
        }
    ],
    "note": "<p>For <span class=\"tex-span\"><i>n</i></span> = 10 the answer includes numbers 1 and 10.</p>",
    "contestId": 9,
    "index": "C",
    "name": "Hexadecimal's Numbers",
    "type": "PROGRAMMING",
    "tags": [
        "brute force",
        "implementation",
        "math"
    ],
    "solvedCount": 12591
}