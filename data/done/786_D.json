{
    "title": "D. Rap God",
    "timeLimit": {
        "value": 7.0,
        "unit": "seconds"
    },
    "memoryLimit": {
        "value": 256.0,
        "unit": "megabytes"
    },
    "statement": "<p>Rick is in love with Unity. But Mr. Meeseeks also love Unity, so Rick and Mr. Meeseeks are \"love rivals\". </p><p>Unity loves rap, so it decided that they have to compete in a rap game (battle) in order to choose the best. Rick is too nerds, so instead he's gonna make his verse with running his original algorithm on lyrics \"Rap God\" song.</p><center> <img class=\"tex-graphics\" src=\"https://espresso.codeforces.com/a94566b49fa931c549f7d7c15b578ba5316c888d.png\" style=\"max-width: 100.0%;max-height: 100.0%;\"/> </center><p>His algorithm is a little bit complicated. He's made a tree with <span class=\"tex-span\"><i>n</i></span> vertices numbered from <span class=\"tex-span\">1</span> to <span class=\"tex-span\"><i>n</i></span> and there's a lowercase english letter written on each edge. He denotes <span class=\"tex-span\"><i>str</i>(<i>a</i>,\u2009<i>b</i>)</span> to be the string made by writing characters on edges on the shortest path from <span class=\"tex-span\"><i>a</i></span> to <span class=\"tex-span\"><i>b</i></span> one by one (a string of length equal to distance of <span class=\"tex-span\"><i>a</i></span> to <span class=\"tex-span\"><i>b</i></span>). Note that <span class=\"tex-span\"><i>str</i>(<i>a</i>,\u2009<i>b</i>)</span> is reverse of <span class=\"tex-span\"><i>str</i>(<i>b</i>,\u2009<i>a</i>)</span> and <span class=\"tex-span\"><i>str</i>(<i>a</i>,\u2009<i>a</i>)</span> is empty.</p><p> In order to make the best verse he can, he needs to answer some queries, but he's not a computer scientist and is not able to answer those queries, so he asked you to help him. Each query is characterized by two vertices <span class=\"tex-span\"><i>x</i></span> and <span class=\"tex-span\"><i>y</i></span> (<span class=\"tex-span\"><i>x</i>\u2009\u2260\u2009<i>y</i></span>). Answer to this query is the number of vertices like <span class=\"tex-span\"><i>z</i></span> such that <span class=\"tex-span\"><i>z</i>\u2009\u2260\u2009<i>x</i>,\u2009<i>z</i>\u2009\u2260\u2009<i>y</i></span> and <span class=\"tex-span\"><i>str</i>(<i>x</i>,\u2009<i>y</i>)</span> is lexicographically larger than <span class=\"tex-span\"><i>str</i>(<i>x</i>,\u2009<i>z</i>)</span>.</p><p>String <span class=\"tex-span\"><i>x</i>\u2009\u2009=\u2009\u2009<i>x</i><sub class=\"lower-index\">1</sub><i>x</i><sub class=\"lower-index\">2</sub>...<i>x</i><sub class=\"lower-index\">|<i>x</i>|</sub></span> is lexicographically larger than string <span class=\"tex-span\"><i>y</i>\u2009\u2009=\u2009\u2009<i>y</i><sub class=\"lower-index\">1</sub><i>y</i><sub class=\"lower-index\">2</sub>...<i>y</i><sub class=\"lower-index\">|<i>y</i>|</sub></span>, if either <span class=\"tex-span\">|<i>x</i>|\u2009\u2009&gt;\u2009\u2009|<i>y</i>|</span> and <span class=\"tex-span\"><i>x</i><sub class=\"lower-index\">1</sub>\u2009\u2009=\u2009\u2009<i>y</i><sub class=\"lower-index\">1</sub>,\u2009\u2009<i>x</i><sub class=\"lower-index\">2</sub>\u2009\u2009=\u2009\u2009<i>y</i><sub class=\"lower-index\">2</sub>,\u2009\u2009...,\u2009\u2009<i>x</i><sub class=\"lower-index\">|<i>y</i>|</sub>\u2009\u2009=\u2009\u2009<i>y</i><sub class=\"lower-index\">|<i>y</i>|</sub></span>, or exists such number <span class=\"tex-span\"><i>r</i> (<i>r</i>\u2009\u2009&lt;\u2009\u2009|<i>x</i>|,\u2009\u2009<i>r</i>\u2009\u2009&lt;\u2009\u2009|<i>y</i>|)</span>, that <span class=\"tex-span\"><i>x</i><sub class=\"lower-index\">1</sub>\u2009\u2009=\u2009\u2009<i>y</i><sub class=\"lower-index\">1</sub>,\u2009\u2009<i>x</i><sub class=\"lower-index\">2</sub>\u2009\u2009=\u2009\u2009<i>y</i><sub class=\"lower-index\">2</sub>,\u2009\u2009...,\u2009\u2009<i>x</i><sub class=\"lower-index\"><i>r</i></sub>\u2009\u2009=\u2009\u2009<i>y</i><sub class=\"lower-index\"><i>r</i></sub></span> and <span class=\"tex-span\"><i>x</i><sub class=\"lower-index\"><i>r</i>\u2009\u2009+\u2009\u20091</sub>\u2009\u2009&gt;\u2009\u2009<i>y</i><sub class=\"lower-index\"><i>r</i>\u2009\u2009+\u2009\u20091</sub></span>. Characters are compared like their ASCII codes (or alphabetic order).</p><p>Help Rick get the girl (or whatever gender Unity has).</p>",
    "inputSpecification": "<p>The first line of input contain two integers <span class=\"tex-span\"><i>n</i></span> and <span class=\"tex-span\"><i>q</i></span> (<span class=\"tex-span\">2\u2009\u2264\u2009<i>n</i>\u2009\u2264\u200920000</span>, <span class=\"tex-span\">1\u2009\u2264\u2009<i>q</i>\u2009\u2264\u200920000</span>) \u2014 number of vertices in tree and number of queries respectively.</p><p>The next <span class=\"tex-span\"><i>n</i>\u2009-\u20091</span> lines contain the edges. Each line contains two integers <span class=\"tex-span\"><i>v</i></span> and <span class=\"tex-span\"><i>u</i></span> (endpoints of the edge) followed by an English lowercase letter <span class=\"tex-span\"><i>c</i></span> (<span class=\"tex-span\">1\u2009\u2264\u2009<i>v</i>,\u2009<i>u</i>\u2009\u2264\u2009<i>n</i>,\u2009<i>v</i>\u2009\u2260\u2009<i>u</i></span>).</p><p>The next <span class=\"tex-span\"><i>q</i></span> line contain the queries. Each line contains two integers <span class=\"tex-span\"><i>x</i></span> and <span class=\"tex-span\"><i>y</i></span> (<span class=\"tex-span\">1\u2009\u2264\u2009<i>x</i>,\u2009<i>y</i>\u2009\u2264\u2009<i>n</i>,\u2009<i>x</i>\u2009\u2260\u2009<i>y</i></span>).</p>",
    "outputSpecification": "<p>Print the answer for each query in one line.</p>",
    "samples": [
        {
            "input": "4 3<br/>4 1 t<br/>3 2 p<br/>1 2 s<br/>3 2<br/>1 3<br/>2 1<br/>",
            "output": "0<br/>1<br/>1<br/>"
        },
        {
            "input": "8 4<br/>4 6 p<br/>3 7 o<br/>7 8 p<br/>4 5 d<br/>1 3 o<br/>4 3 p<br/>3 2 e<br/>8 6<br/>3 7<br/>8 1<br/>4 3<br/>",
            "output": "6<br/>1<br/>3<br/>1<br/>"
        }
    ],
    "note": "<p>Here's the tree of first sample testcase:</p><center> <img class=\"tex-graphics\" src=\"https://espresso.codeforces.com/52c4ac206682b1b83187e8deafc93c06dac6e544.png\" style=\"max-width: 100.0%;max-height: 100.0%;\"/> </center><p>Here's the tree of second sample testcase:</p><center> <img class=\"tex-graphics\" src=\"https://espresso.codeforces.com/04907a839e56ddf24e0491a4cf8d51397afb2e25.png\" style=\"max-width: 100.0%;max-height: 100.0%;\"/> </center><p>In this test:</p><ul> <li> <span class=\"tex-span\"><i>str</i>(8,\u20091)</span> = <span class=\"tex-font-style-tt\">poo</span> </li><li> <span class=\"tex-span\"><i>str</i>(8,\u20092)</span> = <span class=\"tex-font-style-tt\">poe</span> </li><li> <span class=\"tex-span\"><i>str</i>(8,\u20093)</span> = <span class=\"tex-font-style-tt\">po</span> </li><li> <span class=\"tex-span\"><i>str</i>(8,\u20094)</span> = <span class=\"tex-font-style-tt\">pop</span> </li><li> <span class=\"tex-span\"><i>str</i>(8,\u20095)</span> = <span class=\"tex-font-style-tt\">popd</span> </li><li> <span class=\"tex-span\"><i>str</i>(8,\u20096)</span> = <span class=\"tex-font-style-tt\">popp</span> </li><li> <span class=\"tex-span\"><i>str</i>(8,\u20097)</span> = <span class=\"tex-font-style-tt\">p</span> </li></ul><p>So, for the first query, <img align=\"middle\" class=\"tex-formula\" src=\"https://espresso.codeforces.com/9ac3bcb50c63fc450b7ff3ad3f82b1aa9b0ffdb8.png\" style=\"max-width: 100.0%;max-height: 100.0%;\"/> and for the third query <img align=\"middle\" class=\"tex-formula\" src=\"https://espresso.codeforces.com/01f13fd2e1e98dac35dfd28b98a1cdb970305a72.png\" style=\"max-width: 100.0%;max-height: 100.0%;\"/> is the answer.</p>",
    "contestId": 786,
    "index": "D",
    "name": "Rap God",
    "type": "PROGRAMMING",
    "tags": [
        "data structures",
        "dfs and similar",
        "hashing",
        "strings",
        "trees"
    ],
    "solvedCount": 138
}