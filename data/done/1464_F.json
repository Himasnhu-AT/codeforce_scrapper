{
    "title": "F. My Beautiful Madness",
    "timeLimit": {
        "value": 2.0,
        "unit": "seconds"
    },
    "memoryLimit": {
        "value": 512.0,
        "unit": "megabytes"
    },
    "statement": "<p>You are given a tree. We will consider simple paths on it. Let's denote path between vertices $$$a$$$ and $$$b$$$ as $$$(a, b)$$$. Let $$$d$$$-neighborhood of a path be a set of vertices of the tree located at a distance $$$\\leq d$$$ from at least one vertex of the path (for example, $$$0$$$-neighborhood of a path is a path itself). Let $$$P$$$ be a multiset of the tree paths. Initially, it is empty. You are asked to maintain the following queries:</p><ul> <li> $$$1$$$ $$$u$$$ $$$v$$$\u00a0\u2014 add path $$$(u, v)$$$ into $$$P$$$ ($$$1 \\leq u, v \\leq n$$$). </li><li> $$$2$$$ $$$u$$$ $$$v$$$\u00a0\u2014 delete path $$$(u, v)$$$ from $$$P$$$ ($$$1 \\leq u, v \\leq n$$$). Notice that $$$(u, v)$$$ equals to $$$(v, u)$$$. For example, if $$$P = \\{(1, 2), (1, 2)\\}$$$, than after query $$$2$$$ $$$2$$$ $$$1$$$, $$$P = \\{(1, 2)\\}$$$. </li><li> $$$3$$$ $$$d$$$\u00a0\u2014 if intersection of all $$$d$$$-neighborhoods of paths from $$$P$$$ is not empty output \"<span class=\"tex-font-style-tt\">Yes</span>\", otherwise output \"<span class=\"tex-font-style-tt\">No</span>\" ($$$0 \\leq d \\leq n - 1$$$). </li></ul>",
    "inputSpecification": "<p>The first line contains two integers $$$n$$$ and $$$q$$$\u00a0\u2014 the number of vertices in the tree and the number of queries, accordingly ($$$1 \\leq n \\leq 2 \\cdot 10^5$$$, $$$2 \\leq q \\leq 2 \\cdot 10^5$$$).</p><p>Each of the following $$$n - 1$$$ lines contains two integers $$$x_i$$$ and $$$y_i$$$\u00a0\u2014 indices of vertices connected by $$$i$$$-th edge ($$$1 \\le x_i, y_i \\le n$$$).</p><p>The following $$$q$$$ lines contain queries in the format described in the statement.</p><p>It's guaranteed that: </p><ul> <li> for a query $$$2$$$ $$$u$$$ $$$v$$$, path $$$(u, v)$$$ (or $$$(v, u)$$$) is present in $$$P$$$, </li><li> for a query $$$3$$$ $$$d$$$, $$$P \\neq \\varnothing$$$, </li><li> there is at least one query of the third type. </li></ul>",
    "outputSpecification": "<p>For each query of the third type output answer on a new line.</p>",
    "samples": [
        {
            "input": "\n1 4\n1 1 1\n1 1 1\n2 1 1\n3 0\n",
            "output": "\nYes\n"
        },
        {
            "input": "\n5 3\n1 2\n1 3\n3 4\n4 5\n1 1 2\n1 5 5\n3 1\n",
            "output": "\nNo\n"
        },
        {
            "input": "\n10 6\n1 2\n2 3\n3 4\n4 7\n7 10\n2 5\n5 6\n6 8\n8 9\n1 9 9\n1 9 8\n1 8 5\n3 0\n3 1\n3 2\n",
            "output": "\nNo\nYes\nYes\n"
        }
    ],
    "note": null,
    "contestId": 1464,
    "index": "F",
    "name": "My Beautiful Madness",
    "type": "PROGRAMMING",
    "tags": [
        "data structures",
        "trees"
    ],
    "solvedCount": 288
}