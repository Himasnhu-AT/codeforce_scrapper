{
    "title": "C. Point Ordering",
    "timeLimit": {
        "value": 1.0,
        "unit": "second"
    },
    "memoryLimit": {
        "value": 256.0,
        "unit": "megabytes"
    },
    "statement": "<p><span class=\"tex-font-style-bf\">This is an interactive problem.</span></p><p>Khanh has $$$n$$$ points on the Cartesian plane, denoted by $$$a_1, a_2, \\ldots, a_n$$$. All points' coordinates are integers between $$$-10^9$$$ and $$$10^9$$$, inclusive. No three points are collinear. He says that these points are vertices of a convex polygon; in other words, there exists a permutation $$$p_1, p_2, \\ldots, p_n$$$ of integers from $$$1$$$ to $$$n$$$ such that the polygon $$$a_{p_1} a_{p_2} \\ldots a_{p_n}$$$ is convex and vertices are listed in counter-clockwise order.</p><p>Khanh gives you the number $$$n$$$, but hides the coordinates of his points. Your task is to guess the above permutation by asking multiple queries. In each query, you give Khanh $$$4$$$ integers $$$t$$$, $$$i$$$, $$$j$$$, $$$k$$$; where either $$$t = 1$$$ or $$$t = 2$$$; and $$$i$$$, $$$j$$$, $$$k$$$ are three <span class=\"tex-font-style-bf\">distinct</span> indices from $$$1$$$ to $$$n$$$, inclusive. In response, Khanh tells you:</p><ul> <li> if $$$t = 1$$$, the area of the triangle $$$a_ia_ja_k$$$ <span class=\"tex-font-style-bf\">multiplied by $$$2$$$</span>. </li><li> if $$$t = 2$$$, the <span class=\"tex-font-style-it\">sign</span> of the <span class=\"tex-font-style-it\">cross product</span> of two <span class=\"tex-font-style-bf\">vectors</span> $$$\\overrightarrow{a_ia_j}$$$ and $$$\\overrightarrow{a_ia_k}$$$. </li></ul><p>Recall that the <span class=\"tex-font-style-it\">cross product</span> of vector $$$\\overrightarrow{a} = (x_a, y_a)$$$ and vector $$$\\overrightarrow{b} = (x_b, y_b)$$$ is the <span class=\"tex-font-style-bf\">integer</span> $$$x_a \\cdot y_b - x_b \\cdot y_a$$$. The <span class=\"tex-font-style-it\">sign</span> of a number is $$$1$$$ it it is positive, and $$$-1$$$ otherwise. It can be proven that the cross product obtained in the above queries can not be $$$0$$$.</p><p>You can ask at most $$$3 \\cdot n$$$ queries.</p><p>Please note that Khanh fixes the coordinates of his points and does not change it while answering your queries. You do not need to guess the coordinates. In your permutation $$$a_{p_1}a_{p_2}\\ldots a_{p_n}$$$, $$$p_1$$$ should be equal to $$$1$$$ and the indices of vertices should be <span class=\"tex-font-style-bf\">listed in counter-clockwise order</span>.</p>",
    "inputSpecification": null,
    "outputSpecification": null,
    "samples": [
        {
            "input": "\n6\n\n15\n\n-1\n\n1",
            "output": "\n1 1 4 6\n\n2 1 5 6\n\n2 2 1 4\n\n0 1 3 4 2 6 5"
        }
    ],
    "note": "<p>The image below shows the hidden polygon in the example:</p><center> <img class=\"tex-graphics\" height=\"378px\" src=\"https://espresso.codeforces.com/c410e8bc878026b102c4f0e9d308a2ae1260f1b4.png\" style=\"max-width: 100.0%;max-height: 100.0%;\" width=\"378px\"/> </center><p>The interaction in the example goes as below: </p><ul> <li> Contestant reads $$$n = 6$$$. </li><li> Contestant asks a query with $$$t = 1$$$, $$$i = 1$$$, $$$j = 4$$$, $$$k = 6$$$. </li><li> Jury answers $$$15$$$. The area of the triangle $$$A_1A_4A_6$$$ is $$$7.5$$$. Note that the answer is <span class=\"tex-font-style-bf\">two times</span> the area of the triangle. </li><li> Contestant asks a query with $$$t = 2$$$, $$$i = 1$$$, $$$j = 5$$$, $$$k = 6$$$. </li><li> Jury answers $$$-1$$$. The cross product of $$$\\overrightarrow{A_1A_5} = (2, 2)$$$ and $$$\\overrightarrow{A_1A_6} = (4, 1)$$$ is $$$-2$$$. The sign of $$$-2$$$ is $$$-1$$$. </li><li> Contestant asks a query with $$$t = 2$$$, $$$i = 2$$$, $$$j = 1$$$, $$$k = 4$$$. </li><li> Jury answers $$$1$$$. The cross product of $$$\\overrightarrow{A_2A_1} = (-5, 2)$$$ and $$$\\overrightarrow{A_2A_4} = (-2, -1)$$$ is $$$1$$$. The sign of $$$1$$$ is $$$1$$$. </li><li> Contestant says that the permutation is $$$(1, 3, 4, 2, 6, 5)$$$.  </li></ul>",
    "contestId": 1254,
    "index": "C",
    "name": "Point Ordering",
    "type": "PROGRAMMING",
    "tags": [
        "constructive algorithms",
        "geometry",
        "interactive",
        "math"
    ],
    "solvedCount": 1389
}