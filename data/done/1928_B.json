{
    "title": "B. Equalize",
    "timeLimit": {
        "value": 1.0,
        "unit": "second"
    },
    "memoryLimit": {
        "value": 256.0,
        "unit": "megabytes"
    },
    "statement": "<p>Vasya has two hobbies\u00a0\u2014 adding permutations$$$^{\\dagger}$$$ to arrays and finding the most frequently occurring element. Recently, he found an array $$$a$$$ and decided to find out the maximum number of elements equal to the same number in the array $$$a$$$ that he can obtain after adding some permutation to the array $$$a$$$.</p><p>More formally, Vasya must choose exactly one permutation $$$p_1, p_2, p_3, \\ldots, p_n$$$ of length $$$n$$$, and then change the elements of the array $$$a$$$ according to the rule $$$a_i := a_i + p_i$$$. After that, Vasya counts how many times each number occurs in the array $$$a$$$ and takes the maximum of these values. You need to determine the maximum value he can obtain.</p><p>$$$^{\\dagger}$$$A permutation of length $$$n$$$ is an array consisting of $$$n$$$ distinct integers from $$$1$$$ to $$$n$$$ in arbitrary order. For example, $$$[2,3,1,5,4]$$$ is a permutation, but $$$[1,2,2]$$$ is not a permutation ($$$2$$$ appears twice in the array), and $$$[1,3,4]$$$ is also not a permutation ($$$n=3$$$ but there is $$$4$$$ in the array).</p>",
    "inputSpecification": "<p>Each test consists of multiple test cases. The first line contains a single integer $$$t$$$ ($$$1 \\leq t \\leq 2 \\cdot 10^4$$$)\u00a0\u2014 the number of test cases. Then follows the description of the test cases.</p><p>The first line of each test case contains a single integer $$$n$$$ ($$$1 \\le n \\le 2 \\cdot 10^5$$$)\u00a0\u2014 the length of the array $$$a$$$.</p><p>The second line of each test case contains $$$n$$$ integers $$$a_1, a_2, \\ldots, a_n$$$ ($$$1 \\le a_i \\le 10^9$$$)\u00a0\u2014 the elements of the array $$$a$$$.</p><p>It is guaranteed that the sum of $$$n$$$ over all test cases does not exceed $$$2 \\cdot 10^5$$$.</p>",
    "outputSpecification": "<p>For each test case, output a single number\u00a0\u2014 the maximum number of elements equal to the same number after the operation of adding a permutation.</p>",
    "samples": [
        {
            "input": "\n<div class=\"test-example-line test-example-line-even test-example-line-0\">7</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">2</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">1 2</div><div class=\"test-example-line test-example-line-even test-example-line-2\">4</div><div class=\"test-example-line test-example-line-even test-example-line-2\">7 1 4 1</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">3</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">103 102 104</div><div class=\"test-example-line test-example-line-even test-example-line-4\">5</div><div class=\"test-example-line test-example-line-even test-example-line-4\">1 101 1 100 1</div><div class=\"test-example-line test-example-line-odd test-example-line-5\">5</div><div class=\"test-example-line test-example-line-odd test-example-line-5\">1 10 100 1000 1</div><div class=\"test-example-line test-example-line-even test-example-line-6\">2</div><div class=\"test-example-line test-example-line-even test-example-line-6\">3 1</div><div class=\"test-example-line test-example-line-odd test-example-line-7\">3</div><div class=\"test-example-line test-example-line-odd test-example-line-7\">1000000000 999999997 999999999</div>",
            "output": "\n2\n2\n3\n2\n1\n1\n2\n"
        }
    ],
    "note": "<p>In the first test case, it is optimal to choose $$$p = [2, 1]$$$. Then after applying the operation, the array $$$a$$$ will be $$$[3, 3]$$$, in which the number $$$3$$$ occurs twice, so the answer is $$$2$$$.</p><p>In the second test case, one of the optimal options is $$$p = [2, 3, 1, 4]$$$. After applying the operation, the array $$$a$$$ will be $$$[9, 4, 5, 5]$$$. Since the number $$$5$$$ occurs twice, the answer is $$$2$$$.</p>",
    "contestId": 1928,
    "index": "B",
    "name": "Equalize",
    "type": "PROGRAMMING",
    "tags": [
        "binary search",
        "greedy",
        "sortings",
        "two pointers"
    ],
    "solvedCount": 15767
}