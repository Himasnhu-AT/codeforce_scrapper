{
    "title": "F. Edge Queries",
    "timeLimit": {
        "value": 3.0,
        "unit": "seconds"
    },
    "memoryLimit": {
        "value": 256.0,
        "unit": "megabytes"
    },
    "statement": "<p>You are given an undirected, connected graph of $$$n$$$ nodes and $$$m$$$ edges. All nodes $$$u$$$ of the graph satisfy the following:</p><ul> <li> Let $$$S_u$$$ be the set of vertices in the longest simple cycle starting and ending at $$$u$$$. </li><li> Let $$$C_u$$$ be the union of the sets of vertices in any simple cycle starting and ending at $$$u$$$. </li><li> $$$S_u = C_u$$$. </li></ul><p>You need to answer $$$q$$$ queries.</p><p>For each query, you will be given node $$$a$$$ and node $$$b$$$. Out of all the edges that belong to any simple path from $$$a$$$ to $$$b$$$, count the number of edges such that if you remove that edge, $$$a$$$ and $$$b$$$ are reachable from each other.</p>",
    "inputSpecification": "<p>The first line contains two integers $$$n$$$ and $$$m$$$ ($$$2 \\le n \\le 2 \\cdot 10^5$$$, $$$1 \\le m \\le \\min$$$($$$2 \\cdot 10^5$$$, $$$(n \\cdot (n-1))/2$$$)) \u2014 the total number of nodes and edges in the graph, respectively.</p><p>The next $$$m$$$ lines contain two integers $$$u$$$ and $$$v$$$ ($$$1 \\le$$$ $$$u$$$, $$$v$$$ $$$\\le n$$$, $$$u \\neq v$$$) \u2014 describing an edge, implying that nodes $$$u$$$ and $$$v$$$ are connected to each other.</p><p>It is guaranteed that there is at most one edge between any pair of vertices in the graph and the given graph is connected.</p><p>The next line contains a single integer $$$q$$$ ($$$1 \\le q \\le 2 \\cdot 10^5$$$) \u2014 the number of queries.</p><p>Then $$$q$$$ lines follow, each representing a query. Each query contains two integers $$$a$$$ and $$$b$$$ ($$$1 \\le$$$ $$$a$$$, $$$b$$$ $$$\\le n$$$).</p>",
    "outputSpecification": "<p>For each query, output a single integer \u2014 answer to the query.</p>",
    "samples": [
        {
            "input": "\n10 11\n1 2\n2 3\n3 4\n4 5\n5 3\n2 7\n7 9\n9 10\n10 6\n6 7\n1 8\n5\n1 4\n5 10\n3 5\n2 8\n7 10\n",
            "output": "\n3\n7\n3\n0\n4\n"
        },
        {
            "input": "\n13 15\n1 2\n2 3\n3 4\n4 1\n2 4\n3 5\n5 6\n6 7\n6 8\n7 9\n9 10\n8 7\n10 11\n10 12\n10 13\n6\n9 11\n1 5\n1 8\n5 2\n5 12\n12 13\n",
            "output": "\n0\n5\n8\n5\n3\n0\n"
        }
    ],
    "note": "<p>The graph in the first sample is : </p><center> <img class=\"tex-graphics\" src=\"https://espresso.codeforces.com/f0add08293aba4fe5acdd054208d49d8aae353bb.png\" style=\"max-width: 100.0%;max-height: 100.0%;\"/> </center><p>The first query is $$$(1, 4)$$$. There are $$$5$$$ total edges that belong to any simple path from $$$1$$$ to $$$4$$$. Edges $$$(3, 4), (4, 5), (5, 3)$$$ will be counted in the answer to the query.</p><p>The fourth query is $$$(2, 8)$$$. There is only one simple path from $$$2$$$ to $$$8$$$, thus none of the edges will be counted in the answer to the query.</p><p>The fifth query is $$$(7, 10)$$$. There are $$$4$$$ total edges that belong to any simple path from $$$7$$$ to $$$10$$$, all of them will be counted in the answer to the query.</p>",
    "contestId": 1763,
    "index": "F",
    "name": "Edge Queries",
    "type": "PROGRAMMING",
    "tags": [
        "data structures",
        "dfs and similar",
        "dp",
        "dsu",
        "graphs",
        "trees"
    ],
    "solvedCount": 424
}