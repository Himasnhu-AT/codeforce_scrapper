{
    "title": "A. Memory and Crow",
    "timeLimit": {
        "value": 2.0,
        "unit": "seconds"
    },
    "memoryLimit": {
        "value": 256.0,
        "unit": "megabytes"
    },
    "statement": "<p>There are <span class=\"tex-span\"><i>n</i></span> integers <span class=\"tex-span\"><i>b</i><sub class=\"lower-index\">1</sub>,\u2009<i>b</i><sub class=\"lower-index\">2</sub>,\u2009...,\u2009<i>b</i><sub class=\"lower-index\"><i>n</i></sub></span> written in a row. For all <span class=\"tex-span\"><i>i</i></span> from <span class=\"tex-span\">1</span> to <span class=\"tex-span\"><i>n</i></span>, values <span class=\"tex-span\"><i>a</i><sub class=\"lower-index\"><i>i</i></sub></span> are defined by the crows performing the following procedure:</p><ul> <li> The crow sets <span class=\"tex-span\"><i>a</i><sub class=\"lower-index\"><i>i</i></sub></span> initially <span class=\"tex-span\">0</span>. </li><li> The crow then adds <span class=\"tex-span\"><i>b</i><sub class=\"lower-index\"><i>i</i></sub></span> to <span class=\"tex-span\"><i>a</i><sub class=\"lower-index\"><i>i</i></sub></span>, subtracts <span class=\"tex-span\"><i>b</i><sub class=\"lower-index\"><i>i</i>\u2009+\u20091</sub></span>, adds the <span class=\"tex-span\"><i>b</i><sub class=\"lower-index\"><i>i</i>\u2009+\u20092</sub></span> number, and so on until the <span class=\"tex-span\"><i>n</i></span>'th number. Thus, <span class=\"tex-span\"><i>a</i><sub class=\"lower-index\"><i>i</i></sub>\u2009=\u2009<i>b</i><sub class=\"lower-index\"><i>i</i></sub>\u2009-\u2009<i>b</i><sub class=\"lower-index\"><i>i</i>\u2009+\u20091</sub>\u2009+\u2009<i>b</i><sub class=\"lower-index\"><i>i</i>\u2009+\u20092</sub>\u2009-\u2009<i>b</i><sub class=\"lower-index\"><i>i</i>\u2009+\u20093</sub>...</span>. </li></ul><p>Memory gives you the values <span class=\"tex-span\"><i>a</i><sub class=\"lower-index\">1</sub>,\u2009<i>a</i><sub class=\"lower-index\">2</sub>,\u2009...,\u2009<i>a</i><sub class=\"lower-index\"><i>n</i></sub></span>, and he now wants you to find the initial numbers <span class=\"tex-span\"><i>b</i><sub class=\"lower-index\">1</sub>,\u2009<i>b</i><sub class=\"lower-index\">2</sub>,\u2009...,\u2009<i>b</i><sub class=\"lower-index\"><i>n</i></sub></span> written in the row? Can you do it?</p>",
    "inputSpecification": "<p>The first line of the input contains a single integer <span class=\"tex-span\"><i>n</i></span> (<span class=\"tex-span\">2\u2009\u2264\u2009<i>n</i>\u2009\u2264\u2009100\u2009000</span>)\u00a0\u2014 the number of integers written in the row.</p><p>The next line contains <span class=\"tex-span\"><i>n</i></span>, the <span class=\"tex-span\"><i>i</i></span>'th of which is <span class=\"tex-span\"><i>a</i><sub class=\"lower-index\"><i>i</i></sub></span> (<span class=\"tex-span\">\u2009-\u200910<sup class=\"upper-index\">9</sup>\u2009\u2264\u2009<i>a</i><sub class=\"lower-index\"><i>i</i></sub>\u2009\u2264\u200910<sup class=\"upper-index\">9</sup></span>)\u00a0\u2014 the value of the <span class=\"tex-span\"><i>i</i></span>'th number.</p>",
    "outputSpecification": "<p>Print <span class=\"tex-span\"><i>n</i></span> integers corresponding to the sequence <span class=\"tex-span\"><i>b</i><sub class=\"lower-index\">1</sub>,\u2009<i>b</i><sub class=\"lower-index\">2</sub>,\u2009...,\u2009<i>b</i><sub class=\"lower-index\"><i>n</i></sub></span>. It's guaranteed that the answer is unique and fits in 32-bit integer type.</p>",
    "samples": [
        {
            "input": "5<br/>6 -4 8 -2 3<br/>",
            "output": "2 4 6 1 3 <br/>"
        },
        {
            "input": "5<br/>3 -2 -1 5 6<br/>",
            "output": "1 -3 4 11 6 <br/>"
        }
    ],
    "note": "<p>In the first sample test, the crows report the numbers <span class=\"tex-span\">6</span>,<span class=\"tex-span\">\u2009-\u20094</span>, <span class=\"tex-span\">8</span>,<span class=\"tex-span\">\u2009-\u20092</span>, and <span class=\"tex-span\">3</span> when he starts at indices <span class=\"tex-span\">1</span>, <span class=\"tex-span\">2</span>, <span class=\"tex-span\">3</span>, <span class=\"tex-span\">4</span> and <span class=\"tex-span\">5</span> respectively. It is easy to check that the sequence <span class=\"tex-span\">2</span> <span class=\"tex-span\">4</span> <span class=\"tex-span\">6</span> <span class=\"tex-span\">1</span> <span class=\"tex-span\">3</span> satisfies the reports. For example, <span class=\"tex-span\">6\u2009=\u20092\u2009-\u20094\u2009+\u20096\u2009-\u20091\u2009+\u20093</span>, and <span class=\"tex-span\">\u2009-\u20094\u2009=\u20094\u2009-\u20096\u2009+\u20091\u2009-\u20093</span>.</p><p>In the second sample test, the sequence <span class=\"tex-span\">1</span>, <span class=\"tex-span\">\u2009-\u20093</span>, <span class=\"tex-span\">4</span>, <span class=\"tex-span\">11</span>, <span class=\"tex-span\">6</span> satisfies the reports. For example, <span class=\"tex-span\">5\u2009=\u200911\u2009-\u20096</span> and <span class=\"tex-span\">6\u2009=\u20096</span>.</p>",
    "contestId": 712,
    "index": "A",
    "name": "Memory and Crow",
    "type": "PROGRAMMING",
    "tags": [
        "implementation",
        "math"
    ],
    "solvedCount": 11538
}