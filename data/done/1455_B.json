{
    "title": "B. Jumps",
    "timeLimit": {
        "value": 1.0,
        "unit": "second"
    },
    "memoryLimit": {
        "value": 256.0,
        "unit": "megabytes"
    },
    "statement": "<p>You are standing on the $$$\\mathit{OX}$$$-axis at point $$$0$$$ and you want to move to an integer point $$$x &gt; 0$$$.</p><p>You can make several jumps. Suppose you're currently at point $$$y$$$ ($$$y$$$ may be negative) and jump for the $$$k$$$-th time. You can: </p><ul> <li> either jump to the point $$$y + k$$$ </li><li> or jump to the point $$$y - 1$$$. </li></ul><p>What is the minimum number of jumps you need to reach the point $$$x$$$?</p>",
    "inputSpecification": "<p>The first line contains a single integer $$$t$$$ ($$$1 \\le t \\le 1000$$$)\u00a0\u2014 the number of test cases.</p><p>The first and only line of each test case contains the single integer $$$x$$$ ($$$1 \\le x \\le 10^6$$$)\u00a0\u2014 the destination point.</p>",
    "outputSpecification": "<p>For each test case, print the single integer\u00a0\u2014 the minimum number of jumps to reach $$$x$$$. It can be proved that we can reach any integer point $$$x$$$.</p>",
    "samples": [
        {
            "input": "\n5\n1\n2\n3\n4\n5\n",
            "output": "\n1\n3\n2\n3\n4\n"
        }
    ],
    "note": "<p>In the first test case $$$x = 1$$$, so you need only one jump: the $$$1$$$-st jump from $$$0$$$ to $$$0 + 1 = 1$$$.</p><p>In the second test case $$$x = 2$$$. You need at least three jumps: </p><ul> <li> the $$$1$$$-st jump from $$$0$$$ to $$$0 + 1 = 1$$$; </li><li> the $$$2$$$-nd jump from $$$1$$$ to $$$1 + 2 = 3$$$; </li><li> the $$$3$$$-rd jump from $$$3$$$ to $$$3 - 1 = 2$$$; </li></ul><p>Two jumps are not enough because these are the only possible variants: </p><ul> <li> the $$$1$$$-st jump as $$$-1$$$ and the $$$2$$$-nd one as $$$-1$$$\u00a0\u2014 you'll reach $$$0 -1 -1 =-2$$$; </li><li> the $$$1$$$-st jump as $$$-1$$$ and the $$$2$$$-nd one as $$$+2$$$\u00a0\u2014 you'll reach $$$0 -1 +2 = 1$$$; </li><li> the $$$1$$$-st jump as $$$+1$$$ and the $$$2$$$-nd one as $$$-1$$$\u00a0\u2014 you'll reach $$$0 +1 -1 = 0$$$; </li><li> the $$$1$$$-st jump as $$$+1$$$ and the $$$2$$$-nd one as $$$+2$$$\u00a0\u2014 you'll reach $$$0 +1 +2 = 3$$$; </li></ul><p>In the third test case, you need two jumps: the $$$1$$$-st one as $$$+1$$$ and the $$$2$$$-nd one as $$$+2$$$, so $$$0 + 1 + 2 = 3$$$.</p><p>In the fourth test case, you need three jumps: the $$$1$$$-st one as $$$-1$$$, the $$$2$$$-nd one as $$$+2$$$ and the $$$3$$$-rd one as $$$+3$$$, so $$$0 - 1 + 2 + 3 = 4$$$.</p>",
    "contestId": 1455,
    "index": "B",
    "name": "Jumps",
    "type": "PROGRAMMING",
    "tags": [
        "constructive algorithms",
        "math"
    ],
    "solvedCount": 21359
}