{
    "title": "E. Sum of Digits",
    "timeLimit": {
        "value": 2.0,
        "unit": "seconds"
    },
    "memoryLimit": {
        "value": 512.0,
        "unit": "megabytes"
    },
    "statement": "<p>Let $$$f(x)$$$ be the sum of digits of a decimal number $$$x$$$.</p><p>Find the smallest non-negative integer $$$x$$$ such that $$$f(x) + f(x + 1) + \\dots + f(x + k) = n$$$.</p>",
    "inputSpecification": "<p>The first line contains one integer $$$t$$$ ($$$1 \\le t \\le 150$$$) \u2014 the number of test cases.</p><p>Each test case consists of one line containing two integers $$$n$$$ and $$$k$$$ ($$$1 \\le n \\le 150$$$, $$$0 \\le k \\le 9$$$). </p>",
    "outputSpecification": "<p>For each test case, print one integer without leading zeroes. If there is no such $$$x$$$ that $$$f(x) + f(x + 1) + \\dots + f(x + k) = n$$$, print $$$-1$$$; otherwise, print the minimum $$$x$$$ meeting that constraint.</p>",
    "samples": [
        {
            "input": "\n7\n1 0\n1 1\n42 7\n13 7\n99 1\n99 0\n99 2\n",
            "output": "\n1\n0\n4\n-1\n599998\n99999999999\n7997\n"
        }
    ],
    "note": null,
    "contestId": 1373,
    "index": "E",
    "name": "Sum of Digits",
    "type": "PROGRAMMING",
    "tags": [
        "brute force",
        "constructive algorithms",
        "dp",
        "greedy"
    ],
    "solvedCount": 2705
}