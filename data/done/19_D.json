{
    "title": "D. Points",
    "timeLimit": {
        "value": 2.0,
        "unit": "seconds"
    },
    "memoryLimit": {
        "value": 256.0,
        "unit": "megabytes"
    },
    "statement": "<p>Pete and Bob invented a new interesting game. Bob takes a sheet of paper and locates a Cartesian coordinate system on it as follows: point <span class=\"tex-span\">(0,\u20090)</span> is located in the bottom-left corner, <span class=\"tex-span\"><i>Ox</i></span> axis is directed right, <span class=\"tex-span\"><i>Oy</i></span> axis is directed up. Pete gives Bob requests of three types: </p><ul> <li> <span class=\"tex-font-style-tt\">add x y</span> \u2014 on the sheet of paper Bob marks a point with coordinates <span class=\"tex-span\">(<i>x</i>,\u2009<i>y</i>)</span>. For each request of this type it's guaranteed that point <span class=\"tex-span\">(<i>x</i>,\u2009<i>y</i>)</span> is not yet marked on Bob's sheet at the time of the request. </li><li> <span class=\"tex-font-style-tt\">remove x y</span> \u2014 on the sheet of paper Bob erases the previously marked point with coordinates <span class=\"tex-span\">(<i>x</i>,\u2009<i>y</i>)</span>. For each request of this type it's guaranteed that point <span class=\"tex-span\">(<i>x</i>,\u2009<i>y</i>)</span> is already marked on Bob's sheet at the time of the request. </li><li> <span class=\"tex-font-style-tt\">find x y</span> \u2014 on the sheet of paper Bob finds all the marked points, lying strictly above and strictly to the right of point <span class=\"tex-span\">(<i>x</i>,\u2009<i>y</i>)</span>. Among these points Bob chooses the leftmost one, if it is not unique, he chooses the bottommost one, and gives its coordinates to Pete. </li></ul><p>Bob managed to answer the requests, when they were 10, 100 or 1000, but when their amount grew up to <span class=\"tex-span\">2\u00b710<sup class=\"upper-index\">5</sup></span>, Bob failed to cope. Now he needs a program that will answer all Pete's requests. Help Bob, please!</p>",
    "inputSpecification": "<p>The first input line contains number <span class=\"tex-span\"><i>n</i></span> (<span class=\"tex-span\">1\u2009\u2264\u2009<i>n</i>\u2009\u2264\u20092\u00b710<sup class=\"upper-index\">5</sup></span>) \u2014 amount of requests. Then there follow <span class=\"tex-span\"><i>n</i></span> lines \u2014 descriptions of the requests. <span class=\"tex-font-style-tt\">add x y</span> describes the request to add a point, <span class=\"tex-font-style-tt\">remove x y</span> \u2014 the request to erase a point, <span class=\"tex-font-style-tt\">find x y</span> \u2014 the request to find the bottom-left point. All the coordinates in the input file are non-negative and don't exceed <span class=\"tex-span\">10<sup class=\"upper-index\">9</sup></span>.</p>",
    "outputSpecification": "<p>For each request of type <span class=\"tex-font-style-tt\">find x y</span> output in a separate line the answer to it \u2014 coordinates of the bottommost among the leftmost marked points, lying strictly above and to the right of point <span class=\"tex-span\">(<i>x</i>,\u2009<i>y</i>)</span>. If there are no points strictly above and to the right of point <span class=\"tex-span\">(<i>x</i>,\u2009<i>y</i>)</span>, output <span class=\"tex-font-style-tt\">-1</span>.</p>",
    "samples": [
        {
            "input": "7<br/>add 1 1<br/>add 3 4<br/>find 0 0<br/>remove 1 1<br/>find 0 0<br/>add 1 1<br/>find 0 0<br/>",
            "output": "1 1<br/>3 4<br/>1 1<br/>"
        },
        {
            "input": "13<br/>add 5 5<br/>add 5 6<br/>add 5 7<br/>add 6 5<br/>add 6 6<br/>add 6 7<br/>add 7 5<br/>add 7 6<br/>add 7 7<br/>find 6 6<br/>remove 7 7<br/>find 6 6<br/>find 4 4<br/>",
            "output": "7 7<br/>-1<br/>5 5<br/>"
        }
    ],
    "note": null,
    "contestId": 19,
    "index": "D",
    "name": "Points",
    "type": "PROGRAMMING",
    "tags": [
        "data structures"
    ],
    "solvedCount": 2170
}