{
    "title": "D. Something with XOR Queries",
    "timeLimit": {
        "value": 2.0,
        "unit": "seconds"
    },
    "memoryLimit": {
        "value": 256.0,
        "unit": "megabytes"
    },
    "statement": "<p><span class=\"tex-font-style-it\">This is an interactive problem.</span></p><p>Jury has hidden a permutation <span class=\"tex-span\"><i>p</i></span> of integers from <span class=\"tex-span\">0</span> to <span class=\"tex-span\"><i>n</i>\u2009-\u20091</span>. You know only the length <span class=\"tex-span\"><i>n</i></span>. Remind that in permutation all integers are distinct.</p><p>Let <span class=\"tex-span\"><i>b</i></span> be the inverse permutation for <span class=\"tex-span\"><i>p</i></span>, i.e. <span class=\"tex-span\"><i>p</i><sub class=\"lower-index\"><i>b</i><sub class=\"lower-index\"><i>i</i></sub></sub>\u2009=\u2009<i>i</i></span> for all <span class=\"tex-span\"><i>i</i></span>. The only thing you can do is to ask <span class=\"tex-font-style-tt\">xor</span> of elements <span class=\"tex-span\"><i>p</i><sub class=\"lower-index\"><i>i</i></sub></span> and <span class=\"tex-span\"><i>b</i><sub class=\"lower-index\"><i>j</i></sub></span>, printing two indices <span class=\"tex-span\"><i>i</i></span> and <span class=\"tex-span\"><i>j</i></span> (not necessarily distinct). As a result of the query with indices <span class=\"tex-span\"><i>i</i></span> and <span class=\"tex-span\"><i>j</i></span> you'll get the value <img align=\"middle\" class=\"tex-formula\" src=\"https://espresso.codeforces.com/5dae53b8ed0e62c9af6c21130fc022b384e359ff.png\" style=\"max-width: 100.0%;max-height: 100.0%;\"/>, where <img align=\"middle\" class=\"tex-formula\" src=\"https://espresso.codeforces.com/c4b7092c0f7ce6535f2574569c98f7b3c2fe2c5f.png\" style=\"max-width: 100.0%;max-height: 100.0%;\"/> denotes the <span class=\"tex-font-style-tt\">xor</span> operation. You can find the description of <span class=\"tex-font-style-tt\">xor</span> operation in notes.</p><p>Note that some permutations can remain indistinguishable from the hidden one, even if you make all possible <span class=\"tex-span\"><i>n</i><sup class=\"upper-index\">2</sup></span> queries. You have to compute the number of permutations indistinguishable from the hidden one, and print one of such permutations, making no more than <span class=\"tex-span\">2<i>n</i></span> queries.</p><p>The hidden permutation does not depend on your queries.</p>",
    "inputSpecification": "<p>The first line contains single integer <span class=\"tex-span\"><i>n</i></span> (<span class=\"tex-span\">1\u2009\u2264\u2009<i>n</i>\u2009\u2264\u20095000</span>) \u2014 the length of the hidden permutation. You should read this integer first.</p>",
    "outputSpecification": "<p>When your program is ready to print the answer, print three lines.</p><p>In the first line print \"<span class=\"tex-font-style-tt\">!</span>\".</p><p>In the second line print single integer <span class=\"tex-span\"><i>answers</i>_<i>cnt</i></span>\u00a0\u2014 the number of permutations indistinguishable from the hidden one, including the hidden one. </p><p>In the third line print <span class=\"tex-span\"><i>n</i></span> integers <span class=\"tex-span\"><i>p</i><sub class=\"lower-index\">0</sub>,\u2009<i>p</i><sub class=\"lower-index\">1</sub>,\u2009...,\u2009<i>p</i><sub class=\"lower-index\"><i>n</i>\u2009-\u20091</sub></span> (<span class=\"tex-span\">0\u2009\u2264\u2009<i>p</i><sub class=\"lower-index\"><i>i</i></sub>\u2009&lt;\u2009<i>n</i></span>, all <span class=\"tex-span\"><i>p</i><sub class=\"lower-index\"><i>i</i></sub></span> should be distinct)\u00a0\u2014 one of the permutations indistinguishable from the hidden one.</p><p>Your program should terminate after printing the answer.</p>",
    "samples": [
        {
            "input": "3<br/>0<br/>0<br/>3<br/>2<br/>3<br/>2",
            "output": "? 0 0<br/>? 1 1<br/>? 1 2<br/>? 0 2<br/>? 2 1<br/>? 2 0<br/>!<br/>1<br/>0 1 2"
        },
        {
            "input": "4<br/>2<br/>3<br/>2<br/>0<br/>2<br/>3<br/>2<br/>0",
            "output": "? 0 1<br/>? 1 2<br/>? 2 3<br/>? 3 3<br/>? 3 2<br/>? 2 1<br/>? 1 0<br/>? 0 0<br/>!<br/>2<br/>3 1 2 0"
        }
    ],
    "note": "<p><span class=\"tex-font-style-tt\">xor</span> operation, or bitwise exclusive OR, is an operation performed over two integers, in which the <span class=\"tex-span\"><i>i</i></span>-th digit in binary representation of the result is equal to <span class=\"tex-span\">1</span> if and only if exactly one of the two integers has the <span class=\"tex-span\"><i>i</i></span>-th digit in binary representation equal to <span class=\"tex-span\">1</span>. For more information, see <a href=\"https://en.wikipedia.org/wiki/Bitwise_operation#XOR\">here</a>.</p><p>In the first example <span class=\"tex-span\"><i>p</i>\u2009=\u2009[0,\u20091,\u20092]</span>, thus <span class=\"tex-span\"><i>b</i>\u2009=\u2009[0,\u20091,\u20092]</span>, the values <img align=\"middle\" class=\"tex-formula\" src=\"https://espresso.codeforces.com/5dae53b8ed0e62c9af6c21130fc022b384e359ff.png\" style=\"max-width: 100.0%;max-height: 100.0%;\"/> are correct for the given <span class=\"tex-span\"><i>i</i>,\u2009<i>j</i></span>. There are no other permutations that give the same answers for the given queries.</p><p>The answers for the queries are: </p><ul> <li> <img align=\"middle\" class=\"tex-formula\" src=\"https://espresso.codeforces.com/b36cf4ccf629eaa3a225cda06a5697eb030eb4d7.png\" style=\"max-width: 100.0%;max-height: 100.0%;\"/>, </li><li> <img align=\"middle\" class=\"tex-formula\" src=\"https://espresso.codeforces.com/88e848d2e69ecfb3b8c8d63fdc8949c7cc1e9f28.png\" style=\"max-width: 100.0%;max-height: 100.0%;\"/>, </li><li> <img align=\"middle\" class=\"tex-formula\" src=\"https://espresso.codeforces.com/233e40a031e99efe33bdf68f4a383163a23e1e7b.png\" style=\"max-width: 100.0%;max-height: 100.0%;\"/>, </li><li> <img align=\"middle\" class=\"tex-formula\" src=\"https://espresso.codeforces.com/3ec81fca9911a6bde9c2c7cae6c189514105085f.png\" style=\"max-width: 100.0%;max-height: 100.0%;\"/>, </li><li> <img align=\"middle\" class=\"tex-formula\" src=\"https://espresso.codeforces.com/be5d5595e56564765e3db6b865de2219cdadadeb.png\" style=\"max-width: 100.0%;max-height: 100.0%;\"/>, </li><li> <img align=\"middle\" class=\"tex-formula\" src=\"https://espresso.codeforces.com/3355af6093e240986c338bf13071b479e2604ca9.png\" style=\"max-width: 100.0%;max-height: 100.0%;\"/>. </li></ul><p>In the second example <span class=\"tex-span\"><i>p</i>\u2009=\u2009[3,\u20091,\u20092,\u20090]</span>, and <span class=\"tex-span\"><i>b</i>\u2009=\u2009[3,\u20091,\u20092,\u20090]</span>, the values <img align=\"middle\" class=\"tex-formula\" src=\"https://espresso.codeforces.com/5dae53b8ed0e62c9af6c21130fc022b384e359ff.png\" style=\"max-width: 100.0%;max-height: 100.0%;\"/> match for all pairs <span class=\"tex-span\"><i>i</i>,\u2009<i>j</i></span>. But there is one more suitable permutation <span class=\"tex-span\"><i>p</i>\u2009=\u2009[0,\u20092,\u20091,\u20093]</span>, <span class=\"tex-span\"><i>b</i>\u2009=\u2009[0,\u20092,\u20091,\u20093]</span> that matches all <span class=\"tex-span\"><i>n</i><sup class=\"upper-index\">2</sup></span> possible queries as well. All other permutations do not match even the shown queries.</p>",
    "contestId": 870,
    "index": "D",
    "name": "Something with XOR Queries",
    "type": "PROGRAMMING",
    "tags": [
        "brute force",
        "interactive",
        "probabilities"
    ],
    "solvedCount": 1198
}