{
    "title": "A. Tit for Tat",
    "timeLimit": {
        "value": 1.0,
        "unit": "second"
    },
    "memoryLimit": {
        "value": 256.0,
        "unit": "megabytes"
    },
    "statement": "<p>Given an array $$$a$$$ of length $$$n$$$, you can do at most $$$k$$$ operations of the following type on it:</p><ul> <li> choose $$$2$$$ different elements in the array, add $$$1$$$ to the first, and subtract $$$1$$$ from the second. However, all the elements of $$$a$$$ have to remain non-negative after this operation. </li></ul><p>What is lexicographically the smallest array you can obtain?</p><p>An array $$$x$$$ is <a href=\"https://en.wikipedia.org/wiki/Lexicographical_order\">lexicographically smaller</a> than an array $$$y$$$ if there exists an index $$$i$$$ such that $$$x_i&lt;y_i$$$, and $$$x_j=y_j$$$ for all $$$1 \\le j &lt; i$$$. Less formally, at the first index $$$i$$$ in which they differ, $$$x_i&lt;y_i$$$.</p>",
    "inputSpecification": "<p>The first line contains an integer $$$t$$$ ($$$1 \\le t \\le 20$$$)\u00a0\u2013 the number of test cases you need to solve.</p><p>The first line of each test case contains $$$2$$$ integers $$$n$$$ and $$$k$$$ ($$$2 \\le n \\le 100$$$, $$$1 \\le k \\le 10000$$$)\u00a0\u2014 the number of elements in the array and the maximum number of operations you can make.</p><p>The second line contains $$$n$$$ space-separated integers $$$a_1$$$, $$$a_2$$$, $$$\\ldots$$$, $$$a_{n}$$$ ($$$0 \\le a_i \\le 100$$$)\u00a0\u2014 the elements of the array $$$a$$$.</p>",
    "outputSpecification": "<p>For each test case, print the lexicographically smallest array you can obtain after at most $$$k$$$ operations.</p>",
    "samples": [
        {
            "input": "\n2\n3 1\n3 1 4\n2 10\n1 0\n",
            "output": "\n2 1 5 \n0 1 \n"
        }
    ],
    "note": "<p>In the second test case, we start by subtracting $$$1$$$ from the first element and adding $$$1$$$ to the second. Then, we can't get any lexicographically smaller arrays, because we can't make any of the elements negative.</p>",
    "contestId": 1516,
    "index": "A",
    "name": "Tit for Tat",
    "type": "PROGRAMMING",
    "tags": [
        "greedy"
    ],
    "solvedCount": 23183
}