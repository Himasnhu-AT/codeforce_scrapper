{
    "title": "C. Compressed Bracket Sequence",
    "timeLimit": {
        "value": 1.0,
        "unit": "second"
    },
    "memoryLimit": {
        "value": 256.0,
        "unit": "megabytes"
    },
    "statement": "<center> <img class=\"tex-graphics\" height=\"302px\" src=\"https://espresso.codeforces.com/4dacc2b6c600f0d295a93deebd87f431174eec7c.png\" style=\"max-width: 100.0%;max-height: 100.0%;\" width=\"454px\"/> </center><p>William has a favorite bracket sequence. Since his favorite sequence is quite big he provided it to you as a sequence of positive integers $$$c_1, c_2, \\dots, c_n$$$ where $$$c_i$$$ is the number of consecutive brackets \"<span class=\"tex-font-style-tt\">(</span>\" if $$$i$$$ is an odd number or the number of consecutive brackets \"<span class=\"tex-font-style-tt\">)</span>\" if $$$i$$$ is an even number.</p><p>For example for a bracket sequence \"<span class=\"tex-font-style-tt\">((())()))</span>\" a corresponding sequence of numbers is $$$[3, 2, 1, 3]$$$.</p><p>You need to find the total number of continuous subsequences (subsegments) $$$[l, r]$$$ ($$$l \\le r$$$) of the original bracket sequence, which are regular bracket sequences.</p><p>A bracket sequence is called regular if it is possible to obtain correct arithmetic expression by inserting characters \"<span class=\"tex-font-style-tt\">+</span>\" and \"<span class=\"tex-font-style-tt\">1</span>\" into this sequence. For example, sequences \"<span class=\"tex-font-style-tt\">(())()</span>\", \"<span class=\"tex-font-style-tt\">()</span>\" and \"<span class=\"tex-font-style-tt\">(()(()))</span>\" are regular, while \"<span class=\"tex-font-style-tt\">)(</span>\", \"<span class=\"tex-font-style-tt\">(()</span>\" and \"<span class=\"tex-font-style-tt\">(()))(</span>\" are not.</p>",
    "inputSpecification": "<p>The first line contains a single integer $$$n$$$ $$$(1 \\le n \\le 1000)$$$, the size of the compressed sequence.</p><p>The second line contains a sequence of integers $$$c_1, c_2, \\dots, c_n$$$ $$$(1 \\le c_i \\le 10^9)$$$, the compressed sequence.</p>",
    "outputSpecification": "<p>Output a single integer\u00a0\u2014 the total number of subsegments of the original bracket sequence, which are regular bracket sequences.</p><p>It can be proved that the answer fits in the signed 64-bit integer data type.</p>",
    "samples": [
        {
            "input": "\n5\n4 1 2 3 1\n",
            "output": "\n5\n"
        },
        {
            "input": "\n6\n1 3 2 1 2 4\n",
            "output": "\n6\n"
        },
        {
            "input": "\n6\n1 1 1 1 2 2\n",
            "output": "\n7\n"
        }
    ],
    "note": "<p>In the first example a sequence <span class=\"tex-font-style-tt\">(((()(()))(</span> is described. This bracket sequence contains $$$5$$$ subsegments which form regular bracket sequences:</p><ol> <li> Subsequence from the $$$3$$$rd to $$$10$$$th character: <span class=\"tex-font-style-tt\">(()(()))</span> </li><li> Subsequence from the $$$4$$$th to $$$5$$$th character: <span class=\"tex-font-style-tt\">()</span> </li><li> Subsequence from the $$$4$$$th to $$$9$$$th character: <span class=\"tex-font-style-tt\">()(())</span> </li><li> Subsequence from the $$$6$$$th to $$$9$$$th character: <span class=\"tex-font-style-tt\">(())</span> </li><li> Subsequence from the $$$7$$$th to $$$8$$$th character: <span class=\"tex-font-style-tt\">()</span> </li></ol><p>In the second example a sequence <span class=\"tex-font-style-tt\">()))(()(())))</span> is described.</p><p>In the third example a sequence <span class=\"tex-font-style-tt\">()()(())</span> is described.</p>",
    "contestId": 1556,
    "index": "C",
    "name": "Compressed Bracket Sequence",
    "type": "PROGRAMMING",
    "tags": [
        "brute force",
        "implementation"
    ],
    "solvedCount": 5682
}