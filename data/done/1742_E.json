{
    "title": "E. Scuza",
    "timeLimit": {
        "value": 3.0,
        "unit": "seconds"
    },
    "memoryLimit": {
        "value": 256.0,
        "unit": "megabytes"
    },
    "statement": "<p>Timur has a stairway with $$$n$$$ steps. The $$$i$$$-th step is $$$a_i$$$ meters higher than its predecessor. The first step is $$$a_1$$$ meters higher than the ground, and the ground starts at $$$0$$$ meters. </p><center> <img class=\"tex-graphics\" src=\"https://espresso.codeforces.com/94f41815770eb18ce02522a8057553508b54069f.png\" style=\"max-width: 100.0%;max-height: 100.0%;\"/> <span class=\"tex-font-size-small\">The stairs for the first test case.</span> </center><p>Timur has $$$q$$$ questions, each denoted by an integer $$$k_1, \\dots, k_q$$$. For each question $$$k_i$$$, you have to print the maximum possible height Timur can achieve by climbing the steps if his legs are of length $$$k_i$$$. Timur can only climb the $$$j$$$-th step if his legs are of length at least $$$a_j$$$. In other words, $$$k_i \\geq a_j$$$ for each step $$$j$$$ climbed.</p><p>Note that you should answer each question independently.</p>",
    "inputSpecification": "<p>The first line contains a single integer $$$t$$$ ($$$1 \\leq t \\leq 100$$$)\u00a0\u2014 the number of test cases.</p><p>The first line of each test case contains two integers $$$n, q$$$ ($$$1 \\leq n, q \\leq 2\\cdot10^5$$$)\u00a0\u2014 the number of steps and the number of questions, respectively.</p><p>The second line of each test case contains $$$n$$$ integers ($$$1 \\leq a_i \\leq 10^9$$$)\u00a0\u2014 the height of the steps.</p><p>The third line of each test case contains $$$q$$$ integers ($$$0 \\leq k_i \\leq 10^9$$$)\u00a0\u2014 the numbers for each question.</p><p>It is guaranteed that the sum of $$$n$$$ does not exceed $$$2\\cdot10^5$$$, and the sum of $$$q$$$ does not exceed $$$2\\cdot10^5$$$.</p>",
    "outputSpecification": "<p>For each test case, output a single line containing $$$q$$$ integers, the answer for each question.</p><p>Please note, that the answer for some questions won't fit into 32-bit integer type, so you should use at least 64-bit integer type in your programming language (like <span class=\"tex-font-style-tt\">long long</span> for C++).</p>",
    "samples": [
        {
            "input": "\n<div class=\"test-example-line test-example-line-even test-example-line-0\">3</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">4 5</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">1 2 1 5</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">1 2 4 9 10</div><div class=\"test-example-line test-example-line-even test-example-line-2\">2 2</div><div class=\"test-example-line test-example-line-even test-example-line-2\">1 1</div><div class=\"test-example-line test-example-line-even test-example-line-2\">0 1</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">3 1</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">1000000000 1000000000 1000000000</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">1000000000</div>",
            "output": "\n1 4 4 9 9 \n0 2 \n3000000000 \n"
        }
    ],
    "note": "<p>Consider the first test case, pictured in the statement. </p><ul> <li> If Timur's legs have length $$$1$$$, then he can only climb stair $$$1$$$, so the highest he can reach is $$$1$$$ meter. </li><li> If Timur's legs have length $$$2$$$ or $$$4$$$, then he can only climb stairs $$$1$$$, $$$2$$$, and $$$3$$$, so the highest he can reach is $$$1+2+1=4$$$ meters. </li><li> If Timur's legs have length $$$9$$$ or $$$10$$$, then he can climb the whole staircase, so the highest he can reach is $$$1+2+1+5=9$$$ meters. </li></ul> In the first question of the second test case, Timur has no legs, so he cannot go up even a single step. <span class=\"tex-font-style-tt\">:(</span>",
    "contestId": 1742,
    "index": "E",
    "name": "Scuza",
    "type": "PROGRAMMING",
    "tags": [
        "binary search",
        "greedy",
        "math"
    ],
    "solvedCount": 22621
}