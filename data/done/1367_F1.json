{
    "title": "F1. Flying Sort (Easy Version)",
    "timeLimit": {
        "value": 2.0,
        "unit": "seconds"
    },
    "memoryLimit": {
        "value": 256.0,
        "unit": "megabytes"
    },
    "statement": "<p><span class=\"tex-font-style-bf\">This is an easy version of the problem. In this version, all numbers in the given array are distinct and the constraints on $$$n$$$ are less than in the hard version of the problem.</span></p><p>You are given an array $$$a$$$ of $$$n$$$ integers <span class=\"tex-font-style-bf\">(there are no equals elements in the array)</span>. You can perform the following operations on array elements:</p><ol> <li> choose any index $$$i$$$ ($$$1 \\le i \\le n$$$) and move the element $$$a[i]$$$ to the <span class=\"tex-font-style-bf\">begin</span> of the array; </li><li> choose any index $$$i$$$ ($$$1 \\le i \\le n$$$) and move the element $$$a[i]$$$ to the <span class=\"tex-font-style-bf\">end</span> of the array. </li></ol><p>For example, if $$$n = 5$$$, $$$a = [4, 7, 2, 3, 9]$$$, then the following sequence of operations can be performed: </p><ul> <li> after performing the operation of the first type to the second element, the array $$$a$$$ will become $$$[7, 4, 2, 3, 9]$$$; </li><li> after performing the operation of the second type to the second element, the array $$$a$$$ will become $$$[7, 2, 3, 9, 4]$$$. </li></ul><p>You can perform operations of any type any number of times in any order.</p><p>Find the minimum total number of operations of the first and second type that will make the $$$a$$$ array sorted in non-decreasing order. In other words, what is the minimum number of operations that must be performed so the array satisfies the inequalities $$$a[1] \\le a[2] \\le \\ldots \\le a[n]$$$.</p>",
    "inputSpecification": "<p>The first line contains a single integer $$$t$$$ ($$$1 \\le t \\le 100$$$)\u00a0\u2014 the number of test cases in the test. Then $$$t$$$ test cases follow.</p><p>Each test case starts with a line containing an integer $$$n$$$ ($$$1 \\le n \\le 3000$$$)\u00a0\u2014 length of the array $$$a$$$.</p><p>Then follow $$$n$$$ integers $$$a_1, a_2, \\ldots, a_n$$$ ($$$0 \\le a_i \\le 10^9$$$)\u00a0\u2014 an array that needs to be sorted by the given operations. <span class=\"tex-font-style-bf\">All numbers in the given array are distinct</span>.</p><p>The sum of $$$n$$$ for all test cases in one test does not exceed $$$3000$$$.</p>",
    "outputSpecification": "<p>For each test case output one integer\u00a0\u2014 the minimum total number of operations of the first and second type, which will make the array sorted in non-decreasing order.</p>",
    "samples": [
        {
            "input": "\n4\n5\n4 7 2 3 9\n5\n3 5 8 1 7\n5\n1 4 5 7 12\n4\n0 2 1 3\n",
            "output": "\n2\n2\n0\n2\n"
        }
    ],
    "note": "<p>In the first test case, you first need to move <span class=\"tex-font-style-tt\">3</span>, and then <span class=\"tex-font-style-tt\">2</span> to the beginning of the array. Therefore, the desired sequence of operations: $$$[4, 7, 2, 3, 9] \\rightarrow [3, 4, 7, 2, 9] \\rightarrow [2, 3, 4, 7, 9]$$$.</p><p>In the second test case, you need to move the <span class=\"tex-font-style-tt\">1</span> to the beginning of the array, and the <span class=\"tex-font-style-tt\">8</span>\u00a0\u2014 to the end. Therefore, the desired sequence of operations: $$$[3, 5, 8, 1, 7] \\rightarrow [1, 3, 5, 8, 7] \\rightarrow [1, 3, 5, 7, 8]$$$.</p><p>In the third test case, the array is already sorted.</p>",
    "contestId": 1367,
    "index": "F1",
    "name": "Flying Sort (Easy Version)",
    "type": "PROGRAMMING",
    "tags": [
        "dp",
        "greedy",
        "two pointers"
    ],
    "solvedCount": 3008
}