{
    "title": "C. Beautiful Triple Pairs",
    "timeLimit": {
        "value": 4.0,
        "unit": "seconds"
    },
    "memoryLimit": {
        "value": 256.0,
        "unit": "megabytes"
    },
    "statement": "<p>Polycarp was given an array $$$a$$$ of $$$n$$$ integers. He really likes triples of numbers, so for each $$$j$$$ ($$$1 \\le j \\le n - 2$$$) he wrote down a triple of elements $$$[a_j, a_{j + 1}, a_{j + 2}]$$$.</p><p>Polycarp considers a pair of triples $$$b$$$ and $$$c$$$ <span class=\"tex-font-style-it\">beautiful</span> if they differ in exactly one position, that is, one of the following conditions is satisfied:</p><ul> <li> $$$b_1 \\ne c_1$$$ and $$$b_2 = c_2$$$ and $$$b_3 = c_3$$$; </li><li> $$$b_1 = c_1$$$ and $$$b_2 \\ne c_2$$$ and $$$b_3 = c_3$$$; </li><li> $$$b_1 = c_1$$$ and $$$b_2 = c_2$$$ and $$$b_3 \\ne c_3$$$. </li></ul><p>Find the number of <span class=\"tex-font-style-it\">beautiful</span> pairs of triples among the written triples $$$[a_j, a_{j + 1}, a_{j + 2}]$$$.</p>",
    "inputSpecification": "<p>The first line contains a single integer $$$t$$$ ($$$1 \\le t \\le 10^4$$$)\u00a0\u2014 the number of test cases.</p><p>The first line of each test case contains a single integer $$$n$$$ ($$$3 \\le n \\le 2 \\cdot 10^5$$$)\u00a0\u2014 the length of the array $$$a$$$.</p><p>The second line of each test case contains $$$n$$$ integers $$$a_1, a_2, \\dots, a_n$$$ ($$$1 \\le a_i \\le 10^6$$$)\u00a0\u2014 the elements of the array.</p><p>It is guaranteed that the sum of the values of $$$n$$$ for all test cases in the test does not exceed $$$2 \\cdot 10^5$$$.</p>",
    "outputSpecification": "<p>For each test case, output a single integer\u00a0\u2014 the number of <span class=\"tex-font-style-it\">beautiful</span> pairs of triples among the pairs of the form $$$[a_j, a_{j + 1}, a_{j + 2}]$$$.</p><p>Note that the answer may not fit into 32-bit data types.</p>",
    "samples": [
        {
            "input": "\n<div class=\"test-example-line test-example-line-even test-example-line-0\">8</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">5</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">3 2 2 2 3</div><div class=\"test-example-line test-example-line-even test-example-line-2\">5</div><div class=\"test-example-line test-example-line-even test-example-line-2\">1 2 1 2 1</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">8</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">1 2 3 2 2 3 4 2</div><div class=\"test-example-line test-example-line-even test-example-line-4\">4</div><div class=\"test-example-line test-example-line-even test-example-line-4\">2 1 1 1</div><div class=\"test-example-line test-example-line-odd test-example-line-5\">8</div><div class=\"test-example-line test-example-line-odd test-example-line-5\">2 1 1 2 1 1 1 1</div><div class=\"test-example-line test-example-line-even test-example-line-6\">7</div><div class=\"test-example-line test-example-line-even test-example-line-6\">2 1 1 1 1 1 1</div><div class=\"test-example-line test-example-line-odd test-example-line-7\">6</div><div class=\"test-example-line test-example-line-odd test-example-line-7\">2 1 1 1 1 1</div><div class=\"test-example-line test-example-line-even test-example-line-8\">5</div><div class=\"test-example-line test-example-line-even test-example-line-8\">2 1 1 1 1</div>",
            "output": "\n2\n0\n3\n1\n8\n4\n3\n2\n"
        }
    ],
    "note": "<p>In the first example, $$$a = [3, 2, 2, 2, 3]$$$, Polycarp will write the following triples: </p><ol> <li> $$$[3, 2, 2]$$$; </li><li> $$$[2, 2, 2]$$$; </li><li> $$$[2, 2, 3]$$$. </li></ol> The beautiful pairs are triple $$$1$$$ with triple $$$2$$$ and triple $$$2$$$ with triple $$$3$$$.<p>In the third example, $$$a = [1, 2, 3, 2, 2, 3, 4, 2]$$$, Polycarp will write the following triples: </p><ol> <li> $$$[1, 2, 3]$$$; </li><li> $$$[2, 3, 2]$$$; </li><li> $$$[3, 2, 2]$$$; </li><li> $$$[2, 2, 3]$$$; </li><li> $$$[2, 3, 4]$$$; </li><li> $$$[3, 4, 2]$$$; </li></ol> The beautiful pairs are triple $$$1$$$ with triple $$$4$$$, triple $$$2$$$ with triple $$$5$$$, and triple $$$3$$$ with triple $$$6$$$.",
    "contestId": 1974,
    "index": "C",
    "name": "Beautiful Triple Pairs",
    "type": "PROGRAMMING",
    "tags": [
        "combinatorics",
        "data structures"
    ],
    "solvedCount": 13092
}