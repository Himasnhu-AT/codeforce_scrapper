{
    "title": "E. Min-Sum-Max",
    "timeLimit": {
        "value": 5.0,
        "unit": "seconds"
    },
    "memoryLimit": {
        "value": 1024.0,
        "unit": "megabytes"
    },
    "statement": "<p>Tom is waiting for his results of Zhongkao examination. To ease the tense atmosphere, his friend, Daniel, decided to play a game with him. This game is called \"<span class=\"tex-font-style-it\">Divide the Array</span>\".</p><p>The game is about the array $$$a$$$ consisting of $$$n$$$ integers. Denote $$$[l,r]$$$ as the subsegment consisting of integers $$$a_l,a_{l+1},\\ldots,a_r$$$.</p><p>Tom will divide the array into contiguous subsegments $$$[l_1,r_1],[l_2,r_2],\\ldots,[l_m,r_m]$$$, such that each integer is in exactly one subsegment. More formally:</p><ul> <li> For all $$$1\\le i\\le m$$$, $$$1\\le l_i\\le r_i\\le n$$$; </li><li> $$$l_1=1$$$, $$$r_m=n$$$; </li><li> For all $$$1&lt; i\\le m$$$, $$$l_i=r_{i-1}+1$$$. </li></ul><p>Denote $$$s_{i}=\\sum_{k=l_i}^{r_i} a_k$$$, that is, $$$s_i$$$ is the sum of integers in the $$$i$$$-th subsegment. For all $$$1\\le i\\le j\\le m$$$, the following condition must hold:</p><p>$$$$$$ \\min_{i\\le k\\le j} s_k \\le \\sum_{k=i}^j s_k \\le \\max_{i\\le k\\le j} s_k. $$$$$$</p><p>Tom believes that the more subsegments the array $$$a$$$ is divided into, the better results he will get. So he asks Daniel to find the <span class=\"tex-font-style-bf\">maximum</span> number of subsegments among all possible ways to divide the array $$$a$$$. You have to help him find it.</p>",
    "inputSpecification": "<p>The first line of input contains a single integer $$$t$$$ ($$$1\\le t\\le 50$$$) \u2014 the number of test cases. The description of test cases follows.</p><p>The first line of each test case contains a single integer $$$n$$$ ($$$1\\le n\\le 300$$$) \u2014 the length of the array $$$a$$$.</p><p>The second line of each test case contains $$$n$$$ integers $$$a_1,a_2,\\ldots,a_n$$$ ($$$-10^9\\le a_i\\le 10^9$$$) \u2014 the elements of the array $$$a$$$.</p><p>It is guaranteed that the sum of $$$n$$$ over all test cases does not exceed $$$1000$$$.</p>",
    "outputSpecification": "<p>For each test case, output a single integer \u2014 the maximum number of subsegments among all possible ways to divide the array $$$a$$$.</p>",
    "samples": [
        {
            "input": "\n<div class=\"test-example-line test-example-line-even test-example-line-0\">8</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">3</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">-1 5 4</div><div class=\"test-example-line test-example-line-even test-example-line-2\">2</div><div class=\"test-example-line test-example-line-even test-example-line-2\">2023 2043</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">6</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">1 4 7 -1 5 -4</div><div class=\"test-example-line test-example-line-even test-example-line-4\">5</div><div class=\"test-example-line test-example-line-even test-example-line-4\">-4 0 3 -18 10</div><div class=\"test-example-line test-example-line-odd test-example-line-5\">1</div><div class=\"test-example-line test-example-line-odd test-example-line-5\">998244853</div><div class=\"test-example-line test-example-line-even test-example-line-6\">10</div><div class=\"test-example-line test-example-line-even test-example-line-6\">-4 2 5 -10 4 8 2 9 -15 7</div><div class=\"test-example-line test-example-line-odd test-example-line-7\">7</div><div class=\"test-example-line test-example-line-odd test-example-line-7\">-7 3 8 -9 -2 2 4</div><div class=\"test-example-line test-example-line-even test-example-line-8\">4</div><div class=\"test-example-line test-example-line-even test-example-line-8\">-5 5 -2 -5</div>",
            "output": "\n2\n1\n3\n2\n1\n6\n5\n3\n"
        }
    ],
    "note": "<p>In the first test case, Daniel can divide the array into $$$[-1]$$$ and $$$[5,4]$$$, and $$$s=[-1,9]$$$. It can be shown that for any $$$i=j$$$, the condition in the statement is already satisfied, and for $$$i=1,j=2$$$, we have $$$\\min(-1,9)\\le (-1)+9\\le \\max(-1,9)$$$.</p><p>In the second test case, if Daniel divides the array into $$$[2023]$$$ and $$$[2043]$$$, then for $$$i=1,j=2$$$ we have $$$2023+2043&gt;\\max(2023,2043)$$$, so the maximum number of subsegments is $$$1$$$.</p><p>In the third test case, the optimal way to divide the array is $$$[1,4,7],[-1],[5,-4]$$$.</p><p>In the fourth test case, the optimal to divide the array way is $$$[-4,0,3,-18],[10]$$$.</p><p>In the fifth test case, Daniel can only get one subsegment.</p>",
    "contestId": 1868,
    "index": "E",
    "name": "Min-Sum-Max",
    "type": "PROGRAMMING",
    "tags": [
        "constructive algorithms",
        "dp",
        "greedy"
    ],
    "solvedCount": 74
}