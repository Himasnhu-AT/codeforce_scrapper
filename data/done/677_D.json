{
    "title": "D. Vanya and Treasure",
    "timeLimit": {
        "value": 1.5,
        "unit": "seconds"
    },
    "memoryLimit": {
        "value": 256.0,
        "unit": "megabytes"
    },
    "statement": "<p>Vanya is in the palace that can be represented as a grid <span class=\"tex-span\"><i>n</i>\u2009\u00d7\u2009<i>m</i></span>. Each room contains a single chest, an the room located in the <span class=\"tex-span\"><i>i</i></span>-th row and <span class=\"tex-span\"><i>j</i></span>-th columns contains the chest of type <span class=\"tex-span\"><i>a</i><sub class=\"lower-index\"><i>ij</i></sub></span>. Each chest of type <span class=\"tex-span\"><i>x</i>\u2009\u2264\u2009<i>p</i>\u2009-\u20091</span> contains a key that can open any chest of type <span class=\"tex-span\"><i>x</i>\u2009+\u20091</span>, and all chests of type <span class=\"tex-span\">1</span> are not locked. There is exactly one chest of type <span class=\"tex-span\"><i>p</i></span> and it contains a treasure.</p><p>Vanya starts in cell <span class=\"tex-span\">(1,\u20091)</span> (top left corner). What is the minimum total distance Vanya has to walk in order to get the treasure? Consider the distance between cell <span class=\"tex-span\">(<i>r</i><sub class=\"lower-index\">1</sub>,\u2009<i>c</i><sub class=\"lower-index\">1</sub>)</span> (the cell in the row <span class=\"tex-span\"><i>r</i><sub class=\"lower-index\">1</sub></span> and column <span class=\"tex-span\"><i>c</i><sub class=\"lower-index\">1</sub></span>) and <span class=\"tex-span\">(<i>r</i><sub class=\"lower-index\">2</sub>,\u2009<i>c</i><sub class=\"lower-index\">2</sub>)</span> is equal to <span class=\"tex-span\">|<i>r</i><sub class=\"lower-index\">1</sub>\u2009-\u2009<i>r</i><sub class=\"lower-index\">2</sub>|\u2009+\u2009|<i>c</i><sub class=\"lower-index\">1</sub>\u2009-\u2009<i>c</i><sub class=\"lower-index\">2</sub>|</span>.</p>",
    "inputSpecification": "<p>The first line of the input contains three integers <span class=\"tex-span\"><i>n</i></span>, <span class=\"tex-span\"><i>m</i></span> and <span class=\"tex-span\"><i>p</i></span> (<span class=\"tex-span\">1\u2009\u2264\u2009<i>n</i>,\u2009<i>m</i>\u2009\u2264\u2009300,\u20091\u2009\u2264\u2009<i>p</i>\u2009\u2264\u2009<i>n</i>\u00b7<i>m</i></span>)\u00a0\u2014 the number of rows and columns in the table representing the palace and the number of different types of the chests, respectively.</p><p>Each of the following <span class=\"tex-span\"><i>n</i></span> lines contains <span class=\"tex-span\"><i>m</i></span> integers <span class=\"tex-span\"><i>a</i><sub class=\"lower-index\"><i>ij</i></sub></span> (<span class=\"tex-span\">1\u2009\u2264\u2009<i>a</i><sub class=\"lower-index\"><i>ij</i></sub>\u2009\u2264\u2009<i>p</i></span>)\u00a0\u2014 the types of the chests in corresponding rooms. It's guaranteed that for each <span class=\"tex-span\"><i>x</i></span> from <span class=\"tex-span\">1</span> to <span class=\"tex-span\"><i>p</i></span> there is at least one chest of this type (that is, there exists a pair of <span class=\"tex-span\"><i>r</i></span> and <span class=\"tex-span\"><i>c</i></span>, such that <span class=\"tex-span\"><i>a</i><sub class=\"lower-index\"><i>rc</i></sub>\u2009=\u2009<i>x</i></span>). Also, it's guaranteed that there is exactly one chest of type <span class=\"tex-span\"><i>p</i></span>.</p>",
    "outputSpecification": "<p>Print one integer\u00a0\u2014 the minimum possible total distance Vanya has to walk in order to get the treasure from the chest of type <span class=\"tex-span\"><i>p</i></span>.</p>",
    "samples": [
        {
            "input": "3 4 3<br/>2 1 1 1<br/>1 1 1 1<br/>2 1 1 3<br/>",
            "output": "5<br/>"
        },
        {
            "input": "3 3 9<br/>1 3 5<br/>8 9 7<br/>4 6 2<br/>",
            "output": "22<br/>"
        },
        {
            "input": "3 4 12<br/>1 2 3 4<br/>8 7 6 5<br/>9 10 11 12<br/>",
            "output": "11<br/>"
        }
    ],
    "note": null,
    "contestId": 677,
    "index": "D",
    "name": "Vanya and Treasure",
    "type": "PROGRAMMING",
    "tags": [
        "data structures",
        "dp",
        "graphs",
        "shortest paths"
    ],
    "solvedCount": 1533
}