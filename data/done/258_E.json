{
    "title": "E. Little Elephant and Tree",
    "timeLimit": {
        "value": 4.0,
        "unit": "seconds"
    },
    "memoryLimit": {
        "value": 256.0,
        "unit": "megabytes"
    },
    "statement": "<p>The Little Elephant loves trees very much, he especially loves root trees.</p><p>He's got a tree consisting of <span class=\"tex-span\"><i>n</i></span> nodes (the nodes are numbered from 1 to <span class=\"tex-span\"><i>n</i></span>), with root at node number <span class=\"tex-span\">1</span>. Each node of the tree contains some list of numbers which initially is empty. </p><p>The Little Elephant wants to apply <span class=\"tex-span\"><i>m</i></span> operations. On the <span class=\"tex-span\"><i>i</i></span>-th operation <span class=\"tex-span\">(1\u2009\u2264\u2009<i>i</i>\u2009\u2264\u2009<i>m</i>)</span> he first adds number <span class=\"tex-span\"><i>i</i></span> to lists of all nodes of a subtree with the root in node number <span class=\"tex-span\"><i>a</i><sub class=\"lower-index\"><i>i</i></sub></span>, and then he adds number <span class=\"tex-span\"><i>i</i></span> to lists of all nodes of the subtree with root in node <span class=\"tex-span\"><i>b</i><sub class=\"lower-index\"><i>i</i></sub></span>.</p><p>After applying all operations the Little Elephant wants to count for each node <span class=\"tex-span\"><i>i</i></span> number <span class=\"tex-span\"><i>c</i><sub class=\"lower-index\"><i>i</i></sub></span> \u2014 the number of integers <span class=\"tex-span\"><i>j</i></span> <span class=\"tex-span\">(1\u2009\u2264\u2009<i>j</i>\u2009\u2264\u2009<i>n</i>;\u00a0<i>j</i>\u2009\u2260\u2009<i>i</i>)</span>, such that the lists of the <span class=\"tex-span\"><i>i</i></span>-th and the <span class=\"tex-span\"><i>j</i></span>-th nodes contain at least one common number.</p><p>Help the Little Elephant, count numbers <span class=\"tex-span\"><i>c</i><sub class=\"lower-index\"><i>i</i></sub></span> for him.</p>",
    "inputSpecification": "<p>The first line contains two integers <span class=\"tex-span\"><i>n</i></span> and <span class=\"tex-span\"><i>m</i></span> <span class=\"tex-span\">(1\u2009\u2264\u2009<i>n</i>,\u2009<i>m</i>\u2009\u2264\u200910<sup class=\"upper-index\">5</sup>)</span> \u2014 the number of the tree nodes and the number of operations. </p><p>Each of the following <span class=\"tex-span\"><i>n</i>\u2009-\u20091</span> lines contains two space-separated integers, <span class=\"tex-span\"><i>u</i><sub class=\"lower-index\"><i>i</i></sub></span> and <span class=\"tex-span\"><i>v</i><sub class=\"lower-index\"><i>i</i></sub></span> <span class=\"tex-span\">(1\u2009\u2264\u2009<i>u</i><sub class=\"lower-index\"><i>i</i></sub>,\u2009<i>v</i><sub class=\"lower-index\"><i>i</i></sub>\u2009\u2264\u2009<i>n</i>,\u2009<i>u</i><sub class=\"lower-index\"><i>i</i></sub>\u2009\u2260\u2009<i>v</i><sub class=\"lower-index\"><i>i</i></sub>)</span>, that mean that there is an edge between nodes number <span class=\"tex-span\"><i>u</i><sub class=\"lower-index\"><i>i</i></sub></span> and <span class=\"tex-span\"><i>v</i><sub class=\"lower-index\"><i>i</i></sub></span>. </p><p>Each of the following <span class=\"tex-span\"><i>m</i></span> lines contains two space-separated integers, <span class=\"tex-span\"><i>a</i><sub class=\"lower-index\"><i>i</i></sub></span> and <span class=\"tex-span\"><i>b</i><sub class=\"lower-index\"><i>i</i></sub></span> <span class=\"tex-span\">(1\u2009\u2264\u2009<i>a</i><sub class=\"lower-index\"><i>i</i></sub>,\u2009<i>b</i><sub class=\"lower-index\"><i>i</i></sub>\u2009\u2264\u2009<i>n</i>,\u2009<i>a</i><sub class=\"lower-index\"><i>i</i></sub>\u2009\u2260\u2009<i>b</i><sub class=\"lower-index\"><i>i</i></sub>)</span>, that stand for the indexes of the nodes in the <span class=\"tex-span\"><i>i</i></span>-th operation.</p><p>It is guaranteed that the given graph is an undirected tree.</p>",
    "outputSpecification": "<p>In a single line print <span class=\"tex-span\"><i>n</i></span> space-separated integers \u2014 <span class=\"tex-span\"><i>c</i><sub class=\"lower-index\">1</sub>,\u2009<i>c</i><sub class=\"lower-index\">2</sub>,\u2009...,\u2009<i>c</i><sub class=\"lower-index\"><i>n</i></sub></span>.</p>",
    "samples": [
        {
            "input": "5 1<br/>1 2<br/>1 3<br/>3 5<br/>3 4<br/>2 3<br/>",
            "output": "0 3 3 3 3 "
        },
        {
            "input": "11 3<br/>1 2<br/>2 3<br/>2 4<br/>1 5<br/>5 6<br/>5 7<br/>5 8<br/>6 9<br/>8 10<br/>8 11<br/>2 9<br/>3 6<br/>2 8<br/>",
            "output": "0 6 7 6 0 2 0 5 4 5 5 "
        }
    ],
    "note": null,
    "contestId": 258,
    "index": "E",
    "name": "Little Elephant and Tree",
    "type": "PROGRAMMING",
    "tags": [
        "data structures",
        "dfs and similar",
        "trees"
    ],
    "solvedCount": 1039
}