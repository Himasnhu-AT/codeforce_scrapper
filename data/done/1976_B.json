{
    "title": "B. Increase/Decrease/Copy",
    "timeLimit": {
        "value": 2.0,
        "unit": "seconds"
    },
    "memoryLimit": {
        "value": 256.0,
        "unit": "megabytes"
    },
    "statement": "<p>You are given two integer arrays: array $$$a$$$ of length $$$n$$$ and array $$$b$$$ of length $$$n+1$$$.</p><p>You can perform the following operations any number of times in any order: </p><ul> <li> choose any element of the array $$$a$$$ and increase it by $$$1$$$; </li><li> choose any element of the array $$$a$$$ and decrease it by $$$1$$$; </li><li> choose any element of the array $$$a$$$, copy it and append the copy to the end of the array $$$a$$$. </li></ul><p>Your task is to calculate the minimum number of aforementioned operations (possibly zero) required to transform the array $$$a$$$ into the array $$$b$$$. It can be shown that under the constraints of the problem, it is always possible.</p>",
    "inputSpecification": "<p>The first line contains a single integer $$$t$$$ ($$$1 \\le t \\le 10^4$$$)\u00a0\u2014 the number of test cases.</p><p>Each test case consists of three lines:</p><ul> <li> the first line contains a single integer $$$n$$$ ($$$1 \\le n \\le 2 \\cdot 10^5$$$); </li><li> the second line contains $$$n$$$ integers $$$a_1, a_2, \\dots, a_n$$$ ($$$1 \\le a_i \\le 10^9$$$); </li><li> the third line contains $$$n + 1$$$ integers $$$b_1, b_2, \\dots, b_{n + 1}$$$ ($$$1 \\le b_i \\le 10^9$$$). </li></ul><p>Additional constraint on the input: the sum of $$$n$$$ over all test cases doesn't exceed $$$2 \\cdot 10^5$$$.</p>",
    "outputSpecification": "<p>For each test case, print a single integer\u00a0\u2014 the minimum number of operations (possibly zero) required to transform the array $$$a$$$ into the array $$$b$$$.</p>",
    "samples": [
        {
            "input": "\n<div class=\"test-example-line test-example-line-even test-example-line-0\">3</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">1</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">2</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">1 3</div><div class=\"test-example-line test-example-line-even test-example-line-2\">2</div><div class=\"test-example-line test-example-line-even test-example-line-2\">3 3</div><div class=\"test-example-line test-example-line-even test-example-line-2\">3 3 3</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">4</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">4 2 1 2</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">2 1 5 2 3</div>",
            "output": "\n3\n1\n8\n"
        }
    ],
    "note": "<p>In the first example, you can transform $$$a$$$ into $$$b$$$ as follows: $$$[2] \\rightarrow [2, 2] \\rightarrow [1, 2] \\rightarrow [1, 3]$$$.</p>",
    "contestId": 1976,
    "index": "B",
    "name": "Increase/Decrease/Copy",
    "type": "PROGRAMMING",
    "tags": [
        "greedy",
        "implementation"
    ],
    "solvedCount": 18197
}