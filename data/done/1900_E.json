{
    "title": "E. Transitive Graph",
    "timeLimit": {
        "value": 3.0,
        "unit": "seconds"
    },
    "memoryLimit": {
        "value": 256.0,
        "unit": "megabytes"
    },
    "statement": "<p>You are given a <span class=\"tex-font-style-bf\">directed</span> graph $$$G$$$ with $$$n$$$ vertices and $$$m$$$ edges between them.</p><p>Initially, graph $$$H$$$ is the same as graph $$$G$$$. Then you decided to perform the following actions: </p><ul> <li> If there exists a triple of vertices $$$a$$$, $$$b$$$, $$$c$$$ of $$$H$$$, such that there is an edge from $$$a$$$ to $$$b$$$ and an edge from $$$b$$$ to $$$c$$$, but there is no edge from $$$a$$$ to $$$c$$$, add an edge from $$$a$$$ to $$$c$$$. </li><li> Repeat the previous step as long as there are such triples. </li></ul><p>Note that the number of edges in $$$H$$$ can be up to $$$n^2$$$ after performing the actions.</p><p>You also wrote some values on vertices of graph $$$H$$$. More precisely, vertex $$$i$$$ has the value of $$$a_i$$$ written on it.</p><p>Consider a simple path consisting of $$$k$$$ <span class=\"tex-font-style-bf\">distinct</span> vertices with indexes $$$v_1, v_2, \\ldots, v_k$$$. The length of such a path is $$$k$$$. The value of that path is defined as $$$\\sum_{i = 1}^k a_{v_i}$$$.</p><p>A simple path is considered the longest if there is no other simple path in the graph with greater length.</p><p>Among all the longest simple paths in $$$H$$$, find the one with the smallest value.</p>",
    "inputSpecification": "<p>Each test contains multiple test cases. The first line contains the number of test cases $$$t$$$ ($$$1 \\le t \\le 10^4$$$). The description of the test cases follows.</p><p>The first line of each test case contains two integers $$$n$$$ and $$$m$$$ ($$$1 \\le n,m \\le 2 \\cdot 10^5$$$)\u00a0\u2014 the number of vertices and the number of edges.</p><p>The second line contains $$$n$$$ integers $$$a_1, a_2, \\ldots, a_n$$$ ($$$0 \\le a_i \\le 10^9$$$)\u00a0\u2014 the numbers written on the vertices of graph $$$H$$$.</p><p>The $$$i$$$-th of the next $$$m$$$ lines contains two integers $$$v_i$$$ and $$$u_i$$$ ($$$1 \\le v_i, u_i \\le n$$$)\u00a0\u2014 meaning that there is an edge going from vertex $$$v_i$$$ to vertex $$$u_i$$$ in graph $$$G$$$. Note that edges are directed. Also note that the graph <span class=\"tex-font-style-bf\">may have</span> self-loops and multiple edges.</p><p>It is guaranteed that neither the sum of $$$n$$$ nor the sum of $$$m$$$ over all test cases exceeds $$$2 \\cdot 10^5$$$.</p>",
    "outputSpecification": "<p>For each test case, output two numbers\u00a0\u2014 the length of the longest simple path in $$$H$$$ and the minimal possible value of such path.</p>",
    "samples": [
        {
            "input": "\n<div class=\"test-example-line test-example-line-even test-example-line-0\">3</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">5 6</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">2 2 4 1 3</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">1 2</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">1 3</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">2 4</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">3 4</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">4 5</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">5 2</div><div class=\"test-example-line test-example-line-even test-example-line-2\">7 7</div><div class=\"test-example-line test-example-line-even test-example-line-2\">999999999 999999999 999999999 999999999 1000000000 999999999 1000000000</div><div class=\"test-example-line test-example-line-even test-example-line-2\">1 2</div><div class=\"test-example-line test-example-line-even test-example-line-2\">2 3</div><div class=\"test-example-line test-example-line-even test-example-line-2\">3 4</div><div class=\"test-example-line test-example-line-even test-example-line-2\">4 1</div><div class=\"test-example-line test-example-line-even test-example-line-2\">4 5</div><div class=\"test-example-line test-example-line-even test-example-line-2\">4 6</div><div class=\"test-example-line test-example-line-even test-example-line-2\">6 7</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">14 22</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">2 3 5 7 3 4 1 4 3 4 2 2 5 1</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">1 2</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">2 3</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">2 4</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">3 1</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">4 4</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">4 5</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">5 6</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">5 6</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">5 12</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">6 7</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">6 8</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">7 5</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">7 7</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">7 9</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">8 4</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">9 11</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">10 9</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">11 10</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">11 10</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">12 13</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">13 14</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">14 12</div>",
            "output": "\n5 12\n6 5999999995\n11 37\n"
        }
    ],
    "note": "<p>In the first test case, the longest path in both graphs is $$$1 \\to 3 \\to 4 \\to 5 \\to 2$$$. As the path includes all vertices, the minimal possible value of the longest path is the sum of values on all vertices, which is $$$12$$$.</p><p>In the second test case, the longest possible path is $$$1 \\to 2 \\to 3 \\to 4 \\to 6 \\to 7$$$. As there are no longest paths with vertex $$$5$$$ in them, this path has the minimal possible value of $$$5\\,999\\,999\\,995$$$.</p><p>In the third test case, it can be proven that there is no path longer than $$$11$$$ and that the value of the longest path cannot be less than $$$37$$$. Also, notice that the given graph has both self-loops and multiple edges.</p>",
    "contestId": 1900,
    "index": "E",
    "name": "Transitive Graph",
    "type": "PROGRAMMING",
    "tags": [
        "dfs and similar",
        "dp",
        "dsu",
        "graphs",
        "implementation"
    ],
    "solvedCount": 1871
}