{
    "title": "C. Sum of Nestings",
    "timeLimit": {
        "value": 2.0,
        "unit": "seconds"
    },
    "memoryLimit": {
        "value": 256.0,
        "unit": "megabytes"
    },
    "statement": "<p>Recall that the bracket sequence is considered regular if it is possible to insert symbols '<span class=\"tex-font-style-tt\">+</span>' and '<span class=\"tex-font-style-tt\">1</span>' into it so that the result is a correct arithmetic expression. For example, a sequence \"<span class=\"tex-font-style-tt\">(()())</span>\" is regular, because we can get correct arithmetic expression insering symbols '<span class=\"tex-font-style-tt\">+</span>' and '<span class=\"tex-font-style-tt\">1</span>': \"<span class=\"tex-font-style-tt\">((1+1)+(1+1))</span>\". Also the following sequences are regular: \"<span class=\"tex-font-style-tt\">()()()</span>\", \"<span class=\"tex-font-style-tt\">(())</span>\" and \"<span class=\"tex-font-style-tt\">()</span>\". The following sequences are not regular bracket sequences: \"<span class=\"tex-font-style-tt\">)(</span>\", \"<span class=\"tex-font-style-tt\">(()</span>\" and \"<span class=\"tex-font-style-tt\">())(()</span>\".</p><p>In this problem you are given two integers <span class=\"tex-span\"><i>n</i></span> and <span class=\"tex-span\"><i>k</i></span>. Your task is to construct a regular bracket sequence consisting of round brackets with length <span class=\"tex-span\">2\u00b7<i>n</i></span> with total sum of nesting of all opening brackets equals to exactly <span class=\"tex-span\"><i>k</i></span>. The nesting of a single opening bracket equals to the number of pairs of brackets in which current opening bracket is embedded.</p><p>For example, in the sequence \"<span class=\"tex-font-style-tt\">()(())</span>\" the nesting of first opening bracket equals to <span class=\"tex-span\">0</span>, the nesting of the second opening bracket equals to <span class=\"tex-span\">0</span> and the nesting of the third opening bracket equal to <span class=\"tex-span\">1</span>. So the total sum of nestings equals to <span class=\"tex-span\">1</span>.</p>",
    "inputSpecification": "<p>The first line contains two integers <span class=\"tex-span\"><i>n</i></span> and <span class=\"tex-span\"><i>k</i></span> (<span class=\"tex-span\">1\u2009\u2264\u2009<i>n</i>\u2009\u2264\u20093\u00b710<sup class=\"upper-index\">5</sup></span>, <span class=\"tex-span\">0\u2009\u2264\u2009<i>k</i>\u2009\u2264\u200910<sup class=\"upper-index\">18</sup></span>)\u00a0\u2014 the number of opening brackets and needed total nesting.</p>",
    "outputSpecification": "<p>Print the required regular bracket sequence consisting of round brackets.</p><p>If there is no solution print \"<span class=\"tex-font-style-tt\">Impossible</span>\" (without quotes).</p>",
    "samples": [
        {
            "input": "3 1<br/>",
            "output": "()(())"
        },
        {
            "input": "4 6<br/>",
            "output": "(((())))"
        },
        {
            "input": "2 5<br/>",
            "output": "Impossible<br/>"
        }
    ],
    "note": "<p>The first example is examined in the statement.</p><p>In the second example the answer is \"<span class=\"tex-font-style-tt\">(((())))</span>\". The nesting of the first opening bracket is <span class=\"tex-span\">0</span>, the nesting of the second is <span class=\"tex-span\">1</span>, the nesting of the third is <span class=\"tex-span\">2</span>, the nesting of fourth is <span class=\"tex-span\">3</span>. So the total sum of nestings equals to <span class=\"tex-span\">0\u2009+\u20091\u2009+\u20092\u2009+\u20093\u2009=\u20096</span>.</p><p>In the third it is impossible to construct a regular bracket sequence, because the maximum possible total sum of nestings for two opening brackets equals to <span class=\"tex-span\">1</span>. This total sum of nestings is obtained for the sequence \"<span class=\"tex-font-style-tt\">(())</span>\".</p>",
    "contestId": 847,
    "index": "C",
    "name": "Sum of Nestings",
    "type": "PROGRAMMING",
    "tags": [
        "constructive algorithms"
    ],
    "solvedCount": 2334
}