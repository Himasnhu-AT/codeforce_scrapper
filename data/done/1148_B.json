{
    "title": "B. Born This Way",
    "timeLimit": {
        "value": 1.0,
        "unit": "second"
    },
    "memoryLimit": {
        "value": 256.0,
        "unit": "megabytes"
    },
    "statement": "<p>Arkady bought an air ticket from a city A to a city C. Unfortunately, there are no direct flights, but there are a lot of flights from A to a city B, and from B to C.</p><p>There are $$$n$$$ flights from A to B, they depart at time moments $$$a_1$$$, $$$a_2$$$, $$$a_3$$$, ..., $$$a_n$$$ and arrive at B $$$t_a$$$ moments later.</p><p>There are $$$m$$$ flights from B to C, they depart at time moments $$$b_1$$$, $$$b_2$$$, $$$b_3$$$, ..., $$$b_m$$$ and arrive at C $$$t_b$$$ moments later.</p><p>The connection time is negligible, so one can use the $$$i$$$-th flight from A to B and the $$$j$$$-th flight from B to C if and only if $$$b_j \\ge a_i + t_a$$$.</p><p>You can cancel at most $$$k$$$ flights. If you cancel a flight, Arkady can not use it.</p><p>Arkady wants to be in C as early as possible, while you want him to be in C as late as possible. Find the earliest time Arkady can arrive at C, if you optimally cancel $$$k$$$ flights. If you can cancel $$$k$$$ or less flights in such a way that it is not possible to reach C at all, print $$$-1$$$.</p>",
    "inputSpecification": "<p>The first line contains five integers $$$n$$$, $$$m$$$, $$$t_a$$$, $$$t_b$$$ and $$$k$$$ ($$$1 \\le n, m \\le 2 \\cdot 10^5$$$, $$$1 \\le k \\le n + m$$$, $$$1 \\le t_a, t_b \\le 10^9$$$)\u00a0\u2014 the number of flights from A to B, the number of flights from B to C, the flight time from A to B, the flight time from B to C and the number of flights you can cancel, respectively.</p><p>The second line contains $$$n$$$ distinct integers in increasing order $$$a_1$$$, $$$a_2$$$, $$$a_3$$$, ..., $$$a_n$$$ ($$$1 \\le a_1 &lt; a_2 &lt; \\ldots &lt; a_n \\le 10^9$$$)\u00a0\u2014 the times the flights from A to B depart.</p><p>The third line contains $$$m$$$ distinct integers in increasing order $$$b_1$$$, $$$b_2$$$, $$$b_3$$$, ..., $$$b_m$$$ ($$$1 \\le b_1 &lt; b_2 &lt; \\ldots &lt; b_m \\le 10^9$$$)\u00a0\u2014 the times the flights from B to C depart.</p>",
    "outputSpecification": "<p>If you can cancel $$$k$$$ or less flights in such a way that it is not possible to reach C at all, print $$$-1$$$.</p><p>Otherwise print the earliest time Arkady can arrive at C if you cancel $$$k$$$ flights in such a way that maximizes this time.</p>",
    "samples": [
        {
            "input": "\n4 5 1 1 2\n1 3 5 7\n1 2 3 9 10\n",
            "output": "\n11\n"
        },
        {
            "input": "\n2 2 4 4 2\n1 10\n10 20\n",
            "output": "\n-1\n"
        },
        {
            "input": "\n4 3 2 3 1\n1 999999998 999999999 1000000000\n3 4 1000000000\n",
            "output": "\n1000000003\n"
        }
    ],
    "note": "<p>Consider the first example. The flights from A to B depart at time moments $$$1$$$, $$$3$$$, $$$5$$$, and $$$7$$$ and arrive at B at time moments $$$2$$$, $$$4$$$, $$$6$$$, $$$8$$$, respectively. The flights from B to C depart at time moments $$$1$$$, $$$2$$$, $$$3$$$, $$$9$$$, and $$$10$$$ and arrive at C at time moments $$$2$$$, $$$3$$$, $$$4$$$, $$$10$$$, $$$11$$$, respectively. You can cancel at most two flights. The optimal solution is to cancel the first flight from A to B and the fourth flight from B to C. This way Arkady has to take the second flight from A to B, arrive at B at time moment $$$4$$$, and take the last flight from B to C arriving at C at time moment $$$11$$$.</p><p>In the second example you can simply cancel all flights from A to B and you're done.</p><p>In the third example you can cancel only one flight, and the optimal solution is to cancel the first flight from A to B. Note that there is still just enough time to catch the last flight from B to C.</p>",
    "contestId": 1148,
    "index": "B",
    "name": "Born This Way",
    "type": "PROGRAMMING",
    "tags": [
        "binary search",
        "brute force",
        "two pointers"
    ],
    "solvedCount": 7306
}