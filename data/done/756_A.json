{
    "title": "A. Pavel and barbecue",
    "timeLimit": {
        "value": 2.0,
        "unit": "seconds"
    },
    "memoryLimit": {
        "value": 256.0,
        "unit": "megabytes"
    },
    "statement": "<p>Pavel cooks barbecue. There are <span class=\"tex-span\"><i>n</i></span> skewers, they lay on a brazier in a row, each on one of <span class=\"tex-span\"><i>n</i></span> positions. Pavel wants each skewer to be cooked some time in every of <span class=\"tex-span\"><i>n</i></span> positions in two directions: in the one it was directed originally and in the reversed direction.</p><p>Pavel has a plan: a permutation <span class=\"tex-span\"><i>p</i></span> and a sequence <span class=\"tex-span\"><i>b</i><sub class=\"lower-index\">1</sub>,\u2009<i>b</i><sub class=\"lower-index\">2</sub>,\u2009...,\u2009<i>b</i><sub class=\"lower-index\"><i>n</i></sub></span>, consisting of zeros and ones. Each second Pavel move skewer on position <span class=\"tex-span\"><i>i</i></span> to position <span class=\"tex-span\"><i>p</i><sub class=\"lower-index\"><i>i</i></sub></span>, and if <span class=\"tex-span\"><i>b</i><sub class=\"lower-index\"><i>i</i></sub></span> equals <span class=\"tex-span\">1</span> then he reverses it. So he hope that every skewer will visit every position in both directions.</p><p>Unfortunately, not every pair of permutation <span class=\"tex-span\"><i>p</i></span> and sequence <span class=\"tex-span\"><i>b</i></span> suits Pavel. What is the minimum total number of elements in the given permutation <span class=\"tex-span\"><i>p</i></span> and the given sequence <span class=\"tex-span\"><i>b</i></span> he needs to change so that every skewer will visit each of <span class=\"tex-span\">2<i>n</i></span> placements? Note that after changing the permutation should remain a permutation as well.</p><p>There is no problem for Pavel, if some skewer visits some of the placements several times before he ends to cook. In other words, a permutation <span class=\"tex-span\"><i>p</i></span> and a sequence <span class=\"tex-span\"><i>b</i></span> suit him if there is an integer <span class=\"tex-span\"><i>k</i></span> (<span class=\"tex-span\"><i>k</i>\u2009\u2265\u20092<i>n</i></span>), so that after <span class=\"tex-span\"><i>k</i></span> seconds each skewer visits each of the <span class=\"tex-span\">2<i>n</i></span> placements.</p><p>It can be shown that some suitable pair of permutation <span class=\"tex-span\"><i>p</i></span> and sequence <span class=\"tex-span\"><i>b</i></span> exists for any <span class=\"tex-span\"><i>n</i></span>.</p>",
    "inputSpecification": "<p>The first line contain the integer <span class=\"tex-span\"><i>n</i></span> (<span class=\"tex-span\">1\u2009\u2264\u2009<i>n</i>\u2009\u2264\u20092\u00b710<sup class=\"upper-index\">5</sup></span>)\u00a0\u2014 the number of skewers.</p><p>The second line contains a sequence of integers <span class=\"tex-span\"><i>p</i><sub class=\"lower-index\">1</sub>,\u2009<i>p</i><sub class=\"lower-index\">2</sub>,\u2009...,\u2009<i>p</i><sub class=\"lower-index\"><i>n</i></sub></span> (<span class=\"tex-span\">1\u2009\u2264\u2009<i>p</i><sub class=\"lower-index\"><i>i</i></sub>\u2009\u2264\u2009<i>n</i></span>)\u00a0\u2014 the permutation, according to which Pavel wants to move the skewers.</p><p>The third line contains a sequence <span class=\"tex-span\"><i>b</i><sub class=\"lower-index\">1</sub>,\u2009<i>b</i><sub class=\"lower-index\">2</sub>,\u2009...,\u2009<i>b</i><sub class=\"lower-index\"><i>n</i></sub></span> consisting of zeros and ones, according to which Pavel wants to reverse the skewers.</p>",
    "outputSpecification": "<p>Print single integer\u00a0\u2014 the minimum total number of elements in the given permutation <span class=\"tex-span\"><i>p</i></span> and the given sequence <span class=\"tex-span\"><i>b</i></span> he needs to change so that every skewer will visit each of <span class=\"tex-span\">2<i>n</i></span> placements.</p>",
    "samples": [
        {
            "input": "4<br/>4 3 2 1<br/>0 1 1 1<br/>",
            "output": "2<br/>"
        },
        {
            "input": "3<br/>2 3 1<br/>0 0 0<br/>",
            "output": "1<br/>"
        }
    ],
    "note": "<p>In the first example Pavel can change the permutation to <span class=\"tex-span\">4,\u20093,\u20091,\u20092</span>.</p><p>In the second example Pavel can change any element of <span class=\"tex-span\"><i>b</i></span> to <span class=\"tex-span\">1</span>.</p>",
    "contestId": 756,
    "index": "A",
    "name": "Pavel and barbecue",
    "type": "PROGRAMMING",
    "tags": [
        "constructive algorithms",
        "dfs and similar"
    ],
    "solvedCount": 2965
}