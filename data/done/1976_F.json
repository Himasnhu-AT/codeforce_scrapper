{
    "title": "F. Remove Bridges",
    "timeLimit": {
        "value": 2.0,
        "unit": "seconds"
    },
    "memoryLimit": {
        "value": 256.0,
        "unit": "megabytes"
    },
    "statement": "<p>You are given a rooted tree, consisting of $$$n$$$ vertices, numbered from $$$1$$$ to $$$n$$$. Vertex $$$1$$$ is the root. Additionally, the root only has one child.</p><p>You are asked to add exactly $$$k$$$ edges to the tree (possibly, multiple edges and/or edges already existing in the tree).</p><p>Recall that a bridge is such an edge that, after you remove it, the number of connected components in the graph increases. So, initially, all edges of the tree are bridges.</p><p>After $$$k$$$ edges are added, some original edges of the tree are still bridges and some are not anymore. You want to satisfy two conditions: </p><ul> <li> for every bridge, all tree edges in the subtree of the lower vertex of that bridge should also be bridges; </li><li> the number of bridges is as small as possible. </li></ul><p>Solve the task for all values of $$$k$$$ from $$$1$$$ to $$$n - 1$$$ and output the smallest number of bridges.</p>",
    "inputSpecification": "<p>The first line contains a single integer $$$t$$$ ($$$1 \\le t \\le 10^4$$$)\u00a0\u2014 the number of testcases.</p><p>The first line of each testcase contains a single integer $$$n$$$ ($$$2 \\le n \\le 3 \\cdot 10^5$$$)\u00a0\u2014 the number of vertices of the tree.</p><p>Each of the next $$$n - 1$$$ lines contain two integers $$$v$$$ and $$$u$$$ ($$$1 \\le v, u \\le n$$$)\u00a0\u2014 the description of the edges of the tree. It's guaranteed that the given edges form a valid tree.</p><p>Additional constraint on the input: the root (vertex $$$1$$$) has exactly one child.</p><p>The sum of $$$n$$$ over all testcases doesn't exceed $$$3 \\cdot 10^5$$$.</p>",
    "outputSpecification": "<p>For each testcase, print $$$n - 1$$$ integers. For each $$$k$$$ from $$$1$$$ to $$$n - 1$$$ print the smallest number of bridges that can be left after you add $$$k$$$ edges to the tree.</p>",
    "samples": [
        {
            "input": "\n<div class=\"test-example-line test-example-line-even test-example-line-0\">4</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">2</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">1 2</div><div class=\"test-example-line test-example-line-even test-example-line-2\">12</div><div class=\"test-example-line test-example-line-even test-example-line-2\">4 10</div><div class=\"test-example-line test-example-line-even test-example-line-2\">5 12</div><div class=\"test-example-line test-example-line-even test-example-line-2\">12 11</div><div class=\"test-example-line test-example-line-even test-example-line-2\">3 6</div><div class=\"test-example-line test-example-line-even test-example-line-2\">9 6</div><div class=\"test-example-line test-example-line-even test-example-line-2\">1 6</div><div class=\"test-example-line test-example-line-even test-example-line-2\">12 7</div><div class=\"test-example-line test-example-line-even test-example-line-2\">11 6</div><div class=\"test-example-line test-example-line-even test-example-line-2\">2 11</div><div class=\"test-example-line test-example-line-even test-example-line-2\">10 9</div><div class=\"test-example-line test-example-line-even test-example-line-2\">10 8</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">8</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">1 2</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">2 3</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">2 4</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">3 5</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">3 6</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">4 7</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">4 8</div><div class=\"test-example-line test-example-line-even test-example-line-4\">5</div><div class=\"test-example-line test-example-line-even test-example-line-4\">1 2</div><div class=\"test-example-line test-example-line-even test-example-line-4\">2 3</div><div class=\"test-example-line test-example-line-even test-example-line-4\">3 4</div><div class=\"test-example-line test-example-line-even test-example-line-4\">4 5</div>",
            "output": "\n0 \n7 3 1 0 0 0 0 0 0 0 0 \n4 1 0 0 0 0 0 \n0 0 0 0 \n"
        }
    ],
    "note": null,
    "contestId": 1976,
    "index": "F",
    "name": "Remove Bridges",
    "type": "PROGRAMMING",
    "tags": [
        "data structures",
        "dfs and similar",
        "dp",
        "greedy",
        "sortings",
        "trees"
    ],
    "solvedCount": 352
}