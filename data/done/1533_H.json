{
    "title": "H. Submatrices",
    "timeLimit": {
        "value": 3.5,
        "unit": "seconds"
    },
    "memoryLimit": {
        "value": 256.0,
        "unit": "megabytes"
    },
    "statement": "<p>You are given matrix $$$s$$$ that contains $$$n$$$ rows and $$$m$$$ columns. Each element of a matrix is one of the $$$5$$$ first Latin letters (in upper case).</p><p>For each $$$k$$$ ($$$1 \\le k \\le 5$$$) calculate the number of submatrices that contain exactly $$$k$$$ different letters. Recall that a submatrix of matrix $$$s$$$ is a matrix that can be obtained from $$$s$$$ after removing several (possibly zero) first rows, several (possibly zero) last rows, several (possibly zero) first columns, and several (possibly zero) last columns. If some submatrix can be obtained from $$$s$$$ in two or more ways, you have to count this submatrix the corresponding number of times.</p>",
    "inputSpecification": "<p>The first line contains two integers $$$n$$$ and $$$m$$$ ($$$1 \\le n, m \\le 800$$$).</p><p>Then $$$n$$$ lines follow, each containing the string $$$s_i$$$ ($$$|s_i| = m$$$)\u00a0\u2014 $$$i$$$-th row of the matrix. </p>",
    "outputSpecification": "<p>For each $$$k$$$ ($$$1 \\le k \\le 5$$$) print one integer\u00a0\u2014 the number of submatrices that contain exactly $$$k$$$ different letters.</p>",
    "samples": [
        {
            "input": "\n2 3\nABB\nABA\n",
            "output": "\n9 9 0 0 0 "
        },
        {
            "input": "\n6 6\nEDCECE\nEDDCEB\nACCECC\nBAEEDC\nDDDDEC\nDDAEAD\n",
            "output": "\n56 94 131 103 57 "
        },
        {
            "input": "\n3 10\nAEAAEEEEEC\nCEEAAEEEEE\nCEEEEAACAA\n",
            "output": "\n78 153 99 0 0 "
        }
    ],
    "note": null,
    "contestId": 1533,
    "index": "H",
    "name": "Submatrices",
    "type": "PROGRAMMING",
    "tags": [
        "*special",
        "bitmasks",
        "data structures",
        "dp"
    ],
    "solvedCount": 81
}