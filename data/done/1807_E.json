{
    "title": "E. Interview",
    "timeLimit": {
        "value": 2.0,
        "unit": "seconds"
    },
    "memoryLimit": {
        "value": 256.0,
        "unit": "megabytes"
    },
    "statement": "<p><span class=\"tex-font-style-it\">This is an interactive problem. If you are unsure how interactive problems work, then it is recommended to read <a href=\"https://codeforces.com/blog/entry/45307\">the guide for participants</a>.</span></p><p>Before the last stage of the exam, the director conducted an interview. He gave Gon $$$n$$$ piles of stones, the $$$i$$$-th pile having $$$a_i$$$ stones.</p><p>Each stone is identical and weighs $$$1$$$ grams, except for one special stone that is part of an unknown pile and weighs $$$2$$$ grams.</p><center> <img class=\"tex-graphics\" src=\"https://espresso.codeforces.com/9e3c22d781bd0814bac06af110aea8ede4b2b3ab.png\" style=\"max-width: 100.0%;max-height: 100.0%;\"/> <span class=\"tex-font-size-small\">A picture of the first test case. Pile $$$2$$$ has the special stone. The piles have weights of $$$1,3,3,4,5$$$, respectively.</span> </center><p>Gon can only ask the director questions of one kind: he can choose $$$k$$$ piles, and the director will tell him the total weight of the piles chosen. More formally, Gon can choose an integer $$$k$$$ ($$$1 \\leq k \\leq n$$$) and $$$k$$$ unique piles $$$p_1, p_2, \\dots, p_k$$$ ($$$1 \\leq p_i \\leq n$$$), and the director will return the total weight $$$m_{p_1} + m_{p_2} + \\dots + m_{p_k}$$$, where $$$m_i$$$ denotes the weight of pile $$$i$$$. </p><p>Gon is tasked with finding the pile that contains the special stone. However, the director is busy. Help Gon find this pile in at most $$$\\mathbf{30}$$$ queries.</p>",
    "inputSpecification": "<p>The input data contains several test cases. The first line contains one integer $$$t$$$ ($$$1 \\leq t \\leq 1000$$$)\u00a0\u2014 the number of test cases. The description of the test cases follows.</p><p>The first line of each test case contains a single integer $$$n$$$ ($$$1 \\leq n \\leq 2 \\cdot 10^5$$$)\u00a0\u2014 the number of piles.</p><p>The second line of each test case contains $$$n$$$ integers $$$a_i$$$ ($$$1 \\leq a_i \\leq 10^4$$$)\u00a0\u2014 the number of stones in each pile.</p><p>It is guaranteed that the sum of $$$n$$$ over all test cases does not exceed $$$2 \\cdot 10^5$$$.</p><p>After reading the input for each test case, proceed with the interaction as follows.</p>",
    "outputSpecification": null,
    "samples": [
        {
            "input": "\n2\n5\n1 2 3 4 5\n\n11\n\n6\n\n3\n\n7\n1 2 3 5 3 4 2\n\n12\n\n6\n",
            "output": "\n? 4 1 2 3 4\n\n? 2 2 3\n\n? 1 2\n\n! 2\n\n? 4 2 3 5 6\n\n? 2 1 4\n\n! 7\n\n"
        }
    ],
    "note": "<p>In the first test case, the stone with weight two is located in pile $$$2$$$, as shown in the picture. We perform the following interaction: </p><ul> <li> $$$\\texttt{? 4 1 2 3 4}$$$\u00a0\u2014 ask the total weight of piles $$$1$$$, $$$2$$$, $$$3$$$, and $$$4$$$. The total weight we receive back is $$$1+3+3+4=11$$$. </li><li> $$$\\texttt{? 2 2 3}$$$\u00a0\u2014 ask the total weight of piles $$$2$$$ and $$$3$$$. The total weight we receive back is $$$3+3=6$$$. </li><li> $$$\\texttt{? 1 2}$$$\u00a0\u2014 ask the total weight of pile $$$2$$$. The total weight we receive back is $$$3$$$. </li><li> $$$\\texttt{! 2}$$$\u00a0\u2014 we have figured out that pile $$$2$$$ contains the special stone, so we output it and move on to the next test case. </li></ul><p>In the second test case, the stone with weight two is located on index $$$7$$$. We perform the following interaction: </p><ul> <li> $$$\\texttt{? 4 2 3 5 6}$$$\u00a0\u2014 ask the total weight of piles $$$2$$$, $$$3$$$, $$$5$$$, and $$$6$$$. The total weight we receive back is $$$2+3+3+4=12$$$. </li><li> $$$\\texttt{? 2 1 4}$$$\u00a0\u2014 ask the total weight of piles $$$1$$$ and $$$4$$$. The total weight we receive back is $$$1+5=6$$$. </li><li> $$$\\texttt{! 7}$$$\u00a0\u2014 we have somehow figured out that pile $$$7$$$ contains the special stone, so we output it and end the interaction. </li></ul>",
    "contestId": 1807,
    "index": "E",
    "name": "Interview",
    "type": "PROGRAMMING",
    "tags": [
        "binary search",
        "implementation",
        "interactive"
    ],
    "solvedCount": 12087
}