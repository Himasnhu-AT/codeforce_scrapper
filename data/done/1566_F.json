{
    "title": "F. Points Movement",
    "timeLimit": {
        "value": 2.0,
        "unit": "seconds"
    },
    "memoryLimit": {
        "value": 256.0,
        "unit": "megabytes"
    },
    "statement": "<p>There are $$$n$$$ points and $$$m$$$ segments on the coordinate line. The initial coordinate of the $$$i$$$-th point is $$$a_i$$$. The endpoints of the $$$j$$$-th segment are $$$l_j$$$ and $$$r_j$$$\u00a0\u2014 left and right endpoints, respectively.</p><p>You can move the points. In one move you can move any point from its current coordinate $$$x$$$ to the coordinate $$$x - 1$$$ or the coordinate $$$x + 1$$$. The cost of this move is $$$1$$$.</p><p>You should move the points in such a way that each segment is visited by at least one point. A point visits the segment $$$[l, r]$$$ if there is a moment when its coordinate was on the segment $$$[l, r]$$$ (including endpoints).</p><p>You should find the minimal possible total cost of all moves such that all segments are visited.</p>",
    "inputSpecification": "<p>The input consists of multiple test cases. The first line contains a single integer $$$t$$$ ($$$1 \\le t \\le 10^4$$$)\u00a0\u2014 the number of test cases. Description of the test cases follows.</p><p>The first line of each test case contains two integers $$$n$$$ and $$$m$$$ ($$$1 \\le n, m \\le 2 \\cdot 10^5$$$)\u00a0\u2014 the number of points and segments respectively.</p><p>The next line contains $$$n$$$ <span class=\"tex-font-style-bf\">distinct</span> integers $$$a_1, a_2, \\ldots, a_n$$$ ($$$-10^9 \\le a_i \\le 10^9$$$)\u00a0\u2014 the initial coordinates of the points.</p><p>Each of the next $$$m$$$ lines contains two integers $$$l_j$$$, $$$r_j$$$ ($$$-10^9 \\le l_j \\le r_j \\le 10^9$$$)\u00a0\u2014 the left and the right endpoints of the $$$j$$$-th segment.</p><p>It's guaranteed that the sum of $$$n$$$ and the sum of $$$m$$$ over all test cases does not exceed $$$2 \\cdot 10^5$$$.</p>",
    "outputSpecification": "<p>For each test case print a single integer\u00a0\u2014 the minimal total cost of all moves such that all segments are visited.</p>",
    "samples": [
        {
            "input": "\n2\n4 11\n2 6 14 18\n0 3\n4 5\n11 15\n3 5\n10 13\n16 16\n1 4\n8 12\n17 19\n7 13\n14 19\n4 12\n-9 -16 12 3\n-20 -18\n-14 -13\n-10 -7\n-3 -1\n0 4\n6 11\n7 9\n8 10\n13 15\n14 18\n16 17\n18 19\n",
            "output": "\n5\n22\n"
        }
    ],
    "note": "<p>In the first test case the points can be moved as follows:</p><ul> <li> Move the second point from the coordinate $$$6$$$ to the coordinate $$$5$$$. </li><li> Move the third point from the coordinate $$$14$$$ to the coordinate $$$13$$$. </li><li> Move the fourth point from the coordinate $$$18$$$ to the coordinate $$$17$$$. </li><li> Move the third point from the coordinate $$$13$$$ to the coordinate $$$12$$$. </li><li> Move the fourth point from the coordinate $$$17$$$ to the coordinate $$$16$$$. </li></ul><p>The total cost of moves is $$$5$$$. It is easy to see, that all segments are visited by these movements. For example, the tenth segment ($$$[7, 13]$$$) is visited after the second move by the third point.</p><p>Here is the image that describes the first test case:</p><center> <img class=\"tex-graphics\" src=\"https://espresso.codeforces.com/cee7d25939b3c531486e8bd7cffe7be5e37cf94f.png\" style=\"max-width: 100.0%;max-height: 100.0%;\"/> </center>",
    "contestId": 1566,
    "index": "F",
    "name": "Points Movement",
    "type": "PROGRAMMING",
    "tags": [
        "data structures",
        "dp",
        "greedy",
        "implementation",
        "sortings"
    ],
    "solvedCount": 932
}