{
    "title": "E. Four Points",
    "timeLimit": {
        "value": 2.0,
        "unit": "seconds"
    },
    "memoryLimit": {
        "value": 256.0,
        "unit": "megabytes"
    },
    "statement": "<p>You are given four different integer points $$$p_1$$$, $$$p_2$$$, $$$p_3$$$ and $$$p_4$$$ on $$$\\mathit{XY}$$$ grid.</p><p>In one step you can choose one of the points $$$p_i$$$ and move it in one of four directions by one. In other words, if you have chosen point $$$p_i = (x, y)$$$ you can move it to $$$(x, y + 1)$$$, $$$(x, y - 1)$$$, $$$(x + 1, y)$$$ or $$$(x - 1, y)$$$.</p><p>Your goal to move points in such a way that they will form a square with sides parallel to $$$\\mathit{OX}$$$ and $$$\\mathit{OY}$$$ axes (a square with side $$$0$$$ is allowed).</p><p>What is the minimum number of steps you need to make such a square?</p>",
    "inputSpecification": "<p>The first line contains a single integer $$$t$$$ ($$$1 \\le t \\le 10^4$$$)\u00a0\u2014 the number of test cases.</p><p>Each test case consists of four lines. Each line contains two integers $$$x$$$ and $$$y$$$ ($$$0 \\le x, y \\le 10^9$$$)\u00a0\u2014 coordinates of one of the points $$$p_i = (x, y)$$$.</p><p>All points are different in one test case.</p>",
    "outputSpecification": "<p>For each test case, print the single integer\u00a0\u2014 the minimum number of steps to make a square.</p>",
    "samples": [
        {
            "input": "\n3\n0 2\n4 2\n2 0\n2 4\n1 0\n2 0\n4 0\n6 0\n1 6\n2 2\n2 5\n4 1\n",
            "output": "\n8\n7\n5\n"
        }
    ],
    "note": "<p>In the first test case, one of the optimal solutions is shown below: </p><center> <img class=\"tex-graphics\" src=\"https://espresso.codeforces.com/90992a9e779e0b0a971205b52a470400036e59b8.png\" style=\"max-width: 100.0%;max-height: 100.0%;\"/> </center> Each point was moved two times, so the answer $$$2 + 2 + 2 + 2 = 8$$$.<p>In the second test case, one of the optimal solutions is shown below: </p><center> <img class=\"tex-graphics\" src=\"https://espresso.codeforces.com/7a5d36b8cd6dffaa7996b6cac5dc6a9079e1eab9.png\" style=\"max-width: 100.0%;max-height: 100.0%;\"/> </center> The answer is $$$3 + 1 + 0 + 3 = 7$$$.<p>In the third test case, one of the optimal solutions is shown below: </p><center> <img class=\"tex-graphics\" src=\"https://espresso.codeforces.com/ec6bde0b0b6102980a76d97620502c9dad5b6466.png\" style=\"max-width: 100.0%;max-height: 100.0%;\"/> </center> The answer is $$$1 + 1 + 2 + 1 = 5$$$.",
    "contestId": 1455,
    "index": "E",
    "name": "Four Points",
    "type": "PROGRAMMING",
    "tags": [
        "brute force",
        "constructive algorithms",
        "flows",
        "geometry",
        "greedy",
        "implementation",
        "math",
        "ternary search"
    ],
    "solvedCount": 1441
}