{
    "title": "A. Beautiful Sequence",
    "timeLimit": {
        "value": 1.0,
        "unit": "second"
    },
    "memoryLimit": {
        "value": 256.0,
        "unit": "megabytes"
    },
    "statement": "<p>A sequence of $$$m$$$ integers $$$a_{1}, a_{2}, \\ldots, a_{m}$$$ is <span class=\"tex-font-style-it\">good</span>, if and only if there exists at least one $$$i$$$ ($$$1 \\le i \\le m$$$) such that $$$a_{i} = i$$$. For example, $$$[3,2,3]$$$ is a good sequence, since $$$a_{2} = 2$$$, $$$a_{3} = 3$$$, while $$$[3,1,1]$$$ is not a good sequence, since there is no $$$i$$$ such that $$$a_{i} = i$$$.</p><p>A sequence $$$a$$$ is <span class=\"tex-font-style-it\">beautiful</span>, if and only if there exists at least one subsequence of $$$a$$$ satisfying that this subsequence is good. For example, $$$[4,3,2]$$$ is a beautiful sequence, since its subsequence $$$[4,2]$$$ is good, while $$$[5,3,4]$$$ is not a beautiful sequence.</p><p>A sequence $$$b$$$ is a subsequence of a sequence $$$a$$$ if $$$b$$$ can be obtained from $$$a$$$ by the deletion of several (possibly, zero or all) elements. </p><p>Now you are given a sequence, check whether it is beautiful or not.</p>",
    "inputSpecification": "<p>Each test contains multiple test cases. The first line contains a single integer $$$t$$$ ($$$1 \\le t \\le 500$$$) \u2014 the number of test cases. Their description follows.</p><p>The first line of each test case contains an integer $$$n$$$ ($$$1 \\le n \\le 100$$$) \u2014 the length of the given sequence.</p><p>The second line of each test case contains $$$n$$$ integers $$$a_{1}, a_{2}, \\ldots, a_{n}$$$ ($$$1 \\le a_{i} \\le 10^9$$$), representing the sequence.</p>",
    "outputSpecification": "<p>For each test case, output \"<span class=\"tex-font-style-tt\">YES</span>\" or \"<span class=\"tex-font-style-tt\">NO</span>\"(without quotes) in one line, representing whether the given sequence is beautiful.</p><p>You can output the answer in any case (upper or lower). For example, the strings \"<span class=\"tex-font-style-tt\">yEs</span>\", \"<span class=\"tex-font-style-tt\">yes</span>\", \"<span class=\"tex-font-style-tt\">Yes</span>\", and \"<span class=\"tex-font-style-tt\">YES</span>\" will be recognized as positive responses.</p>",
    "samples": [
        {
            "input": "\n<div class=\"test-example-line test-example-line-even test-example-line-0\">7</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">3</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">3 2 1</div><div class=\"test-example-line test-example-line-even test-example-line-2\">4</div><div class=\"test-example-line test-example-line-even test-example-line-2\">2 4 3 5</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">5</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">2 3 5 5 6</div><div class=\"test-example-line test-example-line-even test-example-line-4\">2</div><div class=\"test-example-line test-example-line-even test-example-line-4\">3 1</div><div class=\"test-example-line test-example-line-odd test-example-line-5\">5</div><div class=\"test-example-line test-example-line-odd test-example-line-5\">2 4 5 2 3</div><div class=\"test-example-line test-example-line-even test-example-line-6\">4</div><div class=\"test-example-line test-example-line-even test-example-line-6\">5 6 7 8</div><div class=\"test-example-line test-example-line-odd test-example-line-7\">6</div><div class=\"test-example-line test-example-line-odd test-example-line-7\">6 5 4 3 2 1</div>",
            "output": "\nYES\nYES\nNO\nYES\nYES\nNO\nYES\n"
        }
    ],
    "note": "<p>In the first test case, the good subsequence is $$$b=[3,2]$$$, where $$$b_{2} = 2$$$.</p><p>In the second test case, the good subsequence is $$$b=[2,4,3]$$$, where $$$b_{3} = 3$$$.</p><p>In the fourth test case, the good subsequence is $$$b=[1]$$$, where $$$b_{1} = 1$$$.</p><p>In the fifth test case, the good subsequence is $$$b=[2,2]$$$, where $$$b_{2} = 2$$$.</p>",
    "contestId": 1810,
    "index": "A",
    "name": "Beautiful Sequence",
    "type": "PROGRAMMING",
    "tags": [
        "brute force",
        "greedy"
    ],
    "solvedCount": 20457
}