{
    "title": "B. Spring cleaning",
    "timeLimit": {
        "value": 1.0,
        "unit": "second"
    },
    "memoryLimit": {
        "value": 256.0,
        "unit": "megabytes"
    },
    "statement": "<p>Spring cleanings are probably the most boring parts of our lives, except this year, when Fl\u00f3ra and her mother found a dusty old tree graph under the carpet.</p><p>This tree has $$$N$$$ nodes (numbered from $$$1$$$ to $$$N$$$), connected by $$$N-1$$$ edges. The edges gathered too much dust, so Fl\u00f3ra's mom decided to clean them. </p><p>Cleaning the edges of an arbitrary tree is done by repeating the following process:   She chooses 2 different leaves (a node is a leaf if it is connected to exactly one other node by an edge), and cleans every edge lying on the shortest path between them. If this path has $$$d$$$ edges, then the cost of cleaning this path is $$$d$$$.</p><p>She doesn't want to harm the leaves of the tree, so she chooses every one of them <span class=\"tex-font-style-bf\">at most once</span>. A tree is cleaned when all of its edges are cleaned. The cost of this is the sum of costs for all cleaned paths.</p><p>Fl\u00f3ra thinks the tree they found is too small and simple, so she imagines $$$Q$$$ variations of it. In the $$$i$$$-th variation, she adds a total of $$$D_i$$$ extra leaves to the <span class=\"tex-font-style-bf\">original</span> tree: for each new leaf, she chooses a node from the <span class=\"tex-font-style-bf\">original</span> tree, and connects that node with the new leaf by an edge. Note that some nodes may stop being leaves during this step.</p><p>For all these $$$Q$$$ variations, we are interested in the minimum cost that is required to clean the tree.</p>",
    "inputSpecification": "<p>The first line contains two space-separated integer, $$$N$$$ and $$$Q$$$ ($$$3 \\leq N \\leq 10^{5}$$$, $$$1 \\leq Q \\leq 10^{5}$$$) \u2013 the number of nodes the tree has and the number of variations.</p><p> Each of the next $$$N-1$$$ lines contains two space-separated integers $$$u$$$ and $$$v$$$ denoting that nodes $$$u$$$ and $$$v$$$ are connected by an edge ($$$1 \\leq u, v \\leq N$$$).</p><p> The next $$$Q$$$ lines describe the variations.  The first integer in the $$$i$$$th line is $$$D_i$$$ ($$$1 \\leq D_i \\leq 10^{5}$$$). Then $$$D_i$$$ space-separated integers follow: if the $$$j$$$th number is $$$a_j$$$, it means that Fl\u00f3ra adds a new leaf to node $$$a_j$$$ ($$$1 \\leq a_j \\leq N$$$). We may add more than one leaf to the same node. $$$\\sum_{1}^{Q} D_i \\leq 10^{5}$$$ i.e. the sum of $$$D_i$$$ in all varations is at most $$$10^5$$$.</p><p>After each variation, Fl\u00f3ra restarts and adds extra leaves to the <span class=\"tex-font-style-bf\">original</span> tree.</p>",
    "outputSpecification": "<p>You should print $$$Q$$$ lines. In the $$$i$$$-th line, print a single integer: the minimum cost required to clean the $$$i$$$-th variation of the tree. If the tree cannot be cleaned, print $$$-1$$$.</p>",
    "samples": [
        {
            "input": "\n7 3\n1 2\n2 4\n4 5\n5 6\n5 7\n3 4\n1 4\n2 2 4\n1 1\n",
            "output": "\n-1\n10\n8\n"
        }
    ],
    "note": "<p>The following picture shows the second variation.  A possible solution is to clean the path between leaves $$$1 - 6$$$, $$$A - 7$$$ and $$$ B - 3$$$.</p><p><img class=\"tex-graphics\" src=\"https://espresso.codeforces.com/c923968a79644c80e210d6732217a796e42e485c.png\" style=\"max-width: 100.0%;max-height: 100.0%;\"/></p><p>You can download the above example and an additional (bigger) sample input here: <a href=\"https://gofile.io/d/8QlbsS\">https://gofile.io/d/8QlbsS</a></p>",
    "contestId": 1403,
    "index": "B",
    "name": "Spring cleaning",
    "type": "PROGRAMMING",
    "tags": [
        "*special",
        "data structures",
        "dfs and similar",
        "graphs",
        "trees"
    ],
    "solvedCount": 361
}