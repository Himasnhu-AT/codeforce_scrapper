{
    "title": "D. Carry Bit",
    "timeLimit": {
        "value": 1.0,
        "unit": "second"
    },
    "memoryLimit": {
        "value": 256.0,
        "unit": "megabytes"
    },
    "statement": "<p>Let $$$f(x,y)$$$ be the number of <span class=\"tex-font-style-it\">carries</span> of $$$x+y$$$ in binary (i.\u00a0e. $$$f(x,y)=g(x)+g(y)-g(x+y)$$$, where $$$g(x)$$$ is the number of ones in the binary representation of $$$x$$$).</p><p>Given two integers $$$n$$$ and $$$k$$$, find the number of ordered pairs $$$(a,b)$$$ such that $$$0 \\leq a,b &lt; 2^n$$$, and $$$f(a,b)$$$ equals $$$k$$$. Note that for $$$a\\ne b$$$, $$$(a,b)$$$ and $$$(b,a)$$$ are considered as two different pairs. </p><p>As this number may be large, output it modulo $$$10^9+7$$$.</p>",
    "inputSpecification": "<p>The only line of each test contains two integers $$$n$$$ and $$$k$$$ ($$$0\\leq k&lt;n\\leq 10^6$$$).</p>",
    "outputSpecification": "<p>Output a single integer \u00a0\u2014 the answer modulo $$$10^9+7$$$.</p>",
    "samples": [
        {
            "input": "\n3 1\n",
            "output": "\n15\n"
        },
        {
            "input": "\n3 0\n",
            "output": "\n27\n"
        },
        {
            "input": "\n998 244\n",
            "output": "\n573035660\n"
        }
    ],
    "note": "<p>Here are some examples for understanding <span class=\"tex-font-style-it\">carries</span>:</p><p>$$$$$$ \\begin{aligned} &amp;\\begin{array}{r} 1_{\\ \\ }1_{\\ \\ }1\\\\ +\\ _{1}1_{\\ \\ }0_{\\ \\ }0\\\\ \\hline \\ 1_{\\ \\ }0_{\\ \\ }1_{\\ \\ }1 \\end{array} &amp;\\begin{array}{r} \\ 1_{\\ \\ }0_{\\ \\ }1\\\\ +\\ _{\\ \\ }0_{\\ \\ }0_{1}1\\\\ \\hline \\ 0_{\\ \\ }1_{\\ \\ }1_{\\ \\ }0 \\end{array} &amp; &amp;\\begin{array}{r} \\ 1_{\\ \\ }0_{\\ \\ }1\\\\ +\\ _{1}0_{1}1_{1}1\\\\ \\hline \\ 1_{\\ \\ }0_{\\ \\ }0_{\\ \\ }0 \\end{array} \\end{aligned} $$$$$$</p><p>So $$$f(7,4)=1$$$, $$$f(5,1)=1$$$ and $$$f(5,3)=3$$$.</p><p>In the first test case, all the pairs meeting the constraints are $$$(1,1),(1,5),(2,2),(2,3),(3,2),(4,4),(4,5),(4,6),(4,7),(5,1),(5,4),(5,6),(6,4),(6,5),(7,4)$$$.</p>",
    "contestId": 1761,
    "index": "D",
    "name": "Carry Bit",
    "type": "PROGRAMMING",
    "tags": [
        "combinatorics",
        "math"
    ],
    "solvedCount": 2365
}