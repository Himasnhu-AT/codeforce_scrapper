{
    "title": "B. Boboniu Walks on Graph",
    "timeLimit": {
        "value": 1.0,
        "unit": "second"
    },
    "memoryLimit": {
        "value": 256.0,
        "unit": "megabytes"
    },
    "statement": "<p>Boboniu has a <span class=\"tex-font-style-bf\">directed</span> graph with $$$n$$$ vertices and $$$m$$$ edges.</p><p>The out-degree of each vertex is at most $$$k$$$.</p><p>Each edge has an integer weight between $$$1$$$ and $$$m$$$. No two edges have equal weights.</p><p>Boboniu likes to walk on the graph with some specific rules, which is represented by a tuple $$$(c_1,c_2,\\ldots,c_k)$$$. If he now stands on a vertex $$$u$$$ with out-degree $$$i$$$, then he will go to the next vertex by the edge with the $$$c_i$$$-th $$$(1\\le c_i\\le i)$$$ smallest weight among all edges outgoing from $$$u$$$.</p><p>Now Boboniu asks you to calculate the number of tuples $$$(c_1,c_2,\\ldots,c_k)$$$ such that</p><ul> <li> $$$1\\le c_i\\le i$$$ for all $$$i$$$ ($$$1\\le i\\le k$$$). </li><li> Starting from any vertex $$$u$$$, it is possible to go back to $$$u$$$ in finite time by walking on the graph under the described rules. </li></ul>",
    "inputSpecification": "<p>The first line contains three integers $$$n$$$, $$$m$$$ and $$$k$$$ ($$$2\\le n\\le 2\\cdot 10^5$$$, $$$2\\le m\\le \\min(2\\cdot 10^5,n(n-1) )$$$, $$$1\\le k\\le 9$$$).</p><p>Each of the next $$$m$$$ lines contains three integers $$$u$$$, $$$v$$$ and $$$w$$$ $$$(1\\le u,v\\le n,u\\ne v,1\\le w\\le m)$$$, denoting an edge from $$$u$$$ to $$$v$$$ with weight $$$w$$$. It is guaranteed that there are no self-loops or multiple edges and each vertex has at least one edge starting from itself.</p><p>It is guaranteed that the out-degree of each vertex is at most $$$k$$$ and no two edges have equal weight.</p>",
    "outputSpecification": "<p>Print one integer: the number of tuples.</p>",
    "samples": [
        {
            "input": "\n4 6 3\n4 2 1\n1 2 2\n2 4 3\n4 1 4\n4 3 5\n3 1 6\n",
            "output": "\n2\n"
        },
        {
            "input": "\n5 5 1\n1 4 1\n5 1 2\n2 5 3\n4 3 4\n3 2 5\n",
            "output": "\n1\n"
        },
        {
            "input": "\n6 13 4\n3 5 1\n2 5 2\n6 3 3\n1 4 4\n2 6 5\n5 3 6\n4 1 7\n4 3 8\n5 2 9\n4 2 10\n2 1 11\n6 1 12\n4 6 13\n",
            "output": "\n1\n"
        }
    ],
    "note": "<p>For the first example, there are two tuples: $$$(1,1,3)$$$ and $$$(1,2,3)$$$. The blue edges in the picture denote the $$$c_i$$$-th smallest edges for each vertex, which Boboniu chooses to go through.</p><center> <img class=\"tex-graphics\" src=\"https://espresso.codeforces.com/18b25cb4a2e95553ec2ab4c1a33b3356cec54b53.png\" style=\"max-width: 100.0%;max-height: 100.0%;\"/> </center><p>For the third example, there's only one tuple: $$$(1,2,2,2)$$$.</p><center> <img class=\"tex-graphics\" src=\"https://espresso.codeforces.com/50f654d1a0fdc5dc0ca33ee1cb93b19c4aaff275.png\" style=\"max-width: 100.0%;max-height: 100.0%;\"/> </center><p>The <span class=\"tex-font-style-it\">out-degree</span> of vertex $$$u$$$ means the number of edges outgoing from $$$u$$$.</p>",
    "contestId": 1394,
    "index": "B",
    "name": "Boboniu Walks on Graph",
    "type": "PROGRAMMING",
    "tags": [
        "brute force",
        "dfs and similar",
        "graphs",
        "hashing"
    ],
    "solvedCount": 1796
}