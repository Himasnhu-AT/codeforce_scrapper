{
    "title": "D. Cycle in Graph",
    "timeLimit": {
        "value": 2.0,
        "unit": "seconds"
    },
    "memoryLimit": {
        "value": 256.0,
        "unit": "megabytes"
    },
    "statement": "<p>You've got a undirected graph <span class=\"tex-span\"><i>G</i></span>, consisting of <span class=\"tex-span\"><i>n</i></span> nodes. We will consider the nodes of the graph indexed by integers from 1 to <span class=\"tex-span\"><i>n</i></span>. We know that each node of graph <span class=\"tex-span\"><i>G</i></span> is connected by edges with at least <span class=\"tex-span\"><i>k</i></span> other nodes of this graph. Your task is to find in the given graph a simple cycle of length of at least <span class=\"tex-span\"><i>k</i>\u2009+\u20091</span>.</p><p>A <span class=\"tex-font-style-it\">simple cycle</span> of length <span class=\"tex-span\"><i>d</i></span> <span class=\"tex-span\">(<i>d</i>\u2009&gt;\u20091)</span> in graph <span class=\"tex-span\"><i>G</i></span> is a sequence of distinct graph nodes <span class=\"tex-span\"><i>v</i><sub class=\"lower-index\">1</sub>,\u2009<i>v</i><sub class=\"lower-index\">2</sub>,\u2009...,\u2009<i>v</i><sub class=\"lower-index\"><i>d</i></sub></span> such, that nodes <span class=\"tex-span\"><i>v</i><sub class=\"lower-index\">1</sub></span> and <span class=\"tex-span\"><i>v</i><sub class=\"lower-index\"><i>d</i></sub></span> are connected by an edge of the graph, also for any integer <span class=\"tex-span\"><i>i</i></span> <span class=\"tex-span\">(1\u2009\u2264\u2009<i>i</i>\u2009&lt;\u2009<i>d</i>)</span> nodes <span class=\"tex-span\"><i>v</i><sub class=\"lower-index\"><i>i</i></sub></span> and <span class=\"tex-span\"><i>v</i><sub class=\"lower-index\"><i>i</i>\u2009+\u20091</sub></span> are connected by an edge of the graph.</p>",
    "inputSpecification": "<p>The first line contains three integers <span class=\"tex-span\"><i>n</i></span>, <span class=\"tex-span\"><i>m</i></span>, <span class=\"tex-span\"><i>k</i></span> <span class=\"tex-span\">(3\u2009\u2264\u2009<i>n</i>,\u2009<i>m</i>\u2009\u2264\u200910<sup class=\"upper-index\">5</sup>;\u00a02\u2009\u2264\u2009<i>k</i>\u2009\u2264\u2009<i>n</i>\u2009-\u20091)</span> \u2014 the number of the nodes of the graph, the number of the graph's edges and the lower limit on the degree of the graph node. Next <span class=\"tex-span\"><i>m</i></span> lines contain pairs of integers. The <span class=\"tex-span\"><i>i</i></span>-th line contains integers <span class=\"tex-span\"><i>a</i><sub class=\"lower-index\"><i>i</i></sub></span>, <span class=\"tex-span\"><i>b</i><sub class=\"lower-index\"><i>i</i></sub></span> <span class=\"tex-span\">(1\u2009\u2264\u2009<i>a</i><sub class=\"lower-index\"><i>i</i></sub>,\u2009<i>b</i><sub class=\"lower-index\"><i>i</i></sub>\u2009\u2264\u2009<i>n</i>;\u00a0<i>a</i><sub class=\"lower-index\"><i>i</i></sub>\u2009\u2260\u2009<i>b</i><sub class=\"lower-index\"><i>i</i></sub>)</span> \u2014 the indexes of the graph nodes that are connected by the <span class=\"tex-span\"><i>i</i></span>-th edge. </p><p>It is guaranteed that the given graph doesn't contain any multiple edges or self-loops. It is guaranteed that each node of the graph is connected by the edges with at least <span class=\"tex-span\"><i>k</i></span> other nodes of the graph.</p>",
    "outputSpecification": "<p>In the first line print integer <span class=\"tex-span\"><i>r</i></span> <span class=\"tex-span\">(<i>r</i>\u2009\u2265\u2009<i>k</i>\u2009+\u20091)</span> \u2014 the length of the found cycle. In the next line print <span class=\"tex-span\"><i>r</i></span> distinct integers <span class=\"tex-span\"><i>v</i><sub class=\"lower-index\">1</sub>,\u2009<i>v</i><sub class=\"lower-index\">2</sub>,\u2009...,\u2009<i>v</i><sub class=\"lower-index\"><i>r</i></sub></span> <span class=\"tex-span\">(1\u2009\u2264\u2009<i>v</i><sub class=\"lower-index\"><i>i</i></sub>\u2009\u2264\u2009<i>n</i>)</span> \u2014 the found simple cycle.</p><p>It is guaranteed that the answer exists. If there are multiple correct answers, you are allowed to print any of them.</p>",
    "samples": [
        {
            "input": "3 3 2<br/>1 2<br/>2 3<br/>3 1<br/>",
            "output": "3<br/>1 2 3 "
        },
        {
            "input": "4 6 3<br/>4 3<br/>1 2<br/>1 3<br/>1 4<br/>2 3<br/>2 4<br/>",
            "output": "4<br/>3 4 1 2 "
        }
    ],
    "note": null,
    "contestId": 263,
    "index": "D",
    "name": "Cycle in Graph",
    "type": "PROGRAMMING",
    "tags": [
        "dfs and similar",
        "graphs"
    ],
    "solvedCount": 3274
}