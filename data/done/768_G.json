{
    "title": "G. The Winds of Winter",
    "timeLimit": {
        "value": 2.0,
        "unit": "seconds"
    },
    "memoryLimit": {
        "value": 512.0,
        "unit": "megabytes"
    },
    "statement": "<p>Given a rooted tree with <span class=\"tex-span\"><i>n</i></span> nodes. The Night King removes exactly one node from the tree and all the edges associated with it. Doing this splits the tree and forms a forest. The node which is removed is not a part of the forest.</p><p>The root of a tree in the forest is the node in that tree which does not have a parent. We define the strength of the forest as the size of largest tree in forest.</p><p>Jon Snow wants to minimize the strength of the forest. To do this he can perform the following operation at most once.</p><p><span class=\"tex-font-style-it\">He removes the edge between a node and its parent and inserts a new edge between this node and any other node in forest such that the total number of trees in forest remain same.</span></p><p>For each node <span class=\"tex-span\"><i>v</i></span> you need to find the minimum value of strength of the forest formed when node <span class=\"tex-span\"><i>v</i></span> is removed.</p>",
    "inputSpecification": "<p>The first line of the input contains an integer <span class=\"tex-span\"><i>n</i></span> (<span class=\"tex-span\">1\u2009\u2009\u2264\u2009\u2009<i>n</i>\u2009\u2009\u2264\u2009\u200910<sup class=\"upper-index\">5</sup></span>) \u2014 the number of vertices in the tree. Each of the next <span class=\"tex-span\"><i>n</i></span> lines contains a pair of vertex indices <span class=\"tex-span\"><i>u</i><sub class=\"lower-index\"><i>i</i></sub></span> and <span class=\"tex-span\"><i>v</i><sub class=\"lower-index\"><i>i</i></sub></span> (<span class=\"tex-span\">1\u2009\u2009\u2264\u2009\u2009<i>u</i><sub class=\"lower-index\"><i>i</i></sub>,\u2009\u2009<i>v</i><sub class=\"lower-index\"><i>i</i></sub>\u2009\u2009\u2264\u2009\u2009<i>n</i></span>) where <span class=\"tex-span\"><i>u</i><sub class=\"lower-index\"><i>i</i></sub></span> is the parent of <span class=\"tex-span\"><i>v</i><sub class=\"lower-index\"><i>i</i></sub></span>. If <span class=\"tex-span\"><i>u</i><sub class=\"lower-index\"><i>i</i></sub>\u2009=\u20090</span> then <span class=\"tex-span\"><i>v</i><sub class=\"lower-index\"><i>i</i></sub></span> is the root.</p>",
    "outputSpecification": "<p>Print <span class=\"tex-span\"><i>n</i></span> line each containing a single integer. The <span class=\"tex-span\"><i>i</i></span>-th of them should be equal to minimum value of strength of forest formed when <span class=\"tex-span\"><i>i</i></span>-th node is removed and Jon Snow performs the operation described above at most once.</p>",
    "samples": [
        {
            "input": "10<br/>0 1<br/>1 2<br/>1 3<br/>1 4<br/>2 5<br/>2 6<br/>3 7<br/>4 8<br/>4 9<br/>5 10<br/>",
            "output": "3<br/>4<br/>5<br/>5<br/>5<br/>9<br/>9<br/>9<br/>9<br/>9<br/>"
        },
        {
            "input": "2<br/>2 1<br/>0 2<br/>",
            "output": "1<br/>1<br/>"
        }
    ],
    "note": "<p>The tree for first test case is depicted below. <img class=\"tex-graphics\" src=\"https://espresso.codeforces.com/11c39aaab54dce5e508a594b4f57109d5cc3b317.png\" style=\"max-width: 100.0%;max-height: 100.0%;\"/> When you remove the first node, the tree splits to form the following forest. The strength of this forest is <span class=\"tex-span\">4</span>. <img class=\"tex-graphics\" src=\"https://espresso.codeforces.com/af8ff74e6630469b37f09c01be60d58b59cfabbd.png\" style=\"max-width: 100.0%;max-height: 100.0%;\"/> Jon Snow now changes the parent of vertex <span class=\"tex-span\">10</span> from <span class=\"tex-span\">5</span> to <span class=\"tex-span\">3</span>. The strength of forest now becomes <span class=\"tex-span\">3</span>. <img class=\"tex-graphics\" src=\"https://espresso.codeforces.com/7c76b3c1797ba9a71a6f8086986b53ad566ff4ea.png\" style=\"max-width: 100.0%;max-height: 100.0%;\"/></p>",
    "contestId": 768,
    "index": "G",
    "name": "The Winds of Winter",
    "type": "PROGRAMMING",
    "tags": [
        "binary search",
        "data structures"
    ],
    "solvedCount": 355
}