{
    "title": "B. Symmetric Encoding",
    "timeLimit": {
        "value": 2.0,
        "unit": "seconds"
    },
    "memoryLimit": {
        "value": 256.0,
        "unit": "megabytes"
    },
    "statement": "<p>Polycarp has a string $$$s$$$, which consists of lowercase Latin letters. He encodes this string using the following algorithm:</p><ul> <li> first, he constructs a new auxiliary string $$$r$$$, which consists of all distinct letters of the string $$$s$$$, written in alphabetical order; </li><li> then the encoding happens as follows: each character in the string $$$s$$$ is replaced by its symmetric character from the string $$$r$$$ (the first character of the string $$$r$$$ will be replaced by the last, the second by the second from the end, and so on). </li></ul><p>For example, encoding the string $$$s$$$=\"<span class=\"tex-font-style-tt\">codeforces</span>\" happens as follows:</p><ul> <li> the string $$$r$$$ is obtained as \"<span class=\"tex-font-style-tt\">cdefors</span>\"; </li><li> the first character $$$s_1$$$='<span class=\"tex-font-style-tt\">c</span>' is replaced by '<span class=\"tex-font-style-tt\">s</span>'; </li><li> the second character $$$s_2$$$='<span class=\"tex-font-style-tt\">o</span>' is replaced by '<span class=\"tex-font-style-tt\">e</span>'; </li><li> the third character $$$s_3$$$='<span class=\"tex-font-style-tt\">d</span>' is replaced by '<span class=\"tex-font-style-tt\">r</span>'; </li><li> ... </li><li> the last character $$$s_{10}$$$='<span class=\"tex-font-style-tt\">s</span>' is replaced by '<span class=\"tex-font-style-tt\">c</span>'. </li></ul><center> <img class=\"tex-graphics\" src=\"https://espresso.codeforces.com/2e2c8928f8d16928c9f422d3c719a7608f76984a.png\" style=\"max-width: 100.0%;max-height: 100.0%;\"/> <span class=\"tex-font-size-small\">The string $$$r$$$ and replacements for $$$s$$$=\"<span class=\"tex-font-style-tt\">codeforces</span>\".</span> </center><p>Thus, the result of encoding the string $$$s$$$=\"<span class=\"tex-font-style-tt\">codeforces</span>\" is the string \"<span class=\"tex-font-style-tt\">serofedsoc</span>\".</p><p>Write a program that performs decoding \u2014 that is, restores the original string $$$s$$$ from the encoding result.</p>",
    "inputSpecification": "<p>The first line contains a single integer $$$t$$$ ($$$1 \\le t \\le 10^4$$$)\u00a0\u2014 the number of test cases.</p><p>The first line of each test case contains a single integer $$$n$$$ ($$$1 \\le n \\le 2 \\cdot 10^5$$$)\u00a0\u2014 the length of the string $$$b$$$.</p><p>The second line of each test case contains a string $$$b$$$ of length $$$n$$$, consisting of lowercase Latin letters \u2014 the result of encoding the original string $$$s$$$.</p><p>It is guaranteed that the sum of the values of $$$n$$$ over all test cases in the test does not exceed $$$2 \\cdot 10^5$$$.</p>",
    "outputSpecification": "<p>For each test case, output the string $$$s$$$ from which the encoding result $$$b$$$ was obtained.</p>",
    "samples": [
        {
            "input": "\n<div class=\"test-example-line test-example-line-even test-example-line-0\">5</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">10</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">serofedsoc</div><div class=\"test-example-line test-example-line-even test-example-line-2\">3</div><div class=\"test-example-line test-example-line-even test-example-line-2\">ttf</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">9</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">tlrhgmaoi</div><div class=\"test-example-line test-example-line-even test-example-line-4\">1</div><div class=\"test-example-line test-example-line-even test-example-line-4\">w</div><div class=\"test-example-line test-example-line-odd test-example-line-5\">15</div><div class=\"test-example-line test-example-line-odd test-example-line-5\">hnndledmnhlttin</div>",
            "output": "\ncodeforces\nfft\nalgorithm\nw\nmeetinthemiddle\n"
        }
    ],
    "note": null,
    "contestId": 1974,
    "index": "B",
    "name": "Symmetric Encoding",
    "type": "PROGRAMMING",
    "tags": [
        "implementation",
        "sortings",
        "strings"
    ],
    "solvedCount": 26907
}