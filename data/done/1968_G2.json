{
    "title": "G2. Division + LCP (hard version)",
    "timeLimit": {
        "value": 3.0,
        "unit": "seconds"
    },
    "memoryLimit": {
        "value": 256.0,
        "unit": "megabytes"
    },
    "statement": "<p><span class=\"tex-font-style-bf\">This is the hard version of the problem. In this version $$$l\\le r$$$.</span></p><p>You are given a string $$$s$$$. For a fixed $$$k$$$, consider a division of $$$s$$$ into exactly $$$k$$$ continuous substrings $$$w_1,\\dots,w_k$$$. Let $$$f_k$$$ be the maximal possible $$$LCP(w_1,\\dots,w_k)$$$ among all divisions.</p><p>$$$LCP(w_1,\\dots,w_m)$$$ is the length of the Longest Common Prefix of the strings $$$w_1,\\dots,w_m$$$.</p><p>For example, if $$$s=abababcab$$$ and $$$k=4$$$, a possible division is $$$\\color{red}{ab}\\color{blue}{ab}\\color{orange}{abc}\\color{green}{ab}$$$. The $$$LCP(\\color{red}{ab},\\color{blue}{ab},\\color{orange}{abc},\\color{green}{ab})$$$ is $$$2$$$, since $$$ab$$$ is the Longest Common Prefix of those four strings. Note that each substring consists of a continuous segment of characters and each character belongs to <span class=\"tex-font-style-bf\">exactly</span> one substring.</p><p>Your task is to find $$$f_l,f_{l+1},\\dots,f_r$$$.</p>",
    "inputSpecification": "<p>The first line contains a single integer $$$t$$$ ($$$1 \\le t \\le 10^4$$$)\u00a0\u2014 the number of test cases.</p><p>The first line of each test case contains two integers $$$n$$$, $$$l$$$, $$$r$$$ ($$$1 \\le l \\le r \\le n \\le 2 \\cdot 10^5$$$)\u00a0\u2014 the length of the string and the given range.</p><p>The second line of each test case contains string $$$s$$$ of length $$$n$$$, all characters are lowercase English letters.</p><p>It is guaranteed that the sum of $$$n$$$ over all test cases does not exceed $$$2\\cdot 10^5$$$.</p>",
    "outputSpecification": "<p>For each test case, output $$$r-l+1$$$ values: $$$f_l,\\dots,f_r$$$.</p>",
    "samples": [
        {
            "input": "\n<div class=\"test-example-line test-example-line-even test-example-line-0\">7</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">3 1 3</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">aba</div><div class=\"test-example-line test-example-line-even test-example-line-2\">3 2 3</div><div class=\"test-example-line test-example-line-even test-example-line-2\">aaa</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">7 1 5</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">abacaba</div><div class=\"test-example-line test-example-line-even test-example-line-4\">9 1 6</div><div class=\"test-example-line test-example-line-even test-example-line-4\">abababcab</div><div class=\"test-example-line test-example-line-odd test-example-line-5\">10 1 10</div><div class=\"test-example-line test-example-line-odd test-example-line-5\">aaaaaaawac</div><div class=\"test-example-line test-example-line-even test-example-line-6\">9 1 9</div><div class=\"test-example-line test-example-line-even test-example-line-6\">abafababa</div><div class=\"test-example-line test-example-line-odd test-example-line-7\">7 2 7</div><div class=\"test-example-line test-example-line-odd test-example-line-7\">vvzvvvv</div>",
            "output": "\n3 1 0 \n1 1 \n7 3 1 1 0 \n9 2 2 2 0 0 \n10 3 2 1 1 1 1 1 0 0 \n9 3 2 1 1 0 0 0 0 \n2 2 1 1 1 0 \n"
        }
    ],
    "note": null,
    "contestId": 1968,
    "index": "G2",
    "name": "Division + LCP (hard version)",
    "type": "PROGRAMMING",
    "tags": [
        "binary search",
        "brute force",
        "data structures",
        "dp",
        "hashing",
        "math",
        "string suffix structures",
        "strings"
    ],
    "solvedCount": 1565
}