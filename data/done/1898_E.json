{
    "title": "E. Sofia and Strings",
    "timeLimit": {
        "value": 2.0,
        "unit": "seconds"
    },
    "memoryLimit": {
        "value": 256.0,
        "unit": "megabytes"
    },
    "statement": "<p>Sofia has a string $$$s$$$ of length $$$n$$$, consisting only of lowercase English letters. She can perform operations of the following types with this string.</p><ol> <li> Select an index $$$1 \\le i \\le |s|$$$ and remove the character $$$s_i$$$ from the string. </li><li> Select a pair of indices $$$(l, r)$$$ ($$$1 \\le l \\le r \\le |s|$$$) and sort the substring $$$s_{l} s_{l+1} \\ldots s_r$$$ in alphabetical order. </li></ol> Here, $$$|s|$$$ denotes the current length of $$$s$$$. In particular, $$$|s| = n$$$ before the first operation. For example, if $$$s = \\mathtt{sofia}$$$, then performing the operation of the first type with $$$i=4$$$ results in $$$s$$$ becoming $$$\\mathtt{sofa}$$$, and performing the operation of the second type with $$$(l, r) = (2, 4)$$$ after that results in $$$s$$$ becoming $$$\\mathtt{safo}$$$.<p>Sofia wants to obtain the string $$$t$$$ of length $$$m$$$ after performing zero or more operations on string $$$s$$$ as described above. Please determine whether it is possible or not.</p>",
    "inputSpecification": "<p>The first line contains one integer $$$t$$$ ($$$1 \\leq t \\leq 10\\,000$$$)\u00a0\u2014 the number of test cases.</p><p>The first line of each test case contains two integers $$$n$$$, $$$m$$$ ($$$1\\leq m \\leq n \\leq 2\\cdot 10^5$$$)\u00a0\u2014 the lengths of string $$$s$$$ and $$$t$$$, respectively.</p><p>The second line of each test case contains the string $$$s$$$ of length $$$n$$$, consisting only of lowercase English letters.</p><p>The third line of each test case contains the string $$$t$$$ of length $$$m$$$, consisting only of lowercase English letters.</p><p>It is guaranteed that the sum of $$$n$$$ over all test cases does not exceed $$$2\\cdot 10^5$$$.</p>",
    "outputSpecification": "<p>For each test case, output \"<span class=\"tex-font-style-tt\">YES</span>\" if Sofia can obtain the string $$$t$$$ from $$$s$$$ using the operations above. Otherwise, output \"<span class=\"tex-font-style-tt\">NO</span>\".</p><p>You can output the answer in any case (upper or lower). For example, the strings \"<span class=\"tex-font-style-tt\">yEs</span>\", \"<span class=\"tex-font-style-tt\">yes</span>\", \"<span class=\"tex-font-style-tt\">Yes</span>\", and \"<span class=\"tex-font-style-tt\">YES</span>\" will be recognized as positive responses.</p>",
    "samples": [
        {
            "input": "\n<div class=\"test-example-line test-example-line-even test-example-line-0\">8</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">5 5</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">sofia</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">afios</div><div class=\"test-example-line test-example-line-even test-example-line-2\">3 2</div><div class=\"test-example-line test-example-line-even test-example-line-2\">cba</div><div class=\"test-example-line test-example-line-even test-example-line-2\">bc</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">5 1</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">sofia</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">e</div><div class=\"test-example-line test-example-line-even test-example-line-4\">15 7</div><div class=\"test-example-line test-example-line-even test-example-line-4\">anavolimilovana</div><div class=\"test-example-line test-example-line-even test-example-line-4\">aamanan</div><div class=\"test-example-line test-example-line-odd test-example-line-5\">26 4</div><div class=\"test-example-line test-example-line-odd test-example-line-5\">abcdefghijklmnopqrstuvwxyz</div><div class=\"test-example-line test-example-line-odd test-example-line-5\">nope</div><div class=\"test-example-line test-example-line-even test-example-line-6\">26 4</div><div class=\"test-example-line test-example-line-even test-example-line-6\">zyxwvutsrqponmlkjihgfedcba</div><div class=\"test-example-line test-example-line-even test-example-line-6\">nope</div><div class=\"test-example-line test-example-line-odd test-example-line-7\">7 3</div><div class=\"test-example-line test-example-line-odd test-example-line-7\">apricot</div><div class=\"test-example-line test-example-line-odd test-example-line-7\">cat</div><div class=\"test-example-line test-example-line-even test-example-line-8\">3 3</div><div class=\"test-example-line test-example-line-even test-example-line-8\">cba</div><div class=\"test-example-line test-example-line-even test-example-line-8\">acb</div>",
            "output": "\nYES\nYES\nNO\nYES\nNO\nYES\nNO\nYES\n"
        }
    ],
    "note": "<p>In the first test case, Sofia can perform the following operation: </p><ol> <li> operation of the second type with $$$l=1$$$ and $$$r=5$$$: string $$$s$$$ becomes $$$\\mathtt{afios}$$$ after it. </li></ol><p>In the second test case, Sofia can perform the following operations: </p><ol> <li> operation of the second type with $$$l=1$$$ and $$$r=2$$$: string $$$s$$$ becomes $$$\\mathtt{bca}$$$ after it; </li><li> operation of the first type with $$$i=3$$$: string $$$s$$$ becomes $$$\\mathtt{bc}$$$ after it. </li></ol><p>In the third test case, it can be shown that it is impossible to obtain $$$t$$$ from $$$s$$$ using the provided operations.</p>",
    "contestId": 1898,
    "index": "E",
    "name": "Sofia and Strings",
    "type": "PROGRAMMING",
    "tags": [
        "data structures",
        "greedy",
        "sortings",
        "strings",
        "two pointers"
    ],
    "solvedCount": 2088
}