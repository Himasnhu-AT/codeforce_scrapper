{
    "title": "F. Santa Clauses and a Soccer Championship",
    "timeLimit": {
        "value": 2.0,
        "unit": "seconds"
    },
    "memoryLimit": {
        "value": 256.0,
        "unit": "megabytes"
    },
    "statement": "<p>The country Treeland consists of <span class=\"tex-span\"><i>n</i></span> cities connected with <span class=\"tex-span\"><i>n</i>\u2009-\u20091</span> bidirectional roads in such a way that it's possible to reach every city starting from any other city using these roads. There will be a soccer championship next year, and all participants are Santa Clauses. There are exactly <span class=\"tex-span\">2<i>k</i></span> teams from <span class=\"tex-span\">2<i>k</i></span> different cities.</p><p>During the first stage all teams are divided into <span class=\"tex-span\"><i>k</i></span> pairs. Teams of each pair play two games against each other: one in the hometown of the first team, and the other in the hometown of the other team. Thus, each of the <span class=\"tex-span\">2<i>k</i></span> cities holds exactly one soccer game. However, it's not decided yet how to divide teams into pairs.</p><p>It's also necessary to choose several cities to settle players in. Organizers tend to use <span class=\"tex-font-style-bf\">as few cities as possible</span> to settle the teams.</p><p>Nobody wants to travel too much during the championship, so if a team plays in cities <span class=\"tex-span\"><i>u</i></span> and <span class=\"tex-span\"><i>v</i></span>, it wants to live in one of the cities on the shortest path between <span class=\"tex-span\"><i>u</i></span> and <span class=\"tex-span\"><i>v</i></span> (maybe, in <span class=\"tex-span\"><i>u</i></span> or in <span class=\"tex-span\"><i>v</i></span>). There is another constraint also: the teams from one pair must live in the same city.</p><p>Summarizing, the organizers want to divide <span class=\"tex-span\">2<i>k</i></span> teams into pairs and settle them in the minimum possible number of cities <span class=\"tex-span\"><i>m</i></span> in such a way that teams from each pair live in the same city which lies between their hometowns.</p>",
    "inputSpecification": "<p>The first line of input contains two integers <span class=\"tex-span\"><i>n</i></span> and <span class=\"tex-span\"><i>k</i></span> (<span class=\"tex-span\">2\u2009\u2264\u2009<i>n</i>\u2009\u2264\u20092\u00b710<sup class=\"upper-index\">5</sup>,\u20092\u2009\u2264\u20092<i>k</i>\u2009\u2264\u2009<i>n</i></span>)\u00a0\u2014 the number of cities in Treeland and the number of pairs of teams, respectively.</p><p>The following <span class=\"tex-span\"><i>n</i>\u2009-\u20091</span> lines describe roads in Treeland: each of these lines contains two integers <span class=\"tex-span\"><i>a</i></span> and <span class=\"tex-span\"><i>b</i></span> (<span class=\"tex-span\">1\u2009\u2264\u2009<i>a</i>,\u2009<i>b</i>\u2009\u2264\u2009<i>n</i>,\u2009<i>a</i>\u2009\u2260\u2009<i>b</i></span>) which mean that there is a road between cities <span class=\"tex-span\"><i>a</i></span> and <span class=\"tex-span\"><i>b</i></span>. It's guaranteed that there is a path between any two cities.</p><p>The last line contains <span class=\"tex-span\">2<i>k</i></span> distinct integers <span class=\"tex-span\"><i>c</i><sub class=\"lower-index\">1</sub>,\u2009<i>c</i><sub class=\"lower-index\">2</sub>,\u2009...,\u2009<i>c</i><sub class=\"lower-index\">2<i>k</i></sub></span> (<span class=\"tex-span\">1\u2009\u2264\u2009<i>c</i><sub class=\"lower-index\"><i>i</i></sub>\u2009\u2264\u2009<i>n</i></span>), where <span class=\"tex-span\"><i>c</i><sub class=\"lower-index\"><i>i</i></sub></span> is the hometown of the <span class=\"tex-span\"><i>i</i></span>-th team. All these numbers are distinct.</p>",
    "outputSpecification": "<p>The first line of output must contain the only positive integer <span class=\"tex-span\"><i>m</i></span> which should be equal to the minimum possible number of cities the teams can be settled in.</p><p>The second line should contain <span class=\"tex-span\"><i>m</i></span> distinct numbers <span class=\"tex-span\"><i>d</i><sub class=\"lower-index\">1</sub>,\u2009<i>d</i><sub class=\"lower-index\">2</sub>,\u2009...,\u2009<i>d</i><sub class=\"lower-index\"><i>m</i></sub></span> (<span class=\"tex-span\">1\u2009\u2264\u2009<i>d</i><sub class=\"lower-index\"><i>i</i></sub>\u2009\u2264\u2009<i>n</i></span>) denoting the indices of the cities where the teams should be settled.</p><p>The <span class=\"tex-span\"><i>k</i></span> lines should follow, the <span class=\"tex-span\"><i>j</i></span>-th of them should contain <span class=\"tex-span\">3</span> integers <span class=\"tex-span\"><i>u</i><sub class=\"lower-index\"><i>j</i></sub></span>, <span class=\"tex-span\"><i>v</i><sub class=\"lower-index\"><i>j</i></sub></span> and <span class=\"tex-span\"><i>x</i><sub class=\"lower-index\"><i>j</i></sub></span>, where <span class=\"tex-span\"><i>u</i><sub class=\"lower-index\"><i>j</i></sub></span> and <span class=\"tex-span\"><i>v</i><sub class=\"lower-index\"><i>j</i></sub></span> are the hometowns of the <span class=\"tex-span\"><i>j</i></span>-th pair's teams, and <span class=\"tex-span\"><i>x</i><sub class=\"lower-index\"><i>j</i></sub></span> is the city they should live in during the tournament. Each of the numbers <span class=\"tex-span\"><i>c</i><sub class=\"lower-index\">1</sub>,\u2009<i>c</i><sub class=\"lower-index\">2</sub>,\u2009...,\u2009<i>c</i><sub class=\"lower-index\">2<i>k</i></sub></span> should occur in all <span class=\"tex-span\"><i>u</i><sub class=\"lower-index\"><i>j</i></sub></span>'s and <span class=\"tex-span\"><i>v</i><sub class=\"lower-index\"><i>j</i></sub></span>'s exactly once. Each of the numbers <span class=\"tex-span\"><i>x</i><sub class=\"lower-index\"><i>j</i></sub></span> should belong to <span class=\"tex-span\">{<i>d</i><sub class=\"lower-index\">1</sub>,\u2009<i>d</i><sub class=\"lower-index\">2</sub>,\u2009...,\u2009<i>d</i><sub class=\"lower-index\"><i>m</i></sub>}</span>.</p><p>If there are several possible answers, print any of them.</p>",
    "samples": [
        {
            "input": "6 2<br/>1 2<br/>1 3<br/>2 4<br/>2 5<br/>3 6<br/>2 5 4 6<br/>",
            "output": "1<br/>2<br/>5 4 2<br/>6 2 2<br/>"
        }
    ],
    "note": "<p>In the first test the orginizers can settle all the teams in the city number <span class=\"tex-span\">2</span>. The way to divide all teams into pairs is not important, since all requirements are satisfied anyway, because the city <span class=\"tex-span\">2</span> lies on the shortest path between every two cities from <span class=\"tex-span\">{2,\u20094,\u20095,\u20096}</span>.</p>",
    "contestId": 748,
    "index": "F",
    "name": "Santa Clauses and a Soccer Championship",
    "type": "PROGRAMMING",
    "tags": [
        "constructive algorithms",
        "dfs and similar",
        "graphs",
        "trees"
    ],
    "solvedCount": 634
}