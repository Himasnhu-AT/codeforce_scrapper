{
    "title": "H. Tree Diameter",
    "timeLimit": {
        "value": 2.0,
        "unit": "seconds"
    },
    "memoryLimit": {
        "value": 256.0,
        "unit": "megabytes"
    },
    "statement": "<p>There is a hidden tree with $$$n$$$ vertices. The $$$n-1$$$ edges of the tree are numbered from $$$1$$$ to $$$n-1$$$. You can ask the following queries of two types:</p><ol> <li> Give the grader an array $$$a$$$ with $$$n - 1$$$ <span class=\"tex-font-style-bf\">positive</span> integers. For each edge from $$$1$$$ to $$$n - 1$$$, the weight of edge $$$i$$$ is set to $$$a_i$$$. Then, the grader will return the length of the diameter$$$^\\dagger$$$. </li><li> Give the grader two indices $$$1 \\le a, b \\le n - 1$$$. The grader will return the number of edges between edges $$$a$$$ and $$$b$$$. In other words, if edge $$$a$$$ connects $$$u_a$$$ and $$$v_a$$$ while edge $$$b$$$ connects $$$u_b$$$ and $$$v_b$$$, the grader will return $$$\\min(\\text{dist}(u_a, u_b), \\text{dist}(v_a, u_b), \\text{dist}(u_a, v_b), \\text{dist}(v_a, v_b))$$$, where $$$\\text{dist}(u, v)$$$ represents the number of edges on the path between vertices $$$u$$$ and $$$v$$$. </li></ol><p>Find any tree isomorphic$$$^\\ddagger$$$ to the hidden tree after at most $$$n$$$ queries of type 1 and $$$n$$$ queries of type 2 in any order.</p><p>$$$^\\dagger$$$ The distance between two vertices is the sum of the weights on the unique simple path that connects them. The diameter is the largest of all those distances.</p><p>$$$^\\ddagger$$$ Two trees, consisting of $$$n$$$ vertices each, are called isomorphic if there exists a permutation $$$p$$$ containing integers from $$$1$$$ to $$$n$$$ such that edge ($$$u$$$, $$$v$$$) is present in the first tree if and only if the edge ($$$p_u$$$, $$$p_v$$$) is present in the second tree.</p>",
    "inputSpecification": "<p>The first and only line of input contains a single integer $$$n$$$ ($$$3 \\le n \\le 1000$$$)\u00a0\u2014 the number of vertices in the tree.</p>",
    "outputSpecification": null,
    "samples": [
        {
            "input": "\n5\n\n3\n\n1\n\n9\n\n0",
            "output": "\n\n? 1 1 1 1 1\n\n? 2 1 3\n\n? 1 4 3 2 1\n\n? 2 4 2\n\n!\n3 1\n4 2\n1 2\n2 5\n"
        }
    ],
    "note": "<p><img class=\"tex-graphics\" src=\"https://espresso.codeforces.com/04e60c463312a091bd51448117d09ed919721314.png\" style=\"max-width: 100.0%;max-height: 100.0%;\"/></p><p>The hidden tree in the example is shown above. The number on the vertices represents the vertex number while the number on the edges represents the edge number.</p><p><img class=\"tex-graphics\" src=\"https://espresso.codeforces.com/4337002a383234649a898b823a2157ac0988b24b.png\" style=\"max-width: 100.0%;max-height: 100.0%;\"/></p><p>In the first query, all the edges are set to weight $$$1$$$, so the diameter has length $$$3$$$ as shown in the diagram.</p><p>In the second query, there is $$$1$$$ edge between edges $$$1$$$ and $$$3$$$.</p><p><img class=\"tex-graphics\" src=\"https://espresso.codeforces.com/eb8a4b5acfb391ae149b45739c703fdf5c8cd363.png\" style=\"max-width: 100.0%;max-height: 100.0%;\"/></p><p>In the third query, the diameter is $$$9$$$ by taking edges $$$1$$$, $$$2$$$ and $$$3$$$.</p><p>In the fourth query, there are no edges between edges $$$4$$$ and $$$2$$$.</p><p><img class=\"tex-graphics\" src=\"https://espresso.codeforces.com/012faa895ca4899a44456aef44d56bc6c82424b4.png\" style=\"max-width: 100.0%;max-height: 100.0%;\"/></p><p>The answer given in the example is shown in the above diagram. Since it is isomorphic to the hidden tree, it is accepted as a correct answer. Note that the edges can be printed in any order.</p>",
    "contestId": 1919,
    "index": "H",
    "name": "Tree Diameter",
    "type": "PROGRAMMING",
    "tags": [
        "interactive",
        "trees"
    ],
    "solvedCount": 135
}