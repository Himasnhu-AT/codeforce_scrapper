{
    "title": "E. The Harmonization of XOR",
    "timeLimit": {
        "value": 1.0,
        "unit": "second"
    },
    "memoryLimit": {
        "value": 256.0,
        "unit": "megabytes"
    },
    "statement": "<p>You are given an array of exactly $$$n$$$ numbers $$$[1,2,3,\\ldots,n]$$$ along with integers $$$k$$$ and $$$x$$$.</p><p>Partition the array in exactly $$$k$$$ non-empty disjoint subsequences such that the <a href=\"https://en.wikipedia.org/wiki/Bitwise_operation#XOR\">bitwise XOR</a> of all numbers in each subsequence is $$$x$$$, and each number is in exactly one subsequence. Notice that there are no constraints on the length of each subsequence.</p><p>A sequence $$$a$$$ is a subsequence of a sequence $$$b$$$ if $$$a$$$ can be obtained from $$$b$$$ by the deletion of several (possibly, zero or all) elements.</p><p>For example, for $$$n = 15$$$, $$$k = 6$$$, $$$x = 7$$$, the following scheme is valid: </p><ul> <li> $$$[6,10,11]$$$, $$$6 \\oplus 10 \\oplus 11 = 7$$$, </li><li> $$$[5,12,14]$$$, $$$5 \\oplus 12 \\oplus 14 = 7$$$, </li><li> $$$[3,9,13]$$$, $$$3 \\oplus 9 \\oplus 13 = 7$$$, </li><li> $$$[1,2,4]$$$, $$$1 \\oplus 2 \\oplus 4 = 7$$$, </li><li> $$$[8,15]$$$, $$$8 \\oplus 15 = 7$$$, </li><li> $$$[7]$$$, $$$7 = 7$$$, </li></ul> where $$$\\oplus$$$ represents the bitwise XOR operation.<p>The following scheme is invalid, since $$$8$$$, $$$15$$$ do not appear: </p><ul> <li> $$$[6,10,11]$$$, $$$6 \\oplus 10 \\oplus 11 = 7$$$, </li><li> $$$[5,12,14]$$$, $$$5 \\oplus 12 \\oplus 14 = 7$$$, </li><li> $$$[3,9,13]$$$, $$$3 \\oplus 9 \\oplus 13 = 7$$$, </li><li> $$$[1,2,4]$$$, $$$1 \\oplus 2 \\oplus 4 = 7$$$, </li><li> $$$[7]$$$, $$$7 = 7$$$. </li></ul><p>The following scheme is invalid, since $$$3$$$ appears twice, and $$$1$$$, $$$2$$$ do not appear: </p><ul> <li> $$$[6,10,11]$$$, $$$6 \\oplus 10 \\oplus 11 = 7$$$, </li><li> $$$[5,12,14]$$$, $$$5 \\oplus 12 \\oplus 14 = 7$$$, </li><li> $$$[3,9,13]$$$, $$$3 \\oplus 9 \\oplus 13 = 7$$$, </li><li> $$$[3,4]$$$, $$$3 \\oplus 4 = 7$$$, </li><li> $$$[8,15]$$$, $$$8 \\oplus 15 = 7$$$, </li><li> $$$[7]$$$, $$$7 = 7$$$. </li></ul>",
    "inputSpecification": "<p>Each test contains multiple test cases. The first line contains an integer $$$t$$$ ($$$1 \\le t \\le 10^4$$$) \u2014 the number of test cases. </p><p>The first and the only line of each test case contains three integers $$$n$$$, $$$k$$$, $$$x$$$ ($$$1 \\le k \\le n \\le 2 \\cdot 10^5$$$; $$$1\\le x \\le 10^9$$$) \u2014 the length of the array, the number of subsequences and the required XOR.</p><p>It's guaranteed that the sum of $$$n$$$ does not exceed $$$2 \\cdot 10^5$$$.</p>",
    "outputSpecification": "<p>For each test case, if it is possible to partition the sequence, print \"<span class=\"tex-font-style-tt\">YES</span>\" in the first line. In the $$$i$$$-th of the following $$$k$$$ lines first print the length $$$s_i$$$ of the $$$i$$$-th subsequence, then print $$$s_i$$$ integers, representing the elements in the $$$i$$$-th subsequence. If there are multiple answers, print any. Note that you can print a subsequence in any order.</p><p>If it is not possible to partition the sequence, print \"<span class=\"tex-font-style-tt\">NO</span>\".</p>",
    "samples": [
        {
            "input": "\n<div class=\"test-example-line test-example-line-even test-example-line-0\">7</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">15 6 7</div><div class=\"test-example-line test-example-line-even test-example-line-2\">11 4 5</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">5 3 2</div><div class=\"test-example-line test-example-line-even test-example-line-4\">4 1 4</div><div class=\"test-example-line test-example-line-odd test-example-line-5\">6 1 7</div><div class=\"test-example-line test-example-line-even test-example-line-6\">11 5 5</div><div class=\"test-example-line test-example-line-odd test-example-line-7\">11 6 5</div>",
            "output": "\nYES\n3 6 10 11\n3 5 12 14\n3 3 9 13\n3 1 2 4\n2 8 15\n1 7\nYES\n2 1 4\n2 2 7\n2 3 6\n5 5 8 9 10 11\nNO\nYES\n4 1 2 3 4\nYES\n6 1 2 3 4 5 6\nNO\nNO"
        }
    ],
    "note": "<p>In the first test case, we construct the following $$$6$$$ subsequences: </p><ul> <li> $$$[6,10,11]$$$, $$$6 \\oplus 10 \\oplus 11 = 7$$$, </li><li> $$$[5,12,14]$$$, $$$5 \\oplus 12 \\oplus 14 = 7$$$, </li><li> $$$[3,9,13]$$$, $$$3 \\oplus 9 \\oplus 13 = 7$$$, </li><li> $$$[1,2,4]$$$, $$$1 \\oplus 2 \\oplus 4 = 7$$$, </li><li> $$$[8,15]$$$, $$$8 \\oplus 15 = 7$$$, </li><li> $$$[7]$$$, $$$7 = 7$$$. </li></ul><p>In the second test case, we construct the following $$$4$$$ subsequences: </p><ul> <li> $$$[1,4]$$$, $$$1 \\oplus 4 = 5$$$, </li><li> $$$[2,7]$$$, $$$2 \\oplus 7 = 5$$$, </li><li> $$$[3,6]$$$, $$$3 \\oplus 6 = 5$$$, </li><li> $$$[5,8,9,10,11]$$$, $$$5 \\oplus 8 \\oplus 9 \\oplus 10 \\oplus 11 = 5$$$. </li></ul><p>The following solution is considered correct in this test case as well: </p><ul> <li> $$$[1,4]$$$, $$$1 \\oplus 4 = 5$$$, </li><li> $$$[2,7]$$$, $$$2 \\oplus 7 = 5$$$, </li><li> $$$[5]$$$, $$$5 = 5$$$, </li><li> $$$[3,6,8,9,10,11]$$$, $$$3 \\oplus 6 \\oplus 8 \\oplus 9 \\oplus 10 \\oplus 11 = 5$$$. </li></ul>",
    "contestId": 1787,
    "index": "E",
    "name": "The Harmonization of XOR",
    "type": "PROGRAMMING",
    "tags": [
        "bitmasks",
        "constructive algorithms",
        "greedy",
        "math"
    ],
    "solvedCount": 2206
}