{
    "title": "G. The Tree",
    "timeLimit": {
        "value": 3.0,
        "unit": "seconds"
    },
    "memoryLimit": {
        "value": 256.0,
        "unit": "megabytes"
    },
    "statement": "<p>Abendsen assigned a mission to Juliana. In this mission, Juliana has a rooted tree with $$$n$$$ vertices. Vertex number $$$1$$$ is the root of this tree. Each vertex can be either black or white. At first, all vertices are white. Juliana is asked to process $$$q$$$ queries. Each query is one of three types:</p><ol> <li> If vertex $$$v$$$ is white, mark it as black; otherwise, perform this operation on all direct sons of $$$v$$$ instead. </li><li> Mark all vertices in the subtree of $$$v$$$ (including $$$v$$$) as white. </li><li> Find the color of the $$$i$$$-th vertex. </li></ol><center> <img class=\"tex-graphics\" height=\"212px\" src=\"https://espresso.codeforces.com/5cbb8a1fa462b9ee4ed0b50e68a17e4f79bc8886.png\" style=\"max-width: 100.0%;max-height: 100.0%;\" width=\"510px\"/> <span class=\"tex-font-size-small\">An example of operation \"<span class=\"tex-font-style-tt\">1 1</span>\" (corresponds to the first example test). The vertices $$$1$$$ and $$$2$$$ are already black, so the operation goes to their sons instead.</span> </center><p>Can you help Juliana to process all these queries?</p>",
    "inputSpecification": "<p>The first line contains two integers $$$n$$$ and $$$q$$$ ($$$2\\leq n\\leq 10^5$$$, $$$1\\leq q\\leq 10^5$$$)\u00a0\u2014 the number of vertices and the number of queries.</p><p>The second line contains $$$n-1$$$ integers $$$p_2, p_3, \\ldots, p_n$$$ ($$$1\\leq p_i&lt;i$$$), where $$$p_i$$$ means that there is an edge between vertices $$$i$$$ and $$$p_i$$$. </p><p>Each of the next $$$q$$$ lines contains two integers $$$t_i$$$ and $$$v_i$$$ ($$$1\\leq t_i\\leq 3$$$, $$$1\\leq v_i\\leq n$$$)\u00a0\u2014 the type of the $$$i$$$-th query and the vertex of the $$$i$$$-th query.</p><p>It is guaranteed that the given graph is a tree.</p>",
    "outputSpecification": "<p>For each query of type $$$3$$$, print \"<span class=\"tex-font-style-tt\">black</span>\" if the vertex is black; otherwise, print \"<span class=\"tex-font-style-tt\">white</span>\".</p>",
    "samples": [
        {
            "input": "8 10<br/>1 2 1 2 5 4 5<br/>1 2<br/>3 2<br/>3 1<br/>1 1<br/>1 1<br/>3 5<br/>3 7<br/>3 4<br/>2 2<br/>3 5<br/>",
            "output": "black<br/>white<br/>black<br/>white<br/>black<br/>white<br/>"
        },
        {
            "input": "8 11<br/>1 1 2 3 3 6 6<br/>1 1<br/>1 1<br/>1 3<br/>3 2<br/>3 4<br/>3 6<br/>3 7<br/>2 3<br/>1 6<br/>3 7<br/>3 6<br/>",
            "output": "black<br/>white<br/>black<br/>white<br/>white<br/>black<br/>"
        }
    ],
    "note": "<p>The first example is shown on the picture below.</p><center> <img class=\"tex-graphics\" height=\"321px\" src=\"https://espresso.codeforces.com/522ccf39820a5d28773cc7032cae45cb786ce6f3.png\" style=\"max-width: 100.0%;max-height: 100.0%;\" width=\"605px\"/> </center><p>The second example is shown on the picture below.</p><center> <img class=\"tex-graphics\" height=\"265px\" src=\"https://espresso.codeforces.com/6db356bd2d29f93b45d5e00d805bcc6f716ebfea.png\" style=\"max-width: 100.0%;max-height: 100.0%;\" width=\"605px\"/> </center>",
    "contestId": 1017,
    "index": "G",
    "name": "The Tree",
    "type": "PROGRAMMING",
    "tags": [
        "data structures"
    ],
    "solvedCount": 840
}