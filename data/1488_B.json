{
    "title": "B. RBS Deletion",
    "timeLimit": {
        "value": 3.0,
        "unit": "seconds"
    },
    "memoryLimit": {
        "value": 512.0,
        "unit": "megabytes"
    },
    "statement": "<p>A bracket sequence is a string containing only characters \"<span class=\"tex-font-style-tt\">(</span>\" and \"<span class=\"tex-font-style-tt\">)</span>\". A regular bracket sequence (or, shortly, an RBS) is a bracket sequence that can be transformed into a correct arithmetic expression by inserting characters \"<span class=\"tex-font-style-tt\">1</span>\" and \"<span class=\"tex-font-style-tt\">+</span>\" between the original characters of the sequence. For example:</p><ul> <li> bracket sequences \"<span class=\"tex-font-style-tt\">()()</span>\" and \"<span class=\"tex-font-style-tt\">(())</span>\" are regular (the resulting expressions are: \"<span class=\"tex-font-style-tt\">(1)+(1)</span>\" and \"<span class=\"tex-font-style-tt\">((1+1)+1)</span>\"); </li><li> bracket sequences \"<span class=\"tex-font-style-tt\">)(</span>\", \"<span class=\"tex-font-style-tt\">(</span>\" and \"<span class=\"tex-font-style-tt\">)</span>\" are not. </li></ul><p>You are given a string $$$s$$$, which is an RBS. You can apply any number of operations to this string. Each operation can have one of the following types:</p><ol> <li> choose some non-empty prefix of $$$s$$$ and remove it from $$$s$$$, so $$$s$$$ is still an RBS. For example, we can apply this operation as follows: \"<span class=\"tex-font-style-tt\"><span class=\"tex-font-style-bf\">(())()(())</span>()()</span>\" $$$\\to$$$ \"<span class=\"tex-font-style-tt\">()()</span>\" (the first $$$10$$$ characters are removed); </li><li> choose some <span class=\"tex-font-style-bf\">contiguous</span> non-empty substring of $$$s$$$ and remove it from $$$s$$$, so $$$s$$$ is still an RBS. For example, we can apply this operation as follows: \"<span class=\"tex-font-style-tt\">(())()<span class=\"tex-font-style-bf\">(())</span>()()</span>\" $$$\\to$$$ \"<span class=\"tex-font-style-tt\">(())()()()</span>\" (the characters from the $$$7$$$-th to the $$$10$$$-th are removed). </li></ol><p>The operation $$$2$$$ can be applied at most $$$k$$$ times. Calculate the maximum number of operations you can apply until $$$s$$$ becomes empty.</p>",
    "inputSpecification": "<p>The first line contains one integer $$$t$$$ ($$$1 \\le t \\le 10^5$$$) \u2014 the number of test cases.</p><p>Each test case is described by two lines. The first line contains two integers $$$n$$$ and $$$k$$$ ($$$2 \\le n \\le 2 \\cdot 10^5$$$; $$$1 \\le k \\le n$$$; $$$n$$$ is even) \u2014 the length of $$$s$$$ and the maximum number of operations of type $$$2$$$ you can apply.</p><p>The second line contains a string $$$s$$$ of $$$n$$$ characters '<span class=\"tex-font-style-tt\">(</span>' and '<span class=\"tex-font-style-tt\">)</span>'. This string is an RBS.</p><p>The sum of $$$n$$$ over all test cases doesn't exceed $$$2 \\cdot 10^5$$$.</p>",
    "outputSpecification": "<p>For each test case, print one integer \u2014 the maximum number of operations you can apply.</p>",
    "samples": [
        {
            "input": "\n3\n12 2\n(()())((()))\n6 3\n()()()\n8 1\n(((())))\n",
            "output": "\n4\n3\n2\n"
        }
    ],
    "note": null,
    "contestId": 1488,
    "index": "B",
    "name": "RBS Deletion",
    "type": "PROGRAMMING",
    "tags": [
        "*special",
        "greedy"
    ],
    "solvedCount": 542
}