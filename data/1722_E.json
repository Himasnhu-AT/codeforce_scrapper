{
    "title": "E. Counting Rectangles",
    "timeLimit": {
        "value": 6.0,
        "unit": "seconds"
    },
    "memoryLimit": {
        "value": 256.0,
        "unit": "megabytes"
    },
    "statement": "<p>You have $$$n$$$ rectangles, the $$$i$$$-th rectangle has height $$$h_i$$$ and width $$$w_i$$$.</p><p>You are asked $$$q$$$ queries of the form $$$h_s \\ w_s \\ h_b \\ w_b$$$. </p><p>For each query output, the total area of rectangles you own that <span class=\"tex-font-style-bf\">can fit </span>a rectangle of height $$$h_s$$$ and width $$$w_s$$$ while also <span class=\"tex-font-style-bf\">fitting in</span> a rectangle of height $$$h_b$$$ and width $$$w_b$$$. In other words, print $$$\\sum h_i \\cdot w_i$$$ for $$$i$$$ such that $$$h_s &lt; h_i &lt; h_b$$$ and $$$w_s &lt; w_i &lt; w_b$$$. </p><p><span class=\"tex-font-style-bf\">Please note, that if two rectangles have the same height or the same width, then they <span class=\"tex-font-style-it\">cannot</span> fit inside each other.</span> Also note that you <span class=\"tex-font-style-bf\">cannot</span> rotate rectangles.</p><p>Please note that the answer for some test cases won't fit into 32-bit integer type, so you should use at least 64-bit integer type in your programming language (like <span class=\"tex-font-style-tt\">long long</span> for C++).</p>",
    "inputSpecification": "<p>The first line of the input contains an integer $$$t$$$ ($$$1 \\leq t \\leq 100$$$)\u00a0\u2014 the number of test cases.</p><p>The first line of each test case two integers $$$n, q$$$ ($$$1 \\leq n \\leq 10^5$$$; $$$1 \\leq q \\leq 10^5$$$)\u00a0\u2014 the number of rectangles you own and the number of queries.</p><p>Then $$$n$$$ lines follow, each containing two integers $$$h_i, w_i$$$ ($$$1 \\leq h_i, w_i \\leq 1000$$$)\u00a0\u2014 the height and width of the $$$i$$$-th rectangle.</p><p>Then $$$q$$$ lines follow, each containing four integers $$$h_s, w_s, h_b, w_b$$$ ($$$1 \\leq h_s &lt; h_b,\\ w_s &lt; w_b \\leq 1000$$$)\u00a0\u2014 the description of each query.</p><p>The sum of $$$q$$$ over all test cases does not exceed $$$10^5$$$, and the sum of $$$n$$$ over all test cases does not exceed $$$10^5$$$.</p>",
    "outputSpecification": "<p>For each test case, output $$$q$$$ lines, the $$$i$$$-th line containing the answer to the $$$i$$$-th query.</p>",
    "samples": [
        {
            "input": "\n<div class=\"test-example-line test-example-line-even test-example-line-0\">3</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">2 1</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">2 3</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">3 2</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">1 1 3 4</div><div class=\"test-example-line test-example-line-even test-example-line-2\">5 5</div><div class=\"test-example-line test-example-line-even test-example-line-2\">1 1</div><div class=\"test-example-line test-example-line-even test-example-line-2\">2 2</div><div class=\"test-example-line test-example-line-even test-example-line-2\">3 3</div><div class=\"test-example-line test-example-line-even test-example-line-2\">4 4</div><div class=\"test-example-line test-example-line-even test-example-line-2\">5 5</div><div class=\"test-example-line test-example-line-even test-example-line-2\">3 3 6 6</div><div class=\"test-example-line test-example-line-even test-example-line-2\">2 1 4 5</div><div class=\"test-example-line test-example-line-even test-example-line-2\">1 1 2 10</div><div class=\"test-example-line test-example-line-even test-example-line-2\">1 1 100 100</div><div class=\"test-example-line test-example-line-even test-example-line-2\">1 1 3 3</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">3 1</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">999 999</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">999 999</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">999 998</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">1 1 1000 1000</div>",
            "output": "\n6\n41\n9\n0\n54\n4\n2993004\n"
        }
    ],
    "note": "<center> <img class=\"tex-graphics\" src=\"https://espresso.codeforces.com/7b5085a1e5de63f1f939687ca60666a581423515.png\" style=\"max-width: 100.0%;max-height: 100.0%;\"/> </center><p>In the first test case, there is only one query. We need to find the sum of areas of all rectangles that can fit a $$$1 \\times 1$$$ rectangle inside of it and fit into a $$$3 \\times 4$$$ rectangle.</p><p>Only the $$$2 \\times 3$$$ rectangle works, because $$$1 &lt; 2$$$ (comparing heights) and $$$1 &lt; 3$$$ (comparing widths), so the $$$1 \\times 1$$$ rectangle fits inside, and $$$2 &lt; 3$$$ (comparing heights) and $$$3 &lt; 4$$$ (comparing widths), so it fits inside the $$$3 \\times 4$$$ rectangle. The $$$3 \\times 2$$$ rectangle is too tall to fit in a $$$3 \\times 4$$$ rectangle. The total area is $$$2 \\cdot 3 = 6$$$.</p>",
    "contestId": 1722,
    "index": "E",
    "name": "Counting Rectangles",
    "type": "PROGRAMMING",
    "tags": [
        "brute force",
        "data structures",
        "dp",
        "implementation"
    ],
    "solvedCount": 10226
}