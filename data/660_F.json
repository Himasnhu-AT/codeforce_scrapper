{
    "title": "F. Bear and Bowling 4",
    "timeLimit": {
        "value": 2.0,
        "unit": "seconds"
    },
    "memoryLimit": {
        "value": 256.0,
        "unit": "megabytes"
    },
    "statement": "<p>Limak is an old brown bear. He often goes bowling with his friends. Today he feels really good and tries to beat his own record!</p><p>For rolling a ball one gets a score \u2014 an integer (maybe negative) number of points. Score for the <span class=\"tex-span\"><i>i</i></span>-th roll is multiplied by <span class=\"tex-span\"><i>i</i></span> and scores are summed up. So, for <span class=\"tex-span\"><i>k</i></span> rolls with scores <span class=\"tex-span\"><i>s</i><sub class=\"lower-index\">1</sub>,\u2009<i>s</i><sub class=\"lower-index\">2</sub>,\u2009...,\u2009<i>s</i><sub class=\"lower-index\"><i>k</i></sub></span>, the total score is <img align=\"middle\" class=\"tex-formula\" src=\"https://espresso.codeforces.com/c8a1cac733e2c38459a7a155ea158ee99d347e49.png\" style=\"max-width: 100.0%;max-height: 100.0%;\"/>. The total score is <span class=\"tex-span\">0</span> if there were no rolls.</p><p>Limak made <span class=\"tex-span\"><i>n</i></span> rolls and got score <span class=\"tex-span\"><i>a</i><sub class=\"lower-index\"><i>i</i></sub></span> for the <span class=\"tex-span\"><i>i</i></span>-th of them. He wants to maximize his total score and he came up with an interesting idea. He can say that some first rolls were only a warm-up, and that he wasn't focused during the last rolls. More formally, he can cancel any prefix and any suffix of the sequence <span class=\"tex-span\"><i>a</i><sub class=\"lower-index\">1</sub>,\u2009<i>a</i><sub class=\"lower-index\">2</sub>,\u2009...,\u2009<i>a</i><sub class=\"lower-index\"><i>n</i></sub></span>. It is allowed to cancel all rolls, or to cancel none of them.</p><p>The total score is calculated as if there were only non-canceled rolls. So, the first non-canceled roll has score multiplied by <span class=\"tex-span\">1</span>, the second one has score multiplied by <span class=\"tex-span\">2</span>, and so on, till the last non-canceled roll.</p><p>What maximum total score can Limak get?</p>",
    "inputSpecification": "<p>The first line contains a single integer <span class=\"tex-span\"><i>n</i></span> (<span class=\"tex-span\">1\u2009\u2264\u2009<i>n</i>\u2009\u2264\u20092\u00b710<sup class=\"upper-index\">5</sup></span>) \u2014 the total number of rolls made by Limak.</p><p>The second line contains <span class=\"tex-span\"><i>n</i></span> integers <span class=\"tex-span\"><i>a</i><sub class=\"lower-index\">1</sub>,\u2009<i>a</i><sub class=\"lower-index\">2</sub>,\u2009...,\u2009<i>a</i><sub class=\"lower-index\"><i>n</i></sub></span> (<span class=\"tex-span\">|<i>a</i><sub class=\"lower-index\"><i>i</i></sub>|\u2009\u2264\u200910<sup class=\"upper-index\">7</sup>)</span> \u2014 scores for Limak's rolls.</p>",
    "outputSpecification": "<p>Print the maximum possible total score after cancelling rolls.</p>",
    "samples": [
        {
            "input": "6<br/>5 -1000 1 -3 7 -8<br/>",
            "output": "16<br/>"
        },
        {
            "input": "5<br/>1000 1000 1001 1000 1000<br/>",
            "output": "15003<br/>"
        },
        {
            "input": "3<br/>-60 -70 -80<br/>",
            "output": "0<br/>"
        }
    ],
    "note": "<p>In the first sample test, Limak should cancel the first two rolls, and one last roll. He will be left with rolls <span class=\"tex-span\">1,\u2009\u2009-\u20093,\u20097</span> what gives him the total score <span class=\"tex-span\">1\u00b71\u2009+\u20092\u00b7(\u2009-\u20093)\u2009+\u20093\u00b77\u2009=\u20091\u2009-\u20096\u2009+\u200921\u2009=\u200916</span>.</p>",
    "contestId": 660,
    "index": "F",
    "name": "Bear and Bowling 4",
    "type": "PROGRAMMING",
    "tags": [
        "binary search",
        "data structures",
        "divide and conquer",
        "geometry",
        "ternary search"
    ],
    "solvedCount": 1536
}