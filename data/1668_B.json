{
    "title": "B. Social Distance",
    "timeLimit": {
        "value": 1.5,
        "unit": "seconds"
    },
    "memoryLimit": {
        "value": 256.0,
        "unit": "megabytes"
    },
    "statement": "<p>$$$m$$$ chairs are arranged in a circle sequentially. The chairs are numbered from $$$0$$$ to $$$m-1$$$. $$$n$$$ people want to sit in these chairs. The $$$i$$$-th of them wants at least $$$a[i]$$$ empty chairs both on his right and left side. </p><p>More formally, if the $$$i$$$-th person sits in the $$$j$$$-th chair, then no one else should sit in the following chairs: $$$(j-a[i]) \\bmod m$$$, $$$(j-a[i]+1) \\bmod m$$$, ... $$$(j+a[i]-1) \\bmod m$$$, $$$(j+a[i]) \\bmod m$$$.</p><p>Decide if it is possible to sit down for all of them, under the given limitations.</p>",
    "inputSpecification": "<p>The input consists of multiple test cases. The first line contains a single integer $$$t$$$ ($$$1 \\leq t \\leq 5 \\cdot 10^4$$$) \u2014 the number of test cases. The description of the test cases follows.</p><p>The first line of each test case contains two integers $$$n$$$ and $$$m$$$ ($$$2 \\leq n \\leq 10^5$$$, $$$1 \\leq m \\leq 10^9$$$) \u2014 the number of people and the number of chairs.</p><p>The next line contains $$$n$$$ integers, $$$a_1$$$, $$$a_2$$$, ... $$$a_n$$$ ($$$1 \\leq a_i \\leq 10^9$$$) \u2014 the minimum number of empty chairs, on both sides of the $$$i$$$-th person.</p><p>It is guaranteed that the sum of $$$n$$$ over all test cases will not exceed $$$10^5$$$.</p>",
    "outputSpecification": "<p>For each test case print \"YES\" (without quotes) if it is possible for everyone to sit down and fulfil the restrictions, and \"NO\" (without quotes) otherwise.</p><p>You may print every letter in any case you want (so, for example, the strings \"yEs\", \"yes\", \"Yes\" and \"YES\" will all be recognized as positive answers).</p>",
    "samples": [
        {
            "input": "\n6\n3 2\n1 1 1\n2 4\n1 1\n2 5\n2 1\n3 8\n1 2 1\n4 12\n1 2 1 3\n4 19\n1 2 1 3\n",
            "output": "\nNO\nYES\nNO\nYES\nNO\nYES\n"
        }
    ],
    "note": "<p>Test case $$$1$$$: $$$n&gt;m$$$, so they can not sit down.</p><p>Test case $$$2$$$: the first person can sit $$$2$$$-nd and the second person can sit in the $$$0$$$-th chair. Both of them want at least $$$1$$$ empty chair on both sides, chairs $$$1$$$ and $$$3$$$ are free, so this is a good solution.</p><p>Test case $$$3$$$: if the second person sits down somewhere, he needs $$$2$$$ empty chairs, both on his right and on his left side, so it is impossible to find a place for the first person, because there are only $$$5$$$ chairs.</p><p>Test case $$$4$$$: they can sit in the $$$1$$$-st, $$$4$$$-th, $$$7$$$-th chairs respectively.</p>",
    "contestId": 1668,
    "index": "B",
    "name": "Social Distance",
    "type": "PROGRAMMING",
    "tags": [
        "greedy",
        "math",
        "sortings"
    ],
    "solvedCount": 16389
}